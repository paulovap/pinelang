
buildscript {
	ext.compose_version = '0.1.0-dev14'
	ext.kotlin_version = '1.3.72'
	ext.dokka_version = '0.10.1'

	repositories {
		google()
		mavenLocal()
		mavenCentral()
		jcenter()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}

	dependencies {
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
		classpath 'com.android.tools.build:gradle:4.2.0-alpha04'
		classpath "androidx.benchmark:benchmark-gradle-plugin:1.0.0"
		classpath "org.jetbrains.dokka:dokka-gradle-plugin:${dokka_version}"

	}
}

plugins {
	id 'org.jetbrains.kotlin.jvm' version '1.3.72'
	id "com.diffplug.gradle.spotless" version "4.5.1"
	id 'org.jetbrains.dokka' version '0.10.1'
}

apply plugin: 'antlr'

group 'com.flexscript'
version '1.0-SNAPSHOT'


dokka {
	outputFormat = 'html'
	outputDirectory = "$buildDir/dokka"
	subProjects = [':pinelangandroid', 'core', 'lsp', ':android']
	if (project.file('Module.md').exists()) {
		includes = ['Module.md']
	}
}

allprojects {

	tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
		kotlinOptions {
			freeCompilerArgs += [
					"-Xuse-experimental=kotlin.ExperimentalUnsignedTypes",
					"-XXLanguage:+InlineClasses",
					"-Xopt-in=kotlin.RequiresOptIn"
			]
		}
	}

	kotlin {
		experimental {
			coroutines "enable"
		}
		compileKotlin {
			kotlinOptions.jvmTarget = "1.8"
		}
		compileTestKotlin {
			kotlinOptions.jvmTarget = "1.8"
		}
	}

	apply plugin: "com.diffplug.gradle.spotless"
	apply plugin: "org.jetbrains.dokka"

	spotless {
		// optional: limit format enforcement to just the files changed by this feature branch
		//ratchetFrom 'origin/main'
		enforceCheck false
		format 'misc', {
			// define the files to apply `misc` to
			target '*.gradle', '*.md', '.gitignore'

			// define the steps to apply to those files
			trimTrailingWhitespace()
			indentWithTabs() // or spaces. Takes an integer argument if you don't like 4
			endWithNewline()
		}

		kotlin {
			// by default the target is every '.kt' and '.kts` file in the java sourcesets
			ktlint()   // has its own section below
			//ktfmt('0.15')    // has its own section below
			//prettier() // has its own section below
			licenseHeaderFile "${rootProject.projectDir}/.license_header", '(package)'
		}
	}

	repositories {
		google()
		mavenLocal()
		mavenCentral()
		jcenter()
	}
}
