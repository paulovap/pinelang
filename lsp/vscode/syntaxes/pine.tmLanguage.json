{
	"name": "Pine",
	"scopeName": "source.pine",
	"patterns": [
		{
			"include": "#comment"
		},
		{
			"include": "#object"
		}
	],
	"repository": {
		"object": {
			"begin": "\\b([A-Z][a-zA-Z_0-9]*)\\s*{",
			"beginCaptures": {
				"1": {
					"name": "entity.name.class.pine"
				}
			},
			"end": "}",
			"name": "meta.object.pine",
			"patterns": [
				{
					"include": "#object-signal"
				},
				{
					"include": "#comment"
				},
				{
					"include": "#object"
				},
				{
					"include": "#object-id"
				},
				{
					"include": "#object-property"
				}
			]
		},
		"object-id": {
			"begin": "(id):\\s*",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.untitled.pine"
				}
			},
			"end": "[;\\n]",
			"endCaptures": {
				"1": {
					"name": "variable.language.pine"
				}
			},
			"patterns":[
				{
					"include": "#identifier"
				}
			]
		},
		"object-signal": {
			"begin": "(on)\\s([a-z][a-zA-Z_0-9]*):\\s*",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.untitled.pine"
				},
				"2": {
					"name": "variable.language.pine"
				}
			},
			"end": ";?\\s*\\n",
			"patterns": [
				{ "include": "#callable"}
			]
		},
		"object-property": {
			"begin": "([a-z][a-zA-Z_0-9]*):\\s*",
			"beginCaptures": {
				"1": {
					"name": "support.variable.pine"
				}
			},
			"end": "\\s*\\n",
			"patterns":[
				{ "include": "#string-literal"},
				{ "include": "#float"},
				{ "include": "#integer"},
				{ "include": "#property-reference"},
				{ "include": "#callable"}
			]
		},
		"identifier": {
			"match": "\\b([a-z][a-zA-Z]*)\\b",
			"name": "support.variable.pine"
		},
		"comment": {
			"patterns":[
				{
					"begin": "\/\/.*",
					
					"name": "comment.line.double-slash.pine"
				}
			]
			
		},
		"property-reference": {
			"match": "[a-z][a-zA-z]*(\\.[a-z][a-zA-z]*)*(?=;?\\s*\\n)",
			"name": "support.variable.pine"
		},
		"callable": {
			"begin": "([a-z][a-zA-z]*(\\.[a-z][a-zA-z]*)*)\\(",
			"beginCaptures": {
				"1": {
					"name": "support.function.pine"
				}
			},
			"end": "\\)"
		},
		"string-literal" : {
			"begin": "\"",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.lua"
				}
			},
			"end": "\"",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.lua"
				}
			},
			"name": "string.quoted.double.lua",
			"patterns": [
				{
					"include": "#escaped_char"
				}
			]
		},
		"integer": {
			"match": "(?<![\\w\\d.])\\d+(?![pPeE.0-9])",
			"name": "constant.numeric.integer.pine"
		},
		"float": {
			"match": "(?<![\\w\\d.])\\d+(\\.\\d+)?([eE]-?\\d*)?",
			"name": "constant.numeric.float.pine"
		},
		"escaped_char": {
			"patterns": [
				{
					"match": "\\\\[abfnrtvz\\\\\"'\\n]",
					"name": "constant.character.escape.pine"
				},
				{
					"match": "\\\\\\d{1,3}",
					"name": "constant.character.escape.byte.pine"
				},
				{
					"match": "\\\\x[0-9A-Fa-f][0-9A-Fa-f]",
					"name": "constant.character.escape.byte.pine"
				},
				{
					"match": "\\\\u\\{[0-9A-Fa-f]+\\}",
					"name": "constant.character.escape.unicode.pine"
				},
				{
					"match": "\\\\.",
					"name": "invalid.illegal.character.escape.pine"
				}
			]
		}
	}
}