{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Pinelang \u00b6 Pinelang or just \u201cPine\u201d is a scripting language inspired in QML that sits on top of Kotlin/JVM. The objective is to represent a tree-like object hierarchy in a declarative way. It can be use to expose regular Kotlin objects and use it as a script. For example: Object { on mount: println(\"hello world\") } It will print hello world to the standard output. Usage \u00b6 First you must instantiate a PineEngine to be able to evaluate the scripts. fun main () { var scriptEngine = PineEngine . Builder () . registerPineType ( \"Object\" ) { PineObject () } . build () // Now we evaluate the script val root = scriptEngine . load ( \"Object { on mount: println('hello world') }\" ) // prints \"hello world\" root . dispose () // clean up resources } PineObject type \u00b6 PineObject class is the base class for all PineScript types. It consists on the following properties: class PineObject { // unique identifier for the object in a object-tree val id : Int // children elements of the object val children : List < PineObject > // map of properties accessible by script val nameProps : Map < String , PineProp <*>> // map of signals (or events) emitted by object val signals : Map < String , PineSignal > // map of all functions exposed to a script val callables : Map < String , PineCallable > } Basically every type exposed to a script needs to extend PineObject. The basic functionality provided by PineObject are: Signals \u00b6 mount \u00b6 Signal emitted as object is inserted on the object tree of the script. Useful for initialization of resources unmount \u00b6 Signal emitted as object is removed from the object tree and disposed. Useful for cleanups. Property Binding \u00b6 TODO Functions \u00b6 println \u00b6 Print a PineObject or a primitive type into stdout. Creating a new Type \u00b6 Creating a new Type is quite simple. You just need to extend PineObject and register the new type on the PineEngine Example: // Item provides a basic implementation of all visual items // on a script abstract class Item : PineObject () { var x : Int by intProp ( :: x , initialValue = 1 ) var y : Int by intProp ( :: y , initialValue = 1 ) var width : Int by intProp ( :: width , initialValue = 50 ) var height : Int by intProp ( :: height , initialValue = 50 ) } To register the type and use on the script, just: var scriptEngine = PineEngine . Builder () . registerPineType ( \"Item\" ) { Item () } . build () var root = scriptEngine . load ( \"\"\"\" Item { x: 10 y: 10 width: 100 height:100 on mount: println(\"x value is \" + x) } \"\"\" ) as Item // prints x value is 10 println ( \"x is ${root.x}\" ) // prints 10 println ( \"width is ${root.width}\" ) // prints 100 Properties can have the primitive script types: Int, Double, String, Boolean. properties holding objects will be introduced later. You can also get events when any of the properties of a object changed. Example: abstract class Item : PineObject () { // pass an object callback for when the property changes var x : Int by intProp ( :: x , initialValue = 1 ) { println ( \"x1 is $x\" ) } ... init { // alternative option is to connect to a signal // using the connect api connect ( \"x\" ) { println ( \"x2 is $x\" ) } } } ... fun main () { val engine = ... val root = engine . load ( \"Item {}\" ) as Item // You can connect a callback to any object in the object-tree root . connect ( \"x\" ) { println ( \"x3 is $x\" ) } // An you can manipulate object's properties as Kotlin primitives root . x = 50 root . dispose () } Result: x1 is 50 x2 is 50 x3 is 50 Ideas to Evaluate \u00b6 Context-aware scopes \u00b6 Adds the ability to define context-aware scopes. E.g Define property for specific version of a type: Text { text: \"Hello World\" v1.1 { //multiline block elipsize: Text.ElipsizeEnd } // or [v1.1] elipsize: Text.ElipsizeEnd //by platform ios { opacity: 0.5 } // maybe it could be nested. ios { v1.1 { elipsize: Text.ElipsizeStart } } } We could even have user-defined scopes, that could be resolved at runtime. One use case would be a/b testing. Text { [a] text: \"This is my A string\" [b] text: \"This is my B String\" } On native size you would define the context: val engine PineEngine(...) engine.enableContext(\"a\") engine.load(script) Code Generation for properties & Meta \u00b6 Currently, There is a lot of boilerplate code to make an new Type surface into Pinelang. We could think of additional library to code-genearate those boilerplate code, probably using annotations on kotlin. Example: class PineText(id: Int) : PineComposable(id) { companion object { val meta = PineMetaObject( \"Text\", docString = \"\"\" ### Type: Text The best type there is. Just write something like this: Text { text: \"My incredible text\" size: 18 color: \"#ff00ff\" } That is it. \"\"\".trimIndent()) { PineText(it) } } override fun getMeta(): PineMetaObject = meta var text: String by stringProp(::text, initialValue = \"\") val color: String by stringProp(::color, initialValue = \"#000000\") val size: Int by intProp(::size, initialValue = 12) Would change to: /**!Pinelag ### Type: Text The best type there is. Just write something like this: Text { text: \"My incredible text\" size: 18 color: \"#ff00ff\" } That is it. */ @ScriptName(\"Text\") class PineText(id: Int) : PineComposable(id) { @StringProp(\"\") var text: String @StringProp(\"#000000\") val color: String @IntProp(12) val size: Int }","title":"Pinelang"},{"location":"#pinelang","text":"Pinelang or just \u201cPine\u201d is a scripting language inspired in QML that sits on top of Kotlin/JVM. The objective is to represent a tree-like object hierarchy in a declarative way. It can be use to expose regular Kotlin objects and use it as a script. For example: Object { on mount: println(\"hello world\") } It will print hello world to the standard output.","title":"Pinelang"},{"location":"#usage","text":"First you must instantiate a PineEngine to be able to evaluate the scripts. fun main () { var scriptEngine = PineEngine . Builder () . registerPineType ( \"Object\" ) { PineObject () } . build () // Now we evaluate the script val root = scriptEngine . load ( \"Object { on mount: println('hello world') }\" ) // prints \"hello world\" root . dispose () // clean up resources }","title":"Usage"},{"location":"#pineobject-type","text":"PineObject class is the base class for all PineScript types. It consists on the following properties: class PineObject { // unique identifier for the object in a object-tree val id : Int // children elements of the object val children : List < PineObject > // map of properties accessible by script val nameProps : Map < String , PineProp <*>> // map of signals (or events) emitted by object val signals : Map < String , PineSignal > // map of all functions exposed to a script val callables : Map < String , PineCallable > } Basically every type exposed to a script needs to extend PineObject. The basic functionality provided by PineObject are:","title":"PineObject type"},{"location":"#signals","text":"","title":"Signals"},{"location":"#mount","text":"Signal emitted as object is inserted on the object tree of the script. Useful for initialization of resources","title":"mount"},{"location":"#unmount","text":"Signal emitted as object is removed from the object tree and disposed. Useful for cleanups.","title":"unmount"},{"location":"#property-binding","text":"TODO","title":"Property Binding"},{"location":"#functions","text":"","title":"Functions"},{"location":"#println","text":"Print a PineObject or a primitive type into stdout.","title":"println"},{"location":"#creating-a-new-type","text":"Creating a new Type is quite simple. You just need to extend PineObject and register the new type on the PineEngine Example: // Item provides a basic implementation of all visual items // on a script abstract class Item : PineObject () { var x : Int by intProp ( :: x , initialValue = 1 ) var y : Int by intProp ( :: y , initialValue = 1 ) var width : Int by intProp ( :: width , initialValue = 50 ) var height : Int by intProp ( :: height , initialValue = 50 ) } To register the type and use on the script, just: var scriptEngine = PineEngine . Builder () . registerPineType ( \"Item\" ) { Item () } . build () var root = scriptEngine . load ( \"\"\"\" Item { x: 10 y: 10 width: 100 height:100 on mount: println(\"x value is \" + x) } \"\"\" ) as Item // prints x value is 10 println ( \"x is ${root.x}\" ) // prints 10 println ( \"width is ${root.width}\" ) // prints 100 Properties can have the primitive script types: Int, Double, String, Boolean. properties holding objects will be introduced later. You can also get events when any of the properties of a object changed. Example: abstract class Item : PineObject () { // pass an object callback for when the property changes var x : Int by intProp ( :: x , initialValue = 1 ) { println ( \"x1 is $x\" ) } ... init { // alternative option is to connect to a signal // using the connect api connect ( \"x\" ) { println ( \"x2 is $x\" ) } } } ... fun main () { val engine = ... val root = engine . load ( \"Item {}\" ) as Item // You can connect a callback to any object in the object-tree root . connect ( \"x\" ) { println ( \"x3 is $x\" ) } // An you can manipulate object's properties as Kotlin primitives root . x = 50 root . dispose () } Result: x1 is 50 x2 is 50 x3 is 50","title":"Creating a new Type"},{"location":"#ideas-to-evaluate","text":"","title":"Ideas to Evaluate"},{"location":"#context-aware-scopes","text":"Adds the ability to define context-aware scopes. E.g Define property for specific version of a type: Text { text: \"Hello World\" v1.1 { //multiline block elipsize: Text.ElipsizeEnd } // or [v1.1] elipsize: Text.ElipsizeEnd //by platform ios { opacity: 0.5 } // maybe it could be nested. ios { v1.1 { elipsize: Text.ElipsizeStart } } } We could even have user-defined scopes, that could be resolved at runtime. One use case would be a/b testing. Text { [a] text: \"This is my A string\" [b] text: \"This is my B String\" } On native size you would define the context: val engine PineEngine(...) engine.enableContext(\"a\") engine.load(script)","title":"Context-aware scopes"},{"location":"#code-generation-for-properties-meta","text":"Currently, There is a lot of boilerplate code to make an new Type surface into Pinelang. We could think of additional library to code-genearate those boilerplate code, probably using annotations on kotlin. Example: class PineText(id: Int) : PineComposable(id) { companion object { val meta = PineMetaObject( \"Text\", docString = \"\"\" ### Type: Text The best type there is. Just write something like this: Text { text: \"My incredible text\" size: 18 color: \"#ff00ff\" } That is it. \"\"\".trimIndent()) { PineText(it) } } override fun getMeta(): PineMetaObject = meta var text: String by stringProp(::text, initialValue = \"\") val color: String by stringProp(::color, initialValue = \"#000000\") val size: Int by intProp(::size, initialValue = 12) Would change to: /**!Pinelag ### Type: Text The best type there is. Just write something like this: Text { text: \"My incredible text\" size: 18 color: \"#ff00ff\" } That is it. */ @ScriptName(\"Text\") class PineText(id: Int) : PineComposable(id) { @StringProp(\"\") var text: String @StringProp(\"#000000\") val color: String @IntProp(12) val size: Int }","title":"Code Generation for properties &amp; Meta"},{"location":"latest/android/","text":"android Packages \u00b6 Name Summary org.pinelang.android.compose Index \u00b6 All Types","title":"android"},{"location":"latest/android/#packages","text":"Name Summary org.pinelang.android.compose","title":"Packages"},{"location":"latest/android/#index","text":"All Types","title":"Index"},{"location":"latest/android/alltypes/","text":"All Types \u00b6 Name Summary org.pinelang.android.compose.PineColumn \u00b6 | org.pinelang.android.compose.PineComposable \u00b6 | org.pinelang.android.compose.PineHScroller \u00b6 | org.pinelang.android.compose.PineImage \u00b6 | org.pinelang.android.compose.PineRectangle \u00b6 | org.pinelang.android.compose.PineRow \u00b6 | org.pinelang.android.compose.PineText \u00b6 | org.pinelang.android.compose.PineVScroller \u00b6 | (extensions in package org.pinelang.android.compose) kotlin.String \u00b6","title":"All Types - Pinelang"},{"location":"latest/android/alltypes/#all-types","text":"Name Summary","title":"All Types"},{"location":"latest/android/alltypes/#orgpinelangandroidcomposepinecolumn","text":"|","title":"org.pinelang.android.compose.PineColumn"},{"location":"latest/android/alltypes/#orgpinelangandroidcomposepinecomposable","text":"|","title":"org.pinelang.android.compose.PineComposable"},{"location":"latest/android/alltypes/#orgpinelangandroidcomposepinehscroller","text":"|","title":"org.pinelang.android.compose.PineHScroller"},{"location":"latest/android/alltypes/#orgpinelangandroidcomposepineimage","text":"|","title":"org.pinelang.android.compose.PineImage"},{"location":"latest/android/alltypes/#orgpinelangandroidcomposepinerectangle","text":"|","title":"org.pinelang.android.compose.PineRectangle"},{"location":"latest/android/alltypes/#orgpinelangandroidcomposepinerow","text":"|","title":"org.pinelang.android.compose.PineRow"},{"location":"latest/android/alltypes/#orgpinelangandroidcomposepinetext","text":"|","title":"org.pinelang.android.compose.PineText"},{"location":"latest/android/alltypes/#orgpinelangandroidcomposepinevscroller","text":"| (extensions in package org.pinelang.android.compose)","title":"org.pinelang.android.compose.PineVScroller"},{"location":"latest/android/alltypes/#kotlinstring","text":"","title":"kotlin.String"},{"location":"latest/android/org.pinelang.android.compose/","text":"android / org.pinelang.android.compose Package org.pinelang.android.compose \u00b6 Types \u00b6 Name Summary PineColumn class PineColumn : PineComposable PineComposable abstract class PineComposable : PineObject PineHScroller class PineHScroller : PineComposable PineImage class PineImage : PineComposable PineRectangle class PineRectangle : PineComposable PineRow class PineRow : PineComposable PineText class PineText : PineComposable PineVScroller class PineVScroller : PineComposable Extensions for External Classes \u00b6 Name Summary kotlin.String","title":"Package org.pinelang.android.compose - Pinelang"},{"location":"latest/android/org.pinelang.android.compose/#package-orgpinelangandroidcompose","text":"","title":"Package org.pinelang.android.compose"},{"location":"latest/android/org.pinelang.android.compose/#types","text":"Name Summary PineColumn class PineColumn : PineComposable PineComposable abstract class PineComposable : PineObject PineHScroller class PineHScroller : PineComposable PineImage class PineImage : PineComposable PineRectangle class PineRectangle : PineComposable PineRow class PineRow : PineComposable PineText class PineText : PineComposable PineVScroller class PineVScroller : PineComposable","title":"Types"},{"location":"latest/android/org.pinelang.android.compose/#extensions-for-external-classes","text":"Name Summary kotlin.String","title":"Extensions for External Classes"},{"location":"latest/android/org.pinelang.android.compose/-pine-column/","text":"android / org.pinelang.android.compose / PineColumn PineColumn \u00b6 class PineColumn : PineComposable Constructors \u00b6 Name Summary <init> PineColumn(id: Int ) Functions \u00b6 Name Summary ComposeComponent fun ComposeComponent(): Unit getMeta fun getMeta(): PineMetaObject Companion Object Properties \u00b6 Name Summary meta val meta: PineMetaObject","title":"PineColumn - Pinelang"},{"location":"latest/android/org.pinelang.android.compose/-pine-column/#pinecolumn","text":"class PineColumn : PineComposable","title":"PineColumn"},{"location":"latest/android/org.pinelang.android.compose/-pine-column/#constructors","text":"Name Summary <init> PineColumn(id: Int )","title":"Constructors"},{"location":"latest/android/org.pinelang.android.compose/-pine-column/#functions","text":"Name Summary ComposeComponent fun ComposeComponent(): Unit getMeta fun getMeta(): PineMetaObject","title":"Functions"},{"location":"latest/android/org.pinelang.android.compose/-pine-column/#companion-object-properties","text":"Name Summary meta val meta: PineMetaObject","title":"Companion Object Properties"},{"location":"latest/android/org.pinelang.android.compose/-pine-column/-compose-component/","text":"android / org.pinelang.android.compose / PineColumn / ComposeComponent ComposeComponent \u00b6 @Composable fun ComposeComponent(): Unit","title":"ComposeComponent - Pinelang"},{"location":"latest/android/org.pinelang.android.compose/-pine-column/-compose-component/#composecomponent","text":"@Composable fun ComposeComponent(): Unit","title":"ComposeComponent"},{"location":"latest/android/org.pinelang.android.compose/-pine-column/-init-/","text":"android / org.pinelang.android.compose / PineColumn / <init> <init> \u00b6 PineColumn(id: Int )","title":" init "},{"location":"latest/android/org.pinelang.android.compose/-pine-column/-init-/#init","text":"PineColumn(id: Int )","title":"&lt;init&gt;"},{"location":"latest/android/org.pinelang.android.compose/-pine-column/get-meta/","text":"android / org.pinelang.android.compose / PineColumn / getMeta getMeta \u00b6 fun getMeta(): PineMetaObject","title":"getMeta - Pinelang"},{"location":"latest/android/org.pinelang.android.compose/-pine-column/get-meta/#getmeta","text":"fun getMeta(): PineMetaObject","title":"getMeta"},{"location":"latest/android/org.pinelang.android.compose/-pine-column/meta/","text":"android / org.pinelang.android.compose / PineColumn / meta meta \u00b6 val meta: PineMetaObject","title":"meta - Pinelang"},{"location":"latest/android/org.pinelang.android.compose/-pine-column/meta/#meta","text":"val meta: PineMetaObject","title":"meta"},{"location":"latest/android/org.pinelang.android.compose/-pine-composable/","text":"android / org.pinelang.android.compose / PineComposable PineComposable \u00b6 abstract class PineComposable : PineObject Constructors \u00b6 Name Summary <init> PineComposable(id: Int ) Properties \u00b6 Name Summary visible var visible: Boolean Functions \u00b6 Name Summary ComposeComponent abstract fun ComposeComponent(): Unit open fun ComposeComponent(invalidate: () -> Unit , children: () -> Unit ): Unit Inheritors \u00b6 Name Summary PineColumn class PineColumn : PineComposable PineHScroller class PineHScroller : PineComposable PineImage class PineImage : PineComposable PineRectangle class PineRectangle : PineComposable PineRow class PineRow : PineComposable PineText class PineText : PineComposable PineVScroller class PineVScroller : PineComposable","title":"PineComposable - Pinelang"},{"location":"latest/android/org.pinelang.android.compose/-pine-composable/#pinecomposable","text":"abstract class PineComposable : PineObject","title":"PineComposable"},{"location":"latest/android/org.pinelang.android.compose/-pine-composable/#constructors","text":"Name Summary <init> PineComposable(id: Int )","title":"Constructors"},{"location":"latest/android/org.pinelang.android.compose/-pine-composable/#properties","text":"Name Summary visible var visible: Boolean","title":"Properties"},{"location":"latest/android/org.pinelang.android.compose/-pine-composable/#functions","text":"Name Summary ComposeComponent abstract fun ComposeComponent(): Unit open fun ComposeComponent(invalidate: () -> Unit , children: () -> Unit ): Unit","title":"Functions"},{"location":"latest/android/org.pinelang.android.compose/-pine-composable/#inheritors","text":"Name Summary PineColumn class PineColumn : PineComposable PineHScroller class PineHScroller : PineComposable PineImage class PineImage : PineComposable PineRectangle class PineRectangle : PineComposable PineRow class PineRow : PineComposable PineText class PineText : PineComposable PineVScroller class PineVScroller : PineComposable","title":"Inheritors"},{"location":"latest/android/org.pinelang.android.compose/-pine-composable/-compose-component/","text":"android / org.pinelang.android.compose / PineComposable / ComposeComponent ComposeComponent \u00b6 @Composable abstract fun ComposeComponent(): Unit @Composable open fun ComposeComponent(invalidate: () -> Unit , children: () -> Unit ): Unit","title":"ComposeComponent - Pinelang"},{"location":"latest/android/org.pinelang.android.compose/-pine-composable/-compose-component/#composecomponent","text":"@Composable abstract fun ComposeComponent(): Unit @Composable open fun ComposeComponent(invalidate: () -> Unit , children: () -> Unit ): Unit","title":"ComposeComponent"},{"location":"latest/android/org.pinelang.android.compose/-pine-composable/-init-/","text":"android / org.pinelang.android.compose / PineComposable / <init> <init> \u00b6 PineComposable(id: Int )","title":" init "},{"location":"latest/android/org.pinelang.android.compose/-pine-composable/-init-/#init","text":"PineComposable(id: Int )","title":"&lt;init&gt;"},{"location":"latest/android/org.pinelang.android.compose/-pine-composable/visible/","text":"android / org.pinelang.android.compose / PineComposable / visible visible \u00b6 var visible: Boolean","title":"visible - Pinelang"},{"location":"latest/android/org.pinelang.android.compose/-pine-composable/visible/#visible","text":"var visible: Boolean","title":"visible"},{"location":"latest/android/org.pinelang.android.compose/-pine-h-scroller/","text":"android / org.pinelang.android.compose / PineHScroller PineHScroller \u00b6 class PineHScroller : PineComposable Constructors \u00b6 Name Summary <init> PineHScroller(id: Int ) Functions \u00b6 Name Summary ComposeComponent fun ComposeComponent(): Unit getMeta fun getMeta(): PineMetaObject Companion Object Properties \u00b6 Name Summary meta val meta: PineMetaObject","title":"PineHScroller - Pinelang"},{"location":"latest/android/org.pinelang.android.compose/-pine-h-scroller/#pinehscroller","text":"class PineHScroller : PineComposable","title":"PineHScroller"},{"location":"latest/android/org.pinelang.android.compose/-pine-h-scroller/#constructors","text":"Name Summary <init> PineHScroller(id: Int )","title":"Constructors"},{"location":"latest/android/org.pinelang.android.compose/-pine-h-scroller/#functions","text":"Name Summary ComposeComponent fun ComposeComponent(): Unit getMeta fun getMeta(): PineMetaObject","title":"Functions"},{"location":"latest/android/org.pinelang.android.compose/-pine-h-scroller/#companion-object-properties","text":"Name Summary meta val meta: PineMetaObject","title":"Companion Object Properties"},{"location":"latest/android/org.pinelang.android.compose/-pine-h-scroller/-compose-component/","text":"android / org.pinelang.android.compose / PineHScroller / ComposeComponent ComposeComponent \u00b6 @Composable fun ComposeComponent(): Unit","title":"ComposeComponent - Pinelang"},{"location":"latest/android/org.pinelang.android.compose/-pine-h-scroller/-compose-component/#composecomponent","text":"@Composable fun ComposeComponent(): Unit","title":"ComposeComponent"},{"location":"latest/android/org.pinelang.android.compose/-pine-h-scroller/-init-/","text":"android / org.pinelang.android.compose / PineHScroller / <init> <init> \u00b6 PineHScroller(id: Int )","title":" init "},{"location":"latest/android/org.pinelang.android.compose/-pine-h-scroller/-init-/#init","text":"PineHScroller(id: Int )","title":"&lt;init&gt;"},{"location":"latest/android/org.pinelang.android.compose/-pine-h-scroller/get-meta/","text":"android / org.pinelang.android.compose / PineHScroller / getMeta getMeta \u00b6 fun getMeta(): PineMetaObject","title":"getMeta - Pinelang"},{"location":"latest/android/org.pinelang.android.compose/-pine-h-scroller/get-meta/#getmeta","text":"fun getMeta(): PineMetaObject","title":"getMeta"},{"location":"latest/android/org.pinelang.android.compose/-pine-h-scroller/meta/","text":"android / org.pinelang.android.compose / PineHScroller / meta meta \u00b6 val meta: PineMetaObject","title":"meta - Pinelang"},{"location":"latest/android/org.pinelang.android.compose/-pine-h-scroller/meta/#meta","text":"val meta: PineMetaObject","title":"meta"},{"location":"latest/android/org.pinelang.android.compose/-pine-image/","text":"android / org.pinelang.android.compose / PineImage PineImage \u00b6 class PineImage : PineComposable Constructors \u00b6 Name Summary <init> PineImage(id: Int ) Properties \u00b6 Name Summary source val source: String Functions \u00b6 Name Summary ComposeComponent fun ComposeComponent(): Unit getMeta fun getMeta(): PineMetaObject Companion Object Properties \u00b6 Name Summary meta val meta: PineMetaObject","title":"PineImage - Pinelang"},{"location":"latest/android/org.pinelang.android.compose/-pine-image/#pineimage","text":"class PineImage : PineComposable","title":"PineImage"},{"location":"latest/android/org.pinelang.android.compose/-pine-image/#constructors","text":"Name Summary <init> PineImage(id: Int )","title":"Constructors"},{"location":"latest/android/org.pinelang.android.compose/-pine-image/#properties","text":"Name Summary source val source: String","title":"Properties"},{"location":"latest/android/org.pinelang.android.compose/-pine-image/#functions","text":"Name Summary ComposeComponent fun ComposeComponent(): Unit getMeta fun getMeta(): PineMetaObject","title":"Functions"},{"location":"latest/android/org.pinelang.android.compose/-pine-image/#companion-object-properties","text":"Name Summary meta val meta: PineMetaObject","title":"Companion Object Properties"},{"location":"latest/android/org.pinelang.android.compose/-pine-image/-compose-component/","text":"android / org.pinelang.android.compose / PineImage / ComposeComponent ComposeComponent \u00b6 @Composable fun ComposeComponent(): Unit","title":"ComposeComponent - Pinelang"},{"location":"latest/android/org.pinelang.android.compose/-pine-image/-compose-component/#composecomponent","text":"@Composable fun ComposeComponent(): Unit","title":"ComposeComponent"},{"location":"latest/android/org.pinelang.android.compose/-pine-image/-init-/","text":"android / org.pinelang.android.compose / PineImage / <init> <init> \u00b6 PineImage(id: Int )","title":" init "},{"location":"latest/android/org.pinelang.android.compose/-pine-image/-init-/#init","text":"PineImage(id: Int )","title":"&lt;init&gt;"},{"location":"latest/android/org.pinelang.android.compose/-pine-image/get-meta/","text":"android / org.pinelang.android.compose / PineImage / getMeta getMeta \u00b6 fun getMeta(): PineMetaObject","title":"getMeta - Pinelang"},{"location":"latest/android/org.pinelang.android.compose/-pine-image/get-meta/#getmeta","text":"fun getMeta(): PineMetaObject","title":"getMeta"},{"location":"latest/android/org.pinelang.android.compose/-pine-image/meta/","text":"android / org.pinelang.android.compose / PineImage / meta meta \u00b6 val meta: PineMetaObject","title":"meta - Pinelang"},{"location":"latest/android/org.pinelang.android.compose/-pine-image/meta/#meta","text":"val meta: PineMetaObject","title":"meta"},{"location":"latest/android/org.pinelang.android.compose/-pine-image/source/","text":"android / org.pinelang.android.compose / PineImage / source source \u00b6 val source: String","title":"source - Pinelang"},{"location":"latest/android/org.pinelang.android.compose/-pine-image/source/#source","text":"val source: String","title":"source"},{"location":"latest/android/org.pinelang.android.compose/-pine-rectangle/","text":"android / org.pinelang.android.compose / PineRectangle PineRectangle \u00b6 class PineRectangle : PineComposable Constructors \u00b6 Name Summary <init> PineRectangle(id: Int ) Properties \u00b6 Name Summary color val color: String Functions \u00b6 Name Summary ComposeComponent fun ComposeComponent(): Unit getMeta fun getMeta(): PineMetaObject Companion Object Properties \u00b6 Name Summary meta val meta: PineMetaObject","title":"PineRectangle - Pinelang"},{"location":"latest/android/org.pinelang.android.compose/-pine-rectangle/#pinerectangle","text":"class PineRectangle : PineComposable","title":"PineRectangle"},{"location":"latest/android/org.pinelang.android.compose/-pine-rectangle/#constructors","text":"Name Summary <init> PineRectangle(id: Int )","title":"Constructors"},{"location":"latest/android/org.pinelang.android.compose/-pine-rectangle/#properties","text":"Name Summary color val color: String","title":"Properties"},{"location":"latest/android/org.pinelang.android.compose/-pine-rectangle/#functions","text":"Name Summary ComposeComponent fun ComposeComponent(): Unit getMeta fun getMeta(): PineMetaObject","title":"Functions"},{"location":"latest/android/org.pinelang.android.compose/-pine-rectangle/#companion-object-properties","text":"Name Summary meta val meta: PineMetaObject","title":"Companion Object Properties"},{"location":"latest/android/org.pinelang.android.compose/-pine-rectangle/-compose-component/","text":"android / org.pinelang.android.compose / PineRectangle / ComposeComponent ComposeComponent \u00b6 @Composable fun ComposeComponent(): Unit","title":"ComposeComponent - Pinelang"},{"location":"latest/android/org.pinelang.android.compose/-pine-rectangle/-compose-component/#composecomponent","text":"@Composable fun ComposeComponent(): Unit","title":"ComposeComponent"},{"location":"latest/android/org.pinelang.android.compose/-pine-rectangle/-init-/","text":"android / org.pinelang.android.compose / PineRectangle / <init> <init> \u00b6 PineRectangle(id: Int )","title":" init "},{"location":"latest/android/org.pinelang.android.compose/-pine-rectangle/-init-/#init","text":"PineRectangle(id: Int )","title":"&lt;init&gt;"},{"location":"latest/android/org.pinelang.android.compose/-pine-rectangle/color/","text":"android / org.pinelang.android.compose / PineRectangle / color color \u00b6 val color: String","title":"color - Pinelang"},{"location":"latest/android/org.pinelang.android.compose/-pine-rectangle/color/#color","text":"val color: String","title":"color"},{"location":"latest/android/org.pinelang.android.compose/-pine-rectangle/get-meta/","text":"android / org.pinelang.android.compose / PineRectangle / getMeta getMeta \u00b6 fun getMeta(): PineMetaObject","title":"getMeta - Pinelang"},{"location":"latest/android/org.pinelang.android.compose/-pine-rectangle/get-meta/#getmeta","text":"fun getMeta(): PineMetaObject","title":"getMeta"},{"location":"latest/android/org.pinelang.android.compose/-pine-rectangle/meta/","text":"android / org.pinelang.android.compose / PineRectangle / meta meta \u00b6 val meta: PineMetaObject","title":"meta - Pinelang"},{"location":"latest/android/org.pinelang.android.compose/-pine-rectangle/meta/#meta","text":"val meta: PineMetaObject","title":"meta"},{"location":"latest/android/org.pinelang.android.compose/-pine-row/","text":"android / org.pinelang.android.compose / PineRow PineRow \u00b6 class PineRow : PineComposable Constructors \u00b6 Name Summary <init> PineRow(id: Int ) Functions \u00b6 Name Summary ComposeComponent fun ComposeComponent(): Unit getMeta fun getMeta(): PineMetaObject Companion Object Properties \u00b6 Name Summary meta val meta: PineMetaObject","title":"PineRow - Pinelang"},{"location":"latest/android/org.pinelang.android.compose/-pine-row/#pinerow","text":"class PineRow : PineComposable","title":"PineRow"},{"location":"latest/android/org.pinelang.android.compose/-pine-row/#constructors","text":"Name Summary <init> PineRow(id: Int )","title":"Constructors"},{"location":"latest/android/org.pinelang.android.compose/-pine-row/#functions","text":"Name Summary ComposeComponent fun ComposeComponent(): Unit getMeta fun getMeta(): PineMetaObject","title":"Functions"},{"location":"latest/android/org.pinelang.android.compose/-pine-row/#companion-object-properties","text":"Name Summary meta val meta: PineMetaObject","title":"Companion Object Properties"},{"location":"latest/android/org.pinelang.android.compose/-pine-row/-compose-component/","text":"android / org.pinelang.android.compose / PineRow / ComposeComponent ComposeComponent \u00b6 @Composable fun ComposeComponent(): Unit","title":"ComposeComponent - Pinelang"},{"location":"latest/android/org.pinelang.android.compose/-pine-row/-compose-component/#composecomponent","text":"@Composable fun ComposeComponent(): Unit","title":"ComposeComponent"},{"location":"latest/android/org.pinelang.android.compose/-pine-row/-init-/","text":"android / org.pinelang.android.compose / PineRow / <init> <init> \u00b6 PineRow(id: Int )","title":" init "},{"location":"latest/android/org.pinelang.android.compose/-pine-row/-init-/#init","text":"PineRow(id: Int )","title":"&lt;init&gt;"},{"location":"latest/android/org.pinelang.android.compose/-pine-row/get-meta/","text":"android / org.pinelang.android.compose / PineRow / getMeta getMeta \u00b6 fun getMeta(): PineMetaObject","title":"getMeta - Pinelang"},{"location":"latest/android/org.pinelang.android.compose/-pine-row/get-meta/#getmeta","text":"fun getMeta(): PineMetaObject","title":"getMeta"},{"location":"latest/android/org.pinelang.android.compose/-pine-row/meta/","text":"android / org.pinelang.android.compose / PineRow / meta meta \u00b6 val meta: PineMetaObject","title":"meta - Pinelang"},{"location":"latest/android/org.pinelang.android.compose/-pine-row/meta/#meta","text":"val meta: PineMetaObject","title":"meta"},{"location":"latest/android/org.pinelang.android.compose/-pine-text/","text":"android / org.pinelang.android.compose / PineText PineText \u00b6 class PineText : PineComposable Constructors \u00b6 Name Summary <init> PineText(id: Int ) Properties \u00b6 Name Summary color val color: String size val size: Int text var text: String Functions \u00b6 Name Summary ComposeComponent fun ComposeComponent(): Unit getMeta fun getMeta(): PineMetaObject Companion Object Properties \u00b6 Name Summary meta val meta: PineMetaObject","title":"PineText - Pinelang"},{"location":"latest/android/org.pinelang.android.compose/-pine-text/#pinetext","text":"class PineText : PineComposable","title":"PineText"},{"location":"latest/android/org.pinelang.android.compose/-pine-text/#constructors","text":"Name Summary <init> PineText(id: Int )","title":"Constructors"},{"location":"latest/android/org.pinelang.android.compose/-pine-text/#properties","text":"Name Summary color val color: String size val size: Int text var text: String","title":"Properties"},{"location":"latest/android/org.pinelang.android.compose/-pine-text/#functions","text":"Name Summary ComposeComponent fun ComposeComponent(): Unit getMeta fun getMeta(): PineMetaObject","title":"Functions"},{"location":"latest/android/org.pinelang.android.compose/-pine-text/#companion-object-properties","text":"Name Summary meta val meta: PineMetaObject","title":"Companion Object Properties"},{"location":"latest/android/org.pinelang.android.compose/-pine-text/-compose-component/","text":"android / org.pinelang.android.compose / PineText / ComposeComponent ComposeComponent \u00b6 @Composable fun ComposeComponent(): Unit","title":"ComposeComponent - Pinelang"},{"location":"latest/android/org.pinelang.android.compose/-pine-text/-compose-component/#composecomponent","text":"@Composable fun ComposeComponent(): Unit","title":"ComposeComponent"},{"location":"latest/android/org.pinelang.android.compose/-pine-text/-init-/","text":"android / org.pinelang.android.compose / PineText / <init> <init> \u00b6 PineText(id: Int )","title":" init "},{"location":"latest/android/org.pinelang.android.compose/-pine-text/-init-/#init","text":"PineText(id: Int )","title":"&lt;init&gt;"},{"location":"latest/android/org.pinelang.android.compose/-pine-text/color/","text":"android / org.pinelang.android.compose / PineText / color color \u00b6 val color: String","title":"color - Pinelang"},{"location":"latest/android/org.pinelang.android.compose/-pine-text/color/#color","text":"val color: String","title":"color"},{"location":"latest/android/org.pinelang.android.compose/-pine-text/get-meta/","text":"android / org.pinelang.android.compose / PineText / getMeta getMeta \u00b6 fun getMeta(): PineMetaObject","title":"getMeta - Pinelang"},{"location":"latest/android/org.pinelang.android.compose/-pine-text/get-meta/#getmeta","text":"fun getMeta(): PineMetaObject","title":"getMeta"},{"location":"latest/android/org.pinelang.android.compose/-pine-text/meta/","text":"android / org.pinelang.android.compose / PineText / meta meta \u00b6 val meta: PineMetaObject","title":"meta - Pinelang"},{"location":"latest/android/org.pinelang.android.compose/-pine-text/meta/#meta","text":"val meta: PineMetaObject","title":"meta"},{"location":"latest/android/org.pinelang.android.compose/-pine-text/size/","text":"android / org.pinelang.android.compose / PineText / size size \u00b6 val size: Int","title":"size - Pinelang"},{"location":"latest/android/org.pinelang.android.compose/-pine-text/size/#size","text":"val size: Int","title":"size"},{"location":"latest/android/org.pinelang.android.compose/-pine-text/text/","text":"android / org.pinelang.android.compose / PineText / text text \u00b6 var text: String","title":"text - Pinelang"},{"location":"latest/android/org.pinelang.android.compose/-pine-text/text/#text","text":"var text: String","title":"text"},{"location":"latest/android/org.pinelang.android.compose/-pine-v-scroller/","text":"android / org.pinelang.android.compose / PineVScroller PineVScroller \u00b6 class PineVScroller : PineComposable Constructors \u00b6 Name Summary <init> PineVScroller(id: Int ) Functions \u00b6 Name Summary ComposeComponent fun ComposeComponent(): Unit getMeta fun getMeta(): PineMetaObject Companion Object Properties \u00b6 Name Summary meta val meta: PineMetaObject","title":"PineVScroller - Pinelang"},{"location":"latest/android/org.pinelang.android.compose/-pine-v-scroller/#pinevscroller","text":"class PineVScroller : PineComposable","title":"PineVScroller"},{"location":"latest/android/org.pinelang.android.compose/-pine-v-scroller/#constructors","text":"Name Summary <init> PineVScroller(id: Int )","title":"Constructors"},{"location":"latest/android/org.pinelang.android.compose/-pine-v-scroller/#functions","text":"Name Summary ComposeComponent fun ComposeComponent(): Unit getMeta fun getMeta(): PineMetaObject","title":"Functions"},{"location":"latest/android/org.pinelang.android.compose/-pine-v-scroller/#companion-object-properties","text":"Name Summary meta val meta: PineMetaObject","title":"Companion Object Properties"},{"location":"latest/android/org.pinelang.android.compose/-pine-v-scroller/-compose-component/","text":"android / org.pinelang.android.compose / PineVScroller / ComposeComponent ComposeComponent \u00b6 @Composable fun ComposeComponent(): Unit","title":"ComposeComponent - Pinelang"},{"location":"latest/android/org.pinelang.android.compose/-pine-v-scroller/-compose-component/#composecomponent","text":"@Composable fun ComposeComponent(): Unit","title":"ComposeComponent"},{"location":"latest/android/org.pinelang.android.compose/-pine-v-scroller/-init-/","text":"android / org.pinelang.android.compose / PineVScroller / <init> <init> \u00b6 PineVScroller(id: Int )","title":" init "},{"location":"latest/android/org.pinelang.android.compose/-pine-v-scroller/-init-/#init","text":"PineVScroller(id: Int )","title":"&lt;init&gt;"},{"location":"latest/android/org.pinelang.android.compose/-pine-v-scroller/get-meta/","text":"android / org.pinelang.android.compose / PineVScroller / getMeta getMeta \u00b6 fun getMeta(): PineMetaObject","title":"getMeta - Pinelang"},{"location":"latest/android/org.pinelang.android.compose/-pine-v-scroller/get-meta/#getmeta","text":"fun getMeta(): PineMetaObject","title":"getMeta"},{"location":"latest/android/org.pinelang.android.compose/-pine-v-scroller/meta/","text":"android / org.pinelang.android.compose / PineVScroller / meta meta \u00b6 val meta: PineMetaObject","title":"meta - Pinelang"},{"location":"latest/android/org.pinelang.android.compose/-pine-v-scroller/meta/#meta","text":"val meta: PineMetaObject","title":"meta"},{"location":"latest/android/org.pinelang.android.compose/kotlin.-string/","text":"android / org.pinelang.android.compose / kotlin.String Extensions for kotlin.String \u00b6 Name Summary parseColor fun String .parseColor(): Color","title":"Extensions for kotlin.String - Pinelang"},{"location":"latest/android/org.pinelang.android.compose/kotlin.-string/#extensions-for-kotlinstring","text":"Name Summary parseColor fun String .parseColor(): Color","title":"Extensions for kotlin.String"},{"location":"latest/android/org.pinelang.android.compose/kotlin.-string/parse-color/","text":"android / org.pinelang.android.compose / kotlin.String / parseColor parseColor \u00b6 fun String .parseColor(): Color","title":"parseColor - Pinelang"},{"location":"latest/android/org.pinelang.android.compose/kotlin.-string/parse-color/#parsecolor","text":"fun String .parseColor(): Color","title":"parseColor"},{"location":"latest/core/","text":"core Packages \u00b6 Name Summary org.pinelang.ast org.pinelang.ast.fbs org.pinelang.core org.pinelang.main org.pinelang.parser org.pinelang.util Index \u00b6 All Types","title":"core"},{"location":"latest/core/#packages","text":"Name Summary org.pinelang.ast org.pinelang.ast.fbs org.pinelang.core org.pinelang.main org.pinelang.parser org.pinelang.util","title":"Packages"},{"location":"latest/core/#index","text":"All Types","title":"Index"},{"location":"latest/core/alltypes/","text":"All Types \u00b6 Name Summary org.pinelang.core.Allocator \u00b6 | org.pinelang.core.BaseSignal \u00b6 | org.pinelang.ast.fbs.BinaryExpr \u00b6 | org.pinelang.ast.fbs.BinaryOp \u00b6 | org.pinelang.core.BinaryOpException \u00b6 | org.pinelang.core.BinaryOpNotSupportedPineScriptException \u00b6 | org.pinelang.ast.fbs.CallableExpr \u00b6 | org.pinelang.core.ChildrenListPineProp \u00b6 | org.pinelang.core.CompileObjectMetaData \u00b6 | org.pinelang.core.CustomFlatBufferBuilder \u00b6 | org.pinelang.ast.fbs.DebugInfo \u00b6 | org.pinelang.ast.fbs.Expr \u00b6 | org.pinelang.ast.ExpressionVisitor \u00b6 | org.pinelang.ast.fbs.ExprValue \u00b6 | org.pinelang.util.IndexedMap \u00b6 | org.pinelang.main.Item \u00b6 | (extensions in package org.pinelang.util) kotlin.collections.List \u00b6 | org.pinelang.core.MetaProp \u00b6 | (extensions in package org.pinelang.util) kotlin.collections.MutableMap \u00b6 | org.pinelang.ast.fbs.ObjectDefinition \u00b6 | org.pinelang.ast.ObjectDefinitionVisitor \u00b6 | org.pinelang.core.PineBoolean \u00b6 | org.pinelang.core.PineCallable \u00b6 | org.pinelang.core.PineCompiler \u00b6 | org.pinelang.core.PineConnection \u00b6 | org.pinelang.core.PineContext \u00b6 | org.pinelang.core.PineDouble \u00b6 | org.pinelang.core.PineEngine \u00b6 | org.pinelang.core.PineExpr \u00b6 | org.pinelang.core.PineInt \u00b6 | org.pinelang.parser.PineLexer \u00b6 | org.pinelang.core.PineList \u00b6 | org.pinelang.core.PineMetaObject \u00b6 | org.pinelang.core.PineNumber \u00b6 | org.pinelang.core.PineObject \u00b6 | org.pinelang.core.PineProp \u00b6 | org.pinelang.parser.PineScript \u00b6 | org.pinelang.parser.PineScriptBaseListener \u00b6 This class provides an empty implementation of `[ PineScriptListener`](../org.pinelang.parser/-pine-script-listener/index.md), which can be extended to create a listener which only needs to handle a subset of the available methods. | org.pinelang.parser.PineScriptBaseVisitor \u00b6 This class provides an empty implementation of `[ PineScriptVisitor`](../org.pinelang.parser/-pine-script-visitor/index.md), which can be extended to create a visitor which only needs to handle a subset of the available methods. | org.pinelang.core.PineScriptException \u00b6 | org.pinelang.parser.PineScriptListener \u00b6 This interface defines a complete listener for a parse tree produced by `[ PineScript`](../org.pinelang.parser/-pine-script/index.md). | org.pinelang.core.PineScriptParseException \u00b6 | org.pinelang.ast.PineScriptVisitor \u00b6 | org.pinelang.parser.PineScriptVisitor \u00b6 This interface defines a complete generic visitor for a parse tree produced by `[ PineScript`](../org.pinelang.parser/-pine-script/index.md). | org.pinelang.core.PineSignal \u00b6 | org.pinelang.core.PineString \u00b6 | org.pinelang.core.PineType \u00b6 | org.pinelang.ast.fbs.Position \u00b6 | org.pinelang.ast.fbs.PrimitiveExpr \u00b6 | org.pinelang.ast.fbs.PrimitiveType \u00b6 | org.pinelang.ast.fbs.Program \u00b6 | org.pinelang.ast.ProgramVisitor \u00b6 | org.pinelang.ast.fbs.PropDefinition \u00b6 | org.pinelang.ast.PropertyVisitor \u00b6 | org.pinelang.ast.fbs.PropRefExpr \u00b6 | org.pinelang.ast.fbs.Range \u00b6 | org.pinelang.ast.fbs.SignalExpr \u00b6 | org.pinelang.core.Slot \u00b6 | (extensions in package org.pinelang.core) kotlin.UByte \u00b6","title":"All Types - Pinelang"},{"location":"latest/core/alltypes/#all-types","text":"Name Summary","title":"All Types"},{"location":"latest/core/alltypes/#orgpinelangcoreallocator","text":"|","title":"org.pinelang.core.Allocator"},{"location":"latest/core/alltypes/#orgpinelangcorebasesignal","text":"|","title":"org.pinelang.core.BaseSignal"},{"location":"latest/core/alltypes/#orgpinelangastfbsbinaryexpr","text":"|","title":"org.pinelang.ast.fbs.BinaryExpr"},{"location":"latest/core/alltypes/#orgpinelangastfbsbinaryop","text":"|","title":"org.pinelang.ast.fbs.BinaryOp"},{"location":"latest/core/alltypes/#orgpinelangcorebinaryopexception","text":"|","title":"org.pinelang.core.BinaryOpException"},{"location":"latest/core/alltypes/#orgpinelangcorebinaryopnotsupportedpinescriptexception","text":"|","title":"org.pinelang.core.BinaryOpNotSupportedPineScriptException"},{"location":"latest/core/alltypes/#orgpinelangastfbscallableexpr","text":"|","title":"org.pinelang.ast.fbs.CallableExpr"},{"location":"latest/core/alltypes/#orgpinelangcorechildrenlistpineprop","text":"|","title":"org.pinelang.core.ChildrenListPineProp"},{"location":"latest/core/alltypes/#orgpinelangcorecompileobjectmetadata","text":"|","title":"org.pinelang.core.CompileObjectMetaData"},{"location":"latest/core/alltypes/#orgpinelangcorecustomflatbufferbuilder","text":"|","title":"org.pinelang.core.CustomFlatBufferBuilder"},{"location":"latest/core/alltypes/#orgpinelangastfbsdebuginfo","text":"|","title":"org.pinelang.ast.fbs.DebugInfo"},{"location":"latest/core/alltypes/#orgpinelangastfbsexpr","text":"|","title":"org.pinelang.ast.fbs.Expr"},{"location":"latest/core/alltypes/#orgpinelangastexpressionvisitor","text":"|","title":"org.pinelang.ast.ExpressionVisitor"},{"location":"latest/core/alltypes/#orgpinelangastfbsexprvalue","text":"|","title":"org.pinelang.ast.fbs.ExprValue"},{"location":"latest/core/alltypes/#orgpinelangutilindexedmap","text":"|","title":"org.pinelang.util.IndexedMap"},{"location":"latest/core/alltypes/#orgpinelangmainitem","text":"| (extensions in package org.pinelang.util)","title":"org.pinelang.main.Item"},{"location":"latest/core/alltypes/#kotlincollectionslist","text":"|","title":"kotlin.collections.List"},{"location":"latest/core/alltypes/#orgpinelangcoremetaprop","text":"| (extensions in package org.pinelang.util)","title":"org.pinelang.core.MetaProp"},{"location":"latest/core/alltypes/#kotlincollectionsmutablemap","text":"|","title":"kotlin.collections.MutableMap"},{"location":"latest/core/alltypes/#orgpinelangastfbsobjectdefinition","text":"|","title":"org.pinelang.ast.fbs.ObjectDefinition"},{"location":"latest/core/alltypes/#orgpinelangastobjectdefinitionvisitor","text":"|","title":"org.pinelang.ast.ObjectDefinitionVisitor"},{"location":"latest/core/alltypes/#orgpinelangcorepineboolean","text":"|","title":"org.pinelang.core.PineBoolean"},{"location":"latest/core/alltypes/#orgpinelangcorepinecallable","text":"|","title":"org.pinelang.core.PineCallable"},{"location":"latest/core/alltypes/#orgpinelangcorepinecompiler","text":"|","title":"org.pinelang.core.PineCompiler"},{"location":"latest/core/alltypes/#orgpinelangcorepineconnection","text":"|","title":"org.pinelang.core.PineConnection"},{"location":"latest/core/alltypes/#orgpinelangcorepinecontext","text":"|","title":"org.pinelang.core.PineContext"},{"location":"latest/core/alltypes/#orgpinelangcorepinedouble","text":"|","title":"org.pinelang.core.PineDouble"},{"location":"latest/core/alltypes/#orgpinelangcorepineengine","text":"|","title":"org.pinelang.core.PineEngine"},{"location":"latest/core/alltypes/#orgpinelangcorepineexpr","text":"|","title":"org.pinelang.core.PineExpr"},{"location":"latest/core/alltypes/#orgpinelangcorepineint","text":"|","title":"org.pinelang.core.PineInt"},{"location":"latest/core/alltypes/#orgpinelangparserpinelexer","text":"|","title":"org.pinelang.parser.PineLexer"},{"location":"latest/core/alltypes/#orgpinelangcorepinelist","text":"|","title":"org.pinelang.core.PineList"},{"location":"latest/core/alltypes/#orgpinelangcorepinemetaobject","text":"|","title":"org.pinelang.core.PineMetaObject"},{"location":"latest/core/alltypes/#orgpinelangcorepinenumber","text":"|","title":"org.pinelang.core.PineNumber"},{"location":"latest/core/alltypes/#orgpinelangcorepineobject","text":"|","title":"org.pinelang.core.PineObject"},{"location":"latest/core/alltypes/#orgpinelangcorepineprop","text":"|","title":"org.pinelang.core.PineProp"},{"location":"latest/core/alltypes/#orgpinelangparserpinescript","text":"|","title":"org.pinelang.parser.PineScript"},{"location":"latest/core/alltypes/#orgpinelangparserpinescriptbaselistener","text":"This class provides an empty implementation of `[ PineScriptListener`](../org.pinelang.parser/-pine-script-listener/index.md), which can be extended to create a listener which only needs to handle a subset of the available methods. |","title":"org.pinelang.parser.PineScriptBaseListener"},{"location":"latest/core/alltypes/#orgpinelangparserpinescriptbasevisitor","text":"This class provides an empty implementation of `[ PineScriptVisitor`](../org.pinelang.parser/-pine-script-visitor/index.md), which can be extended to create a visitor which only needs to handle a subset of the available methods. |","title":"org.pinelang.parser.PineScriptBaseVisitor"},{"location":"latest/core/alltypes/#orgpinelangcorepinescriptexception","text":"|","title":"org.pinelang.core.PineScriptException"},{"location":"latest/core/alltypes/#orgpinelangparserpinescriptlistener","text":"This interface defines a complete listener for a parse tree produced by `[ PineScript`](../org.pinelang.parser/-pine-script/index.md). |","title":"org.pinelang.parser.PineScriptListener"},{"location":"latest/core/alltypes/#orgpinelangcorepinescriptparseexception","text":"|","title":"org.pinelang.core.PineScriptParseException"},{"location":"latest/core/alltypes/#orgpinelangastpinescriptvisitor","text":"|","title":"org.pinelang.ast.PineScriptVisitor"},{"location":"latest/core/alltypes/#orgpinelangparserpinescriptvisitor","text":"This interface defines a complete generic visitor for a parse tree produced by `[ PineScript`](../org.pinelang.parser/-pine-script/index.md). |","title":"org.pinelang.parser.PineScriptVisitor"},{"location":"latest/core/alltypes/#orgpinelangcorepinesignal","text":"|","title":"org.pinelang.core.PineSignal"},{"location":"latest/core/alltypes/#orgpinelangcorepinestring","text":"|","title":"org.pinelang.core.PineString"},{"location":"latest/core/alltypes/#orgpinelangcorepinetype","text":"|","title":"org.pinelang.core.PineType"},{"location":"latest/core/alltypes/#orgpinelangastfbsposition","text":"|","title":"org.pinelang.ast.fbs.Position"},{"location":"latest/core/alltypes/#orgpinelangastfbsprimitiveexpr","text":"|","title":"org.pinelang.ast.fbs.PrimitiveExpr"},{"location":"latest/core/alltypes/#orgpinelangastfbsprimitivetype","text":"|","title":"org.pinelang.ast.fbs.PrimitiveType"},{"location":"latest/core/alltypes/#orgpinelangastfbsprogram","text":"|","title":"org.pinelang.ast.fbs.Program"},{"location":"latest/core/alltypes/#orgpinelangastprogramvisitor","text":"|","title":"org.pinelang.ast.ProgramVisitor"},{"location":"latest/core/alltypes/#orgpinelangastfbspropdefinition","text":"|","title":"org.pinelang.ast.fbs.PropDefinition"},{"location":"latest/core/alltypes/#orgpinelangastpropertyvisitor","text":"|","title":"org.pinelang.ast.PropertyVisitor"},{"location":"latest/core/alltypes/#orgpinelangastfbsproprefexpr","text":"|","title":"org.pinelang.ast.fbs.PropRefExpr"},{"location":"latest/core/alltypes/#orgpinelangastfbsrange","text":"|","title":"org.pinelang.ast.fbs.Range"},{"location":"latest/core/alltypes/#orgpinelangastfbssignalexpr","text":"|","title":"org.pinelang.ast.fbs.SignalExpr"},{"location":"latest/core/alltypes/#orgpinelangcoreslot","text":"| (extensions in package org.pinelang.core)","title":"org.pinelang.core.Slot"},{"location":"latest/core/alltypes/#kotlinubyte","text":"","title":"kotlin.UByte"},{"location":"latest/core/org.pinelang.ast/","text":"core / org.pinelang.ast Package org.pinelang.ast \u00b6 Types \u00b6 Name Summary ExpressionVisitor class ExpressionVisitor : PineScriptVisitor < Int > ObjectDefinitionVisitor class ObjectDefinitionVisitor : PineScriptVisitor < Int > PineScriptVisitor open class PineScriptVisitor<T> : PineScriptBaseVisitor <T> ProgramVisitor class ProgramVisitor : PineScriptVisitor < Program > PropertyVisitor class PropertyVisitor : PineScriptVisitor < Int >","title":"Package org.pinelang.ast - Pinelang"},{"location":"latest/core/org.pinelang.ast/#package-orgpinelangast","text":"","title":"Package org.pinelang.ast"},{"location":"latest/core/org.pinelang.ast/#types","text":"Name Summary ExpressionVisitor class ExpressionVisitor : PineScriptVisitor < Int > ObjectDefinitionVisitor class ObjectDefinitionVisitor : PineScriptVisitor < Int > PineScriptVisitor open class PineScriptVisitor<T> : PineScriptBaseVisitor <T> ProgramVisitor class ProgramVisitor : PineScriptVisitor < Program > PropertyVisitor class PropertyVisitor : PineScriptVisitor < Int >","title":"Types"},{"location":"latest/core/org.pinelang.ast/-expression-visitor/","text":"core / org.pinelang.ast / ExpressionVisitor ExpressionVisitor \u00b6 @ExperimentalUnsignedTypes class ExpressionVisitor : PineScriptVisitor < Int > Constructors \u00b6 Name Summary <init> ExpressionVisitor(compiler: PineCompiler , ownerType: Int , ownerId: Int , debug: Boolean ) Properties \u00b6 Name Summary ownerId var ownerId: Int ownerType var ownerType: Int Functions \u00b6 Name Summary reset fun reset(ownerType: Int , ownerId: Int ): ExpressionVisitor visitCallableExpression fun visitCallableExpression(ctx: CallableExpressionContext?): Int visitExpression fun visitExpression(context: ExpressionContext?): Int visitPrimitiveExpression fun visitPrimitiveExpression(ctx: PrimitiveExpressionContext?): Int","title":"ExpressionVisitor - Pinelang"},{"location":"latest/core/org.pinelang.ast/-expression-visitor/#expressionvisitor","text":"@ExperimentalUnsignedTypes class ExpressionVisitor : PineScriptVisitor < Int >","title":"ExpressionVisitor"},{"location":"latest/core/org.pinelang.ast/-expression-visitor/#constructors","text":"Name Summary <init> ExpressionVisitor(compiler: PineCompiler , ownerType: Int , ownerId: Int , debug: Boolean )","title":"Constructors"},{"location":"latest/core/org.pinelang.ast/-expression-visitor/#properties","text":"Name Summary ownerId var ownerId: Int ownerType var ownerType: Int","title":"Properties"},{"location":"latest/core/org.pinelang.ast/-expression-visitor/#functions","text":"Name Summary reset fun reset(ownerType: Int , ownerId: Int ): ExpressionVisitor visitCallableExpression fun visitCallableExpression(ctx: CallableExpressionContext?): Int visitExpression fun visitExpression(context: ExpressionContext?): Int visitPrimitiveExpression fun visitPrimitiveExpression(ctx: PrimitiveExpressionContext?): Int","title":"Functions"},{"location":"latest/core/org.pinelang.ast/-expression-visitor/-init-/","text":"core / org.pinelang.ast / ExpressionVisitor / <init> <init> \u00b6 ExpressionVisitor(compiler: PineCompiler , ownerType: Int , ownerId: Int , debug: Boolean )","title":" init "},{"location":"latest/core/org.pinelang.ast/-expression-visitor/-init-/#init","text":"ExpressionVisitor(compiler: PineCompiler , ownerType: Int , ownerId: Int , debug: Boolean )","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.ast/-expression-visitor/owner-id/","text":"core / org.pinelang.ast / ExpressionVisitor / ownerId ownerId \u00b6 var ownerId: Int","title":"ownerId - Pinelang"},{"location":"latest/core/org.pinelang.ast/-expression-visitor/owner-id/#ownerid","text":"var ownerId: Int","title":"ownerId"},{"location":"latest/core/org.pinelang.ast/-expression-visitor/owner-type/","text":"core / org.pinelang.ast / ExpressionVisitor / ownerType ownerType \u00b6 var ownerType: Int","title":"ownerType - Pinelang"},{"location":"latest/core/org.pinelang.ast/-expression-visitor/owner-type/#ownertype","text":"var ownerType: Int","title":"ownerType"},{"location":"latest/core/org.pinelang.ast/-expression-visitor/reset/","text":"core / org.pinelang.ast / ExpressionVisitor / reset reset \u00b6 fun reset(ownerType: Int , ownerId: Int ): ExpressionVisitor","title":"reset - Pinelang"},{"location":"latest/core/org.pinelang.ast/-expression-visitor/reset/#reset","text":"fun reset(ownerType: Int , ownerId: Int ): ExpressionVisitor","title":"reset"},{"location":"latest/core/org.pinelang.ast/-expression-visitor/visit-callable-expression/","text":"core / org.pinelang.ast / ExpressionVisitor / visitCallableExpression visitCallableExpression \u00b6 fun visitCallableExpression(ctx: CallableExpressionContext?): Int","title":"visitCallableExpression - Pinelang"},{"location":"latest/core/org.pinelang.ast/-expression-visitor/visit-callable-expression/#visitcallableexpression","text":"fun visitCallableExpression(ctx: CallableExpressionContext?): Int","title":"visitCallableExpression"},{"location":"latest/core/org.pinelang.ast/-expression-visitor/visit-expression/","text":"core / org.pinelang.ast / ExpressionVisitor / visitExpression visitExpression \u00b6 fun visitExpression(context: ExpressionContext?): Int","title":"visitExpression - Pinelang"},{"location":"latest/core/org.pinelang.ast/-expression-visitor/visit-expression/#visitexpression","text":"fun visitExpression(context: ExpressionContext?): Int","title":"visitExpression"},{"location":"latest/core/org.pinelang.ast/-expression-visitor/visit-primitive-expression/","text":"core / org.pinelang.ast / ExpressionVisitor / visitPrimitiveExpression visitPrimitiveExpression \u00b6 fun visitPrimitiveExpression(ctx: PrimitiveExpressionContext?): Int","title":"visitPrimitiveExpression - Pinelang"},{"location":"latest/core/org.pinelang.ast/-expression-visitor/visit-primitive-expression/#visitprimitiveexpression","text":"fun visitPrimitiveExpression(ctx: PrimitiveExpressionContext?): Int","title":"visitPrimitiveExpression"},{"location":"latest/core/org.pinelang.ast/-object-definition-visitor/","text":"core / org.pinelang.ast / ObjectDefinitionVisitor ObjectDefinitionVisitor \u00b6 class ObjectDefinitionVisitor : PineScriptVisitor < Int > Constructors \u00b6 Name Summary <init> ObjectDefinitionVisitor(compiler: PineCompiler , debug: Boolean ) Functions \u00b6 Name Summary visitObjectDefinition fun visitObjectDefinition(ctx: ObjectDefinitionContext): Int","title":"ObjectDefinitionVisitor - Pinelang"},{"location":"latest/core/org.pinelang.ast/-object-definition-visitor/#objectdefinitionvisitor","text":"class ObjectDefinitionVisitor : PineScriptVisitor < Int >","title":"ObjectDefinitionVisitor"},{"location":"latest/core/org.pinelang.ast/-object-definition-visitor/#constructors","text":"Name Summary <init> ObjectDefinitionVisitor(compiler: PineCompiler , debug: Boolean )","title":"Constructors"},{"location":"latest/core/org.pinelang.ast/-object-definition-visitor/#functions","text":"Name Summary visitObjectDefinition fun visitObjectDefinition(ctx: ObjectDefinitionContext): Int","title":"Functions"},{"location":"latest/core/org.pinelang.ast/-object-definition-visitor/-init-/","text":"core / org.pinelang.ast / ObjectDefinitionVisitor / <init> <init> \u00b6 ObjectDefinitionVisitor(compiler: PineCompiler , debug: Boolean )","title":" init "},{"location":"latest/core/org.pinelang.ast/-object-definition-visitor/-init-/#init","text":"ObjectDefinitionVisitor(compiler: PineCompiler , debug: Boolean )","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.ast/-object-definition-visitor/visit-object-definition/","text":"core / org.pinelang.ast / ObjectDefinitionVisitor / visitObjectDefinition visitObjectDefinition \u00b6 fun visitObjectDefinition(ctx: ObjectDefinitionContext): Int","title":"visitObjectDefinition - Pinelang"},{"location":"latest/core/org.pinelang.ast/-object-definition-visitor/visit-object-definition/#visitobjectdefinition","text":"fun visitObjectDefinition(ctx: ObjectDefinitionContext): Int","title":"visitObjectDefinition"},{"location":"latest/core/org.pinelang.ast/-pine-script-visitor/","text":"core / org.pinelang.ast / PineScriptVisitor PineScriptVisitor \u00b6 open class PineScriptVisitor<T> : PineScriptBaseVisitor <T> Constructors \u00b6 Name Summary <init> PineScriptVisitor(compiler: PineCompiler , debug: Boolean ) Properties \u00b6 Name Summary compiler var compiler: PineCompiler debug var debug: Boolean fb val fb: CustomFlatBufferBuilder types val types: IndexedMap < PineMetaObject > Functions \u00b6 Name Summary createDebugInfo fun createDebugInfo(startNode: TerminalNode, endNode: TerminalNode, name: String ?, type: String ?): Int fun createDebugInfo(ctx: ParserRuleContext, name: String ?, type: String ?): Int fun createDebugInfo(startToken: Token, endToken: Token, name: String ?, type: String ?): Int throwCallableNotFound fun ParserRuleContext.throwCallableNotFound(callableName: String , objName: String ): Nothing throwObjNotFound fun ParserRuleContext.throwObjNotFound(objName: String ): Nothing throwParseException fun ParserRuleContext.throwParseException(msg: String ): Nothing fun TerminalNode.throwParseException(msg: String ): Nothing throwPropNotFound fun ParserRuleContext.throwPropNotFound(propName: String , objName: String ): Nothing Inheritors \u00b6 Name Summary ExpressionVisitor class ExpressionVisitor : PineScriptVisitor < Int > ObjectDefinitionVisitor class ObjectDefinitionVisitor : PineScriptVisitor < Int > ProgramVisitor class ProgramVisitor : PineScriptVisitor < Program > PropertyVisitor class PropertyVisitor : PineScriptVisitor < Int >","title":"PineScriptVisitor - Pinelang"},{"location":"latest/core/org.pinelang.ast/-pine-script-visitor/#pinescriptvisitor","text":"open class PineScriptVisitor<T> : PineScriptBaseVisitor <T>","title":"PineScriptVisitor"},{"location":"latest/core/org.pinelang.ast/-pine-script-visitor/#constructors","text":"Name Summary <init> PineScriptVisitor(compiler: PineCompiler , debug: Boolean )","title":"Constructors"},{"location":"latest/core/org.pinelang.ast/-pine-script-visitor/#properties","text":"Name Summary compiler var compiler: PineCompiler debug var debug: Boolean fb val fb: CustomFlatBufferBuilder types val types: IndexedMap < PineMetaObject >","title":"Properties"},{"location":"latest/core/org.pinelang.ast/-pine-script-visitor/#functions","text":"Name Summary createDebugInfo fun createDebugInfo(startNode: TerminalNode, endNode: TerminalNode, name: String ?, type: String ?): Int fun createDebugInfo(ctx: ParserRuleContext, name: String ?, type: String ?): Int fun createDebugInfo(startToken: Token, endToken: Token, name: String ?, type: String ?): Int throwCallableNotFound fun ParserRuleContext.throwCallableNotFound(callableName: String , objName: String ): Nothing throwObjNotFound fun ParserRuleContext.throwObjNotFound(objName: String ): Nothing throwParseException fun ParserRuleContext.throwParseException(msg: String ): Nothing fun TerminalNode.throwParseException(msg: String ): Nothing throwPropNotFound fun ParserRuleContext.throwPropNotFound(propName: String , objName: String ): Nothing","title":"Functions"},{"location":"latest/core/org.pinelang.ast/-pine-script-visitor/#inheritors","text":"Name Summary ExpressionVisitor class ExpressionVisitor : PineScriptVisitor < Int > ObjectDefinitionVisitor class ObjectDefinitionVisitor : PineScriptVisitor < Int > ProgramVisitor class ProgramVisitor : PineScriptVisitor < Program > PropertyVisitor class PropertyVisitor : PineScriptVisitor < Int >","title":"Inheritors"},{"location":"latest/core/org.pinelang.ast/-pine-script-visitor/-init-/","text":"core / org.pinelang.ast / PineScriptVisitor / <init> <init> \u00b6 PineScriptVisitor(compiler: PineCompiler , debug: Boolean )","title":" init "},{"location":"latest/core/org.pinelang.ast/-pine-script-visitor/-init-/#init","text":"PineScriptVisitor(compiler: PineCompiler , debug: Boolean )","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.ast/-pine-script-visitor/compiler/","text":"core / org.pinelang.ast / PineScriptVisitor / compiler compiler \u00b6 protected var compiler: PineCompiler","title":"compiler - Pinelang"},{"location":"latest/core/org.pinelang.ast/-pine-script-visitor/compiler/#compiler","text":"protected var compiler: PineCompiler","title":"compiler"},{"location":"latest/core/org.pinelang.ast/-pine-script-visitor/create-debug-info/","text":"core / org.pinelang.ast / PineScriptVisitor / createDebugInfo createDebugInfo \u00b6 fun createDebugInfo(startNode: TerminalNode, endNode: TerminalNode, name: String ?, type: String ?): Int fun createDebugInfo(ctx: ParserRuleContext, name: String ?, type: String ?): Int fun createDebugInfo(startToken: Token, endToken: Token, name: String ?, type: String ?): Int","title":"createDebugInfo - Pinelang"},{"location":"latest/core/org.pinelang.ast/-pine-script-visitor/create-debug-info/#createdebuginfo","text":"fun createDebugInfo(startNode: TerminalNode, endNode: TerminalNode, name: String ?, type: String ?): Int fun createDebugInfo(ctx: ParserRuleContext, name: String ?, type: String ?): Int fun createDebugInfo(startToken: Token, endToken: Token, name: String ?, type: String ?): Int","title":"createDebugInfo"},{"location":"latest/core/org.pinelang.ast/-pine-script-visitor/debug/","text":"core / org.pinelang.ast / PineScriptVisitor / debug debug \u00b6 var debug: Boolean","title":"debug - Pinelang"},{"location":"latest/core/org.pinelang.ast/-pine-script-visitor/debug/#debug","text":"var debug: Boolean","title":"debug"},{"location":"latest/core/org.pinelang.ast/-pine-script-visitor/fb/","text":"core / org.pinelang.ast / PineScriptVisitor / fb fb \u00b6 val fb: CustomFlatBufferBuilder","title":"fb - Pinelang"},{"location":"latest/core/org.pinelang.ast/-pine-script-visitor/fb/#fb","text":"val fb: CustomFlatBufferBuilder","title":"fb"},{"location":"latest/core/org.pinelang.ast/-pine-script-visitor/throw-callable-not-found/","text":"core / org.pinelang.ast / PineScriptVisitor / throwCallableNotFound throwCallableNotFound \u00b6 fun ParserRuleContext.throwCallableNotFound(callableName: String , objName: String ): Nothing","title":"throwCallableNotFound - Pinelang"},{"location":"latest/core/org.pinelang.ast/-pine-script-visitor/throw-callable-not-found/#throwcallablenotfound","text":"fun ParserRuleContext.throwCallableNotFound(callableName: String , objName: String ): Nothing","title":"throwCallableNotFound"},{"location":"latest/core/org.pinelang.ast/-pine-script-visitor/throw-obj-not-found/","text":"core / org.pinelang.ast / PineScriptVisitor / throwObjNotFound throwObjNotFound \u00b6 fun ParserRuleContext.throwObjNotFound(objName: String ): Nothing","title":"throwObjNotFound - Pinelang"},{"location":"latest/core/org.pinelang.ast/-pine-script-visitor/throw-obj-not-found/#throwobjnotfound","text":"fun ParserRuleContext.throwObjNotFound(objName: String ): Nothing","title":"throwObjNotFound"},{"location":"latest/core/org.pinelang.ast/-pine-script-visitor/throw-parse-exception/","text":"core / org.pinelang.ast / PineScriptVisitor / throwParseException throwParseException \u00b6 fun ParserRuleContext.throwParseException(msg: String ): Nothing fun TerminalNode.throwParseException(msg: String ): Nothing","title":"throwParseException - Pinelang"},{"location":"latest/core/org.pinelang.ast/-pine-script-visitor/throw-parse-exception/#throwparseexception","text":"fun ParserRuleContext.throwParseException(msg: String ): Nothing fun TerminalNode.throwParseException(msg: String ): Nothing","title":"throwParseException"},{"location":"latest/core/org.pinelang.ast/-pine-script-visitor/throw-prop-not-found/","text":"core / org.pinelang.ast / PineScriptVisitor / throwPropNotFound throwPropNotFound \u00b6 fun ParserRuleContext.throwPropNotFound(propName: String , objName: String ): Nothing","title":"throwPropNotFound - Pinelang"},{"location":"latest/core/org.pinelang.ast/-pine-script-visitor/throw-prop-not-found/#throwpropnotfound","text":"fun ParserRuleContext.throwPropNotFound(propName: String , objName: String ): Nothing","title":"throwPropNotFound"},{"location":"latest/core/org.pinelang.ast/-pine-script-visitor/types/","text":"core / org.pinelang.ast / PineScriptVisitor / types types \u00b6 val types: IndexedMap < PineMetaObject >","title":"types - Pinelang"},{"location":"latest/core/org.pinelang.ast/-pine-script-visitor/types/#types","text":"val types: IndexedMap < PineMetaObject >","title":"types"},{"location":"latest/core/org.pinelang.ast/-program-visitor/","text":"core / org.pinelang.ast / ProgramVisitor ProgramVisitor \u00b6 @ExperimentalUnsignedTypes class ProgramVisitor : PineScriptVisitor < Program > Constructors \u00b6 Name Summary <init> ProgramVisitor(compiler: PineCompiler , debug: Boolean ) Functions \u00b6 Name Summary visitProgram fun visitProgram(ctx: ProgramContext): Program","title":"ProgramVisitor - Pinelang"},{"location":"latest/core/org.pinelang.ast/-program-visitor/#programvisitor","text":"@ExperimentalUnsignedTypes class ProgramVisitor : PineScriptVisitor < Program >","title":"ProgramVisitor"},{"location":"latest/core/org.pinelang.ast/-program-visitor/#constructors","text":"Name Summary <init> ProgramVisitor(compiler: PineCompiler , debug: Boolean )","title":"Constructors"},{"location":"latest/core/org.pinelang.ast/-program-visitor/#functions","text":"Name Summary visitProgram fun visitProgram(ctx: ProgramContext): Program","title":"Functions"},{"location":"latest/core/org.pinelang.ast/-program-visitor/-init-/","text":"core / org.pinelang.ast / ProgramVisitor / <init> <init> \u00b6 ProgramVisitor(compiler: PineCompiler , debug: Boolean )","title":" init "},{"location":"latest/core/org.pinelang.ast/-program-visitor/-init-/#init","text":"ProgramVisitor(compiler: PineCompiler , debug: Boolean )","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.ast/-program-visitor/visit-program/","text":"core / org.pinelang.ast / ProgramVisitor / visitProgram visitProgram \u00b6 fun visitProgram(ctx: ProgramContext): Program","title":"visitProgram - Pinelang"},{"location":"latest/core/org.pinelang.ast/-program-visitor/visit-program/#visitprogram","text":"fun visitProgram(ctx: ProgramContext): Program","title":"visitProgram"},{"location":"latest/core/org.pinelang.ast/-property-visitor/","text":"core / org.pinelang.ast / PropertyVisitor PropertyVisitor \u00b6 @ExperimentalUnsignedTypes class PropertyVisitor : PineScriptVisitor < Int > Constructors \u00b6 Name Summary <init> PropertyVisitor(compiler: PineCompiler , ownerType: Int , ownerId: Int , debug: Boolean ) Properties \u00b6 Name Summary expressionVisitor val expressionVisitor: ExpressionVisitor ownerId var ownerId: Int ownerType var ownerType: Int Functions \u00b6 Name Summary reset fun reset(ownerType: Int , ownerId: Int ): PropertyVisitor visitPropertyDefinition fun visitPropertyDefinition(ctx: PropertyDefinitionContext?): Int","title":"PropertyVisitor - Pinelang"},{"location":"latest/core/org.pinelang.ast/-property-visitor/#propertyvisitor","text":"@ExperimentalUnsignedTypes class PropertyVisitor : PineScriptVisitor < Int >","title":"PropertyVisitor"},{"location":"latest/core/org.pinelang.ast/-property-visitor/#constructors","text":"Name Summary <init> PropertyVisitor(compiler: PineCompiler , ownerType: Int , ownerId: Int , debug: Boolean )","title":"Constructors"},{"location":"latest/core/org.pinelang.ast/-property-visitor/#properties","text":"Name Summary expressionVisitor val expressionVisitor: ExpressionVisitor ownerId var ownerId: Int ownerType var ownerType: Int","title":"Properties"},{"location":"latest/core/org.pinelang.ast/-property-visitor/#functions","text":"Name Summary reset fun reset(ownerType: Int , ownerId: Int ): PropertyVisitor visitPropertyDefinition fun visitPropertyDefinition(ctx: PropertyDefinitionContext?): Int","title":"Functions"},{"location":"latest/core/org.pinelang.ast/-property-visitor/-init-/","text":"core / org.pinelang.ast / PropertyVisitor / <init> <init> \u00b6 PropertyVisitor(compiler: PineCompiler , ownerType: Int , ownerId: Int , debug: Boolean )","title":" init "},{"location":"latest/core/org.pinelang.ast/-property-visitor/-init-/#init","text":"PropertyVisitor(compiler: PineCompiler , ownerType: Int , ownerId: Int , debug: Boolean )","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.ast/-property-visitor/expression-visitor/","text":"core / org.pinelang.ast / PropertyVisitor / expressionVisitor expressionVisitor \u00b6 val expressionVisitor: ExpressionVisitor","title":"expressionVisitor - Pinelang"},{"location":"latest/core/org.pinelang.ast/-property-visitor/expression-visitor/#expressionvisitor","text":"val expressionVisitor: ExpressionVisitor","title":"expressionVisitor"},{"location":"latest/core/org.pinelang.ast/-property-visitor/owner-id/","text":"core / org.pinelang.ast / PropertyVisitor / ownerId ownerId \u00b6 var ownerId: Int","title":"ownerId - Pinelang"},{"location":"latest/core/org.pinelang.ast/-property-visitor/owner-id/#ownerid","text":"var ownerId: Int","title":"ownerId"},{"location":"latest/core/org.pinelang.ast/-property-visitor/owner-type/","text":"core / org.pinelang.ast / PropertyVisitor / ownerType ownerType \u00b6 var ownerType: Int","title":"ownerType - Pinelang"},{"location":"latest/core/org.pinelang.ast/-property-visitor/owner-type/#ownertype","text":"var ownerType: Int","title":"ownerType"},{"location":"latest/core/org.pinelang.ast/-property-visitor/reset/","text":"core / org.pinelang.ast / PropertyVisitor / reset reset \u00b6 fun reset(ownerType: Int , ownerId: Int ): PropertyVisitor","title":"reset - Pinelang"},{"location":"latest/core/org.pinelang.ast/-property-visitor/reset/#reset","text":"fun reset(ownerType: Int , ownerId: Int ): PropertyVisitor","title":"reset"},{"location":"latest/core/org.pinelang.ast/-property-visitor/visit-property-definition/","text":"core / org.pinelang.ast / PropertyVisitor / visitPropertyDefinition visitPropertyDefinition \u00b6 fun visitPropertyDefinition(ctx: PropertyDefinitionContext?): Int","title":"visitPropertyDefinition - Pinelang"},{"location":"latest/core/org.pinelang.ast/-property-visitor/visit-property-definition/#visitpropertydefinition","text":"fun visitPropertyDefinition(ctx: PropertyDefinitionContext?): Int","title":"visitPropertyDefinition"},{"location":"latest/core/org.pinelang.ast.fbs/","text":"core / org.pinelang.ast.fbs Package org.pinelang.ast.fbs \u00b6 Types \u00b6 Name Summary BinaryExpr class BinaryExpr : Table BinaryOp class BinaryOp CallableExpr class CallableExpr : Table DebugInfo class DebugInfo : Table Expr class Expr : Table ExprValue class ExprValue ObjectDefinition class ObjectDefinition : Table Position class Position : Struct PrimitiveExpr class PrimitiveExpr : Table PrimitiveType class PrimitiveType Program class Program : Table PropDefinition class PropDefinition : Table PropRefExpr class PropRefExpr : Table Range class Range : Struct SignalExpr class SignalExpr : Table","title":"Package org.pinelang.ast.fbs - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/#package-orgpinelangastfbs","text":"","title":"Package org.pinelang.ast.fbs"},{"location":"latest/core/org.pinelang.ast.fbs/#types","text":"Name Summary BinaryExpr class BinaryExpr : Table BinaryOp class BinaryOp CallableExpr class CallableExpr : Table DebugInfo class DebugInfo : Table Expr class Expr : Table ExprValue class ExprValue ObjectDefinition class ObjectDefinition : Table Position class Position : Struct PrimitiveExpr class PrimitiveExpr : Table PrimitiveType class PrimitiveType Program class Program : Table PropDefinition class PropDefinition : Table PropRefExpr class PropRefExpr : Table Range class Range : Struct SignalExpr class SignalExpr : Table","title":"Types"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-expr/","text":"core / org.pinelang.ast.fbs / BinaryExpr BinaryExpr \u00b6 @ExperimentalUnsignedTypes class BinaryExpr : Table Constructors \u00b6 Name Summary <init> BinaryExpr() Properties \u00b6 Name Summary left val left: Expr ? op val op: UByte right val right: Expr ? Functions \u00b6 Name Summary __assign fun __assign(_i: Int , _bb: ByteBuffer ): BinaryExpr __init fun __init(_i: Int , _bb: ByteBuffer ): Unit left fun left(obj: Expr ): Expr ? right fun right(obj: Expr ): Expr ? Companion Object Functions \u00b6 Name Summary addLeft fun addLeft(builder: FlatBufferBuilder, left: Int ): Unit addOp fun addOp(builder: FlatBufferBuilder, op: UByte ): Unit addRight fun addRight(builder: FlatBufferBuilder, right: Int ): Unit createBinaryExpr fun createBinaryExpr(builder: FlatBufferBuilder, op: UByte , leftOffset: Int , rightOffset: Int ): Int endBinaryExpr fun endBinaryExpr(builder: FlatBufferBuilder): Int getRootAsBinaryExpr fun getRootAsBinaryExpr(_bb: ByteBuffer ): BinaryExpr fun getRootAsBinaryExpr(_bb: ByteBuffer , obj: BinaryExpr ): BinaryExpr startBinaryExpr fun startBinaryExpr(builder: FlatBufferBuilder): Unit validateVersion fun validateVersion(): Unit","title":"BinaryExpr - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-expr/#binaryexpr","text":"@ExperimentalUnsignedTypes class BinaryExpr : Table","title":"BinaryExpr"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-expr/#constructors","text":"Name Summary <init> BinaryExpr()","title":"Constructors"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-expr/#properties","text":"Name Summary left val left: Expr ? op val op: UByte right val right: Expr ?","title":"Properties"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-expr/#functions","text":"Name Summary __assign fun __assign(_i: Int , _bb: ByteBuffer ): BinaryExpr __init fun __init(_i: Int , _bb: ByteBuffer ): Unit left fun left(obj: Expr ): Expr ? right fun right(obj: Expr ): Expr ?","title":"Functions"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-expr/#companion-object-functions","text":"Name Summary addLeft fun addLeft(builder: FlatBufferBuilder, left: Int ): Unit addOp fun addOp(builder: FlatBufferBuilder, op: UByte ): Unit addRight fun addRight(builder: FlatBufferBuilder, right: Int ): Unit createBinaryExpr fun createBinaryExpr(builder: FlatBufferBuilder, op: UByte , leftOffset: Int , rightOffset: Int ): Int endBinaryExpr fun endBinaryExpr(builder: FlatBufferBuilder): Int getRootAsBinaryExpr fun getRootAsBinaryExpr(_bb: ByteBuffer ): BinaryExpr fun getRootAsBinaryExpr(_bb: ByteBuffer , obj: BinaryExpr ): BinaryExpr startBinaryExpr fun startBinaryExpr(builder: FlatBufferBuilder): Unit validateVersion fun validateVersion(): Unit","title":"Companion Object Functions"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-expr/-init-/","text":"core / org.pinelang.ast.fbs / BinaryExpr / <init> <init> \u00b6 BinaryExpr()","title":" init "},{"location":"latest/core/org.pinelang.ast.fbs/-binary-expr/-init-/#init","text":"BinaryExpr()","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-expr/__assign/","text":"core / org.pinelang.ast.fbs / BinaryExpr / __assign __assign \u00b6 fun __assign(_i: Int , _bb: ByteBuffer ): BinaryExpr","title":"__assign - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-expr/__assign/#__assign","text":"fun __assign(_i: Int , _bb: ByteBuffer ): BinaryExpr","title":"__assign"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-expr/__init/","text":"core / org.pinelang.ast.fbs / BinaryExpr / __init __init \u00b6 fun __init(_i: Int , _bb: ByteBuffer ): Unit","title":"__init - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-expr/__init/#__init","text":"fun __init(_i: Int , _bb: ByteBuffer ): Unit","title":"__init"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-expr/add-left/","text":"core / org.pinelang.ast.fbs / BinaryExpr / addLeft addLeft \u00b6 fun addLeft(builder: FlatBufferBuilder, left: Int ): Unit","title":"addLeft - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-expr/add-left/#addleft","text":"fun addLeft(builder: FlatBufferBuilder, left: Int ): Unit","title":"addLeft"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-expr/add-op/","text":"core / org.pinelang.ast.fbs / BinaryExpr / addOp addOp \u00b6 fun addOp(builder: FlatBufferBuilder, op: UByte ): Unit","title":"addOp - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-expr/add-op/#addop","text":"fun addOp(builder: FlatBufferBuilder, op: UByte ): Unit","title":"addOp"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-expr/add-right/","text":"core / org.pinelang.ast.fbs / BinaryExpr / addRight addRight \u00b6 fun addRight(builder: FlatBufferBuilder, right: Int ): Unit","title":"addRight - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-expr/add-right/#addright","text":"fun addRight(builder: FlatBufferBuilder, right: Int ): Unit","title":"addRight"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-expr/create-binary-expr/","text":"core / org.pinelang.ast.fbs / BinaryExpr / createBinaryExpr createBinaryExpr \u00b6 fun createBinaryExpr(builder: FlatBufferBuilder, op: UByte , leftOffset: Int , rightOffset: Int ): Int","title":"createBinaryExpr - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-expr/create-binary-expr/#createbinaryexpr","text":"fun createBinaryExpr(builder: FlatBufferBuilder, op: UByte , leftOffset: Int , rightOffset: Int ): Int","title":"createBinaryExpr"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-expr/end-binary-expr/","text":"core / org.pinelang.ast.fbs / BinaryExpr / endBinaryExpr endBinaryExpr \u00b6 fun endBinaryExpr(builder: FlatBufferBuilder): Int","title":"endBinaryExpr - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-expr/end-binary-expr/#endbinaryexpr","text":"fun endBinaryExpr(builder: FlatBufferBuilder): Int","title":"endBinaryExpr"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-expr/get-root-as-binary-expr/","text":"core / org.pinelang.ast.fbs / BinaryExpr / getRootAsBinaryExpr getRootAsBinaryExpr \u00b6 fun getRootAsBinaryExpr(_bb: ByteBuffer ): BinaryExpr fun getRootAsBinaryExpr(_bb: ByteBuffer , obj: BinaryExpr ): BinaryExpr","title":"getRootAsBinaryExpr - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-expr/get-root-as-binary-expr/#getrootasbinaryexpr","text":"fun getRootAsBinaryExpr(_bb: ByteBuffer ): BinaryExpr fun getRootAsBinaryExpr(_bb: ByteBuffer , obj: BinaryExpr ): BinaryExpr","title":"getRootAsBinaryExpr"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-expr/left/","text":"core / org.pinelang.ast.fbs / BinaryExpr / left left \u00b6 val left: Expr ? fun left(obj: Expr ): Expr ?","title":"left - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-expr/left/#left","text":"val left: Expr ? fun left(obj: Expr ): Expr ?","title":"left"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-expr/op/","text":"core / org.pinelang.ast.fbs / BinaryExpr / op op \u00b6 val op: UByte","title":"op - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-expr/op/#op","text":"val op: UByte","title":"op"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-expr/right/","text":"core / org.pinelang.ast.fbs / BinaryExpr / right right \u00b6 val right: Expr ? fun right(obj: Expr ): Expr ?","title":"right - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-expr/right/#right","text":"val right: Expr ? fun right(obj: Expr ): Expr ?","title":"right"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-expr/start-binary-expr/","text":"core / org.pinelang.ast.fbs / BinaryExpr / startBinaryExpr startBinaryExpr \u00b6 fun startBinaryExpr(builder: FlatBufferBuilder): Unit","title":"startBinaryExpr - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-expr/start-binary-expr/#startbinaryexpr","text":"fun startBinaryExpr(builder: FlatBufferBuilder): Unit","title":"startBinaryExpr"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-expr/validate-version/","text":"core / org.pinelang.ast.fbs / BinaryExpr / validateVersion validateVersion \u00b6 fun validateVersion(): Unit","title":"validateVersion - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-expr/validate-version/#validateversion","text":"fun validateVersion(): Unit","title":"validateVersion"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-op/","text":"core / org.pinelang.ast.fbs / BinaryOp BinaryOp \u00b6 @ExperimentalUnsignedTypes class BinaryOp Companion Object Properties \u00b6 Name Summary AND const val AND: UByte DIV const val DIV: UByte EQUAL const val EQUAL: UByte MINUS const val MINUS: UByte MULTI const val MULTI: UByte names val names: Array < String > OR const val OR: UByte PLUS const val PLUS: UByte REMAINDER const val REMAINDER: UByte Companion Object Functions \u00b6 Name Summary name fun name(e: Int ): String","title":"BinaryOp - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-op/#binaryop","text":"@ExperimentalUnsignedTypes class BinaryOp","title":"BinaryOp"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-op/#companion-object-properties","text":"Name Summary AND const val AND: UByte DIV const val DIV: UByte EQUAL const val EQUAL: UByte MINUS const val MINUS: UByte MULTI const val MULTI: UByte names val names: Array < String > OR const val OR: UByte PLUS const val PLUS: UByte REMAINDER const val REMAINDER: UByte","title":"Companion Object Properties"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-op/#companion-object-functions","text":"Name Summary name fun name(e: Int ): String","title":"Companion Object Functions"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-op/-a-n-d/","text":"core / org.pinelang.ast.fbs / BinaryOp / AND AND \u00b6 const val AND: UByte","title":"AND - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-op/-a-n-d/#and","text":"const val AND: UByte","title":"AND"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-op/-d-i-v/","text":"core / org.pinelang.ast.fbs / BinaryOp / DIV DIV \u00b6 const val DIV: UByte","title":"DIV - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-op/-d-i-v/#div","text":"const val DIV: UByte","title":"DIV"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-op/-e-q-u-a-l/","text":"core / org.pinelang.ast.fbs / BinaryOp / EQUAL EQUAL \u00b6 const val EQUAL: UByte","title":"EQUAL - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-op/-e-q-u-a-l/#equal","text":"const val EQUAL: UByte","title":"EQUAL"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-op/-m-i-n-u-s/","text":"core / org.pinelang.ast.fbs / BinaryOp / MINUS MINUS \u00b6 const val MINUS: UByte","title":"MINUS - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-op/-m-i-n-u-s/#minus","text":"const val MINUS: UByte","title":"MINUS"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-op/-m-u-l-t-i/","text":"core / org.pinelang.ast.fbs / BinaryOp / MULTI MULTI \u00b6 const val MULTI: UByte","title":"MULTI - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-op/-m-u-l-t-i/#multi","text":"const val MULTI: UByte","title":"MULTI"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-op/-o-r/","text":"core / org.pinelang.ast.fbs / BinaryOp / OR OR \u00b6 const val OR: UByte","title":"OR - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-op/-o-r/#or","text":"const val OR: UByte","title":"OR"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-op/-p-l-u-s/","text":"core / org.pinelang.ast.fbs / BinaryOp / PLUS PLUS \u00b6 const val PLUS: UByte","title":"PLUS - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-op/-p-l-u-s/#plus","text":"const val PLUS: UByte","title":"PLUS"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-op/-r-e-m-a-i-n-d-e-r/","text":"core / org.pinelang.ast.fbs / BinaryOp / REMAINDER REMAINDER \u00b6 const val REMAINDER: UByte","title":"REMAINDER - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-op/-r-e-m-a-i-n-d-e-r/#remainder","text":"const val REMAINDER: UByte","title":"REMAINDER"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-op/name/","text":"core / org.pinelang.ast.fbs / BinaryOp / name name \u00b6 fun name(e: Int ): String","title":"name - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-op/name/#name","text":"fun name(e: Int ): String","title":"name"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-op/names/","text":"core / org.pinelang.ast.fbs / BinaryOp / names names \u00b6 val names: Array < String >","title":"names - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-binary-op/names/#names","text":"val names: Array < String >","title":"names"},{"location":"latest/core/org.pinelang.ast.fbs/-callable-expr/","text":"core / org.pinelang.ast.fbs / CallableExpr CallableExpr \u00b6 @ExperimentalUnsignedTypes class CallableExpr : Table Constructors \u00b6 Name Summary <init> CallableExpr() Properties \u00b6 Name Summary callIdx val callIdx: UByte objId val objId: Int Functions \u00b6 Name Summary __assign fun __assign(_i: Int , _bb: ByteBuffer ): CallableExpr __init fun __init(_i: Int , _bb: ByteBuffer ): Unit Companion Object Functions \u00b6 Name Summary addCallIdx fun addCallIdx(builder: FlatBufferBuilder, callIdx: UByte ): Unit addObjId fun addObjId(builder: FlatBufferBuilder, objId: Int ): Unit createCallableExpr fun createCallableExpr(builder: FlatBufferBuilder, objId: Int , callIdx: UByte ): Int endCallableExpr fun endCallableExpr(builder: FlatBufferBuilder): Int getRootAsCallableExpr fun getRootAsCallableExpr(_bb: ByteBuffer ): CallableExpr fun getRootAsCallableExpr(_bb: ByteBuffer , obj: CallableExpr ): CallableExpr startCallableExpr fun startCallableExpr(builder: FlatBufferBuilder): Unit validateVersion fun validateVersion(): Unit","title":"CallableExpr - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-callable-expr/#callableexpr","text":"@ExperimentalUnsignedTypes class CallableExpr : Table","title":"CallableExpr"},{"location":"latest/core/org.pinelang.ast.fbs/-callable-expr/#constructors","text":"Name Summary <init> CallableExpr()","title":"Constructors"},{"location":"latest/core/org.pinelang.ast.fbs/-callable-expr/#properties","text":"Name Summary callIdx val callIdx: UByte objId val objId: Int","title":"Properties"},{"location":"latest/core/org.pinelang.ast.fbs/-callable-expr/#functions","text":"Name Summary __assign fun __assign(_i: Int , _bb: ByteBuffer ): CallableExpr __init fun __init(_i: Int , _bb: ByteBuffer ): Unit","title":"Functions"},{"location":"latest/core/org.pinelang.ast.fbs/-callable-expr/#companion-object-functions","text":"Name Summary addCallIdx fun addCallIdx(builder: FlatBufferBuilder, callIdx: UByte ): Unit addObjId fun addObjId(builder: FlatBufferBuilder, objId: Int ): Unit createCallableExpr fun createCallableExpr(builder: FlatBufferBuilder, objId: Int , callIdx: UByte ): Int endCallableExpr fun endCallableExpr(builder: FlatBufferBuilder): Int getRootAsCallableExpr fun getRootAsCallableExpr(_bb: ByteBuffer ): CallableExpr fun getRootAsCallableExpr(_bb: ByteBuffer , obj: CallableExpr ): CallableExpr startCallableExpr fun startCallableExpr(builder: FlatBufferBuilder): Unit validateVersion fun validateVersion(): Unit","title":"Companion Object Functions"},{"location":"latest/core/org.pinelang.ast.fbs/-callable-expr/-init-/","text":"core / org.pinelang.ast.fbs / CallableExpr / <init> <init> \u00b6 CallableExpr()","title":" init "},{"location":"latest/core/org.pinelang.ast.fbs/-callable-expr/-init-/#init","text":"CallableExpr()","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.ast.fbs/-callable-expr/__assign/","text":"core / org.pinelang.ast.fbs / CallableExpr / __assign __assign \u00b6 fun __assign(_i: Int , _bb: ByteBuffer ): CallableExpr","title":"__assign - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-callable-expr/__assign/#__assign","text":"fun __assign(_i: Int , _bb: ByteBuffer ): CallableExpr","title":"__assign"},{"location":"latest/core/org.pinelang.ast.fbs/-callable-expr/__init/","text":"core / org.pinelang.ast.fbs / CallableExpr / __init __init \u00b6 fun __init(_i: Int , _bb: ByteBuffer ): Unit","title":"__init - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-callable-expr/__init/#__init","text":"fun __init(_i: Int , _bb: ByteBuffer ): Unit","title":"__init"},{"location":"latest/core/org.pinelang.ast.fbs/-callable-expr/add-call-idx/","text":"core / org.pinelang.ast.fbs / CallableExpr / addCallIdx addCallIdx \u00b6 fun addCallIdx(builder: FlatBufferBuilder, callIdx: UByte ): Unit","title":"addCallIdx - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-callable-expr/add-call-idx/#addcallidx","text":"fun addCallIdx(builder: FlatBufferBuilder, callIdx: UByte ): Unit","title":"addCallIdx"},{"location":"latest/core/org.pinelang.ast.fbs/-callable-expr/add-obj-id/","text":"core / org.pinelang.ast.fbs / CallableExpr / addObjId addObjId \u00b6 fun addObjId(builder: FlatBufferBuilder, objId: Int ): Unit","title":"addObjId - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-callable-expr/add-obj-id/#addobjid","text":"fun addObjId(builder: FlatBufferBuilder, objId: Int ): Unit","title":"addObjId"},{"location":"latest/core/org.pinelang.ast.fbs/-callable-expr/call-idx/","text":"core / org.pinelang.ast.fbs / CallableExpr / callIdx callIdx \u00b6 val callIdx: UByte","title":"callIdx - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-callable-expr/call-idx/#callidx","text":"val callIdx: UByte","title":"callIdx"},{"location":"latest/core/org.pinelang.ast.fbs/-callable-expr/create-callable-expr/","text":"core / org.pinelang.ast.fbs / CallableExpr / createCallableExpr createCallableExpr \u00b6 fun createCallableExpr(builder: FlatBufferBuilder, objId: Int , callIdx: UByte ): Int","title":"createCallableExpr - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-callable-expr/create-callable-expr/#createcallableexpr","text":"fun createCallableExpr(builder: FlatBufferBuilder, objId: Int , callIdx: UByte ): Int","title":"createCallableExpr"},{"location":"latest/core/org.pinelang.ast.fbs/-callable-expr/end-callable-expr/","text":"core / org.pinelang.ast.fbs / CallableExpr / endCallableExpr endCallableExpr \u00b6 fun endCallableExpr(builder: FlatBufferBuilder): Int","title":"endCallableExpr - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-callable-expr/end-callable-expr/#endcallableexpr","text":"fun endCallableExpr(builder: FlatBufferBuilder): Int","title":"endCallableExpr"},{"location":"latest/core/org.pinelang.ast.fbs/-callable-expr/get-root-as-callable-expr/","text":"core / org.pinelang.ast.fbs / CallableExpr / getRootAsCallableExpr getRootAsCallableExpr \u00b6 fun getRootAsCallableExpr(_bb: ByteBuffer ): CallableExpr fun getRootAsCallableExpr(_bb: ByteBuffer , obj: CallableExpr ): CallableExpr","title":"getRootAsCallableExpr - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-callable-expr/get-root-as-callable-expr/#getrootascallableexpr","text":"fun getRootAsCallableExpr(_bb: ByteBuffer ): CallableExpr fun getRootAsCallableExpr(_bb: ByteBuffer , obj: CallableExpr ): CallableExpr","title":"getRootAsCallableExpr"},{"location":"latest/core/org.pinelang.ast.fbs/-callable-expr/obj-id/","text":"core / org.pinelang.ast.fbs / CallableExpr / objId objId \u00b6 val objId: Int","title":"objId - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-callable-expr/obj-id/#objid","text":"val objId: Int","title":"objId"},{"location":"latest/core/org.pinelang.ast.fbs/-callable-expr/start-callable-expr/","text":"core / org.pinelang.ast.fbs / CallableExpr / startCallableExpr startCallableExpr \u00b6 fun startCallableExpr(builder: FlatBufferBuilder): Unit","title":"startCallableExpr - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-callable-expr/start-callable-expr/#startcallableexpr","text":"fun startCallableExpr(builder: FlatBufferBuilder): Unit","title":"startCallableExpr"},{"location":"latest/core/org.pinelang.ast.fbs/-callable-expr/validate-version/","text":"core / org.pinelang.ast.fbs / CallableExpr / validateVersion validateVersion \u00b6 fun validateVersion(): Unit","title":"validateVersion - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-callable-expr/validate-version/#validateversion","text":"fun validateVersion(): Unit","title":"validateVersion"},{"location":"latest/core/org.pinelang.ast.fbs/-debug-info/","text":"core / org.pinelang.ast.fbs / DebugInfo DebugInfo \u00b6 @ExperimentalUnsignedTypes class DebugInfo : Table Constructors \u00b6 Name Summary <init> DebugInfo() Properties \u00b6 Name Summary debugName val debugName: String ? debugNameAsByteBuffer val debugNameAsByteBuffer: ByteBuffer debugType val debugType: String ? debugTypeAsByteBuffer val debugTypeAsByteBuffer: ByteBuffer range val range: Range ? Functions \u00b6 Name Summary __assign fun __assign(_i: Int , _bb: ByteBuffer ): DebugInfo __init fun __init(_i: Int , _bb: ByteBuffer ): Unit debugNameInByteBuffer fun debugNameInByteBuffer(_bb: ByteBuffer ): ByteBuffer debugTypeInByteBuffer fun debugTypeInByteBuffer(_bb: ByteBuffer ): ByteBuffer range fun range(obj: Range ): Range ? Companion Object Functions \u00b6 Name Summary addDebugName fun addDebugName(builder: FlatBufferBuilder, debugName: Int ): Unit addDebugType fun addDebugType(builder: FlatBufferBuilder, debugType: Int ): Unit addRange fun addRange(builder: FlatBufferBuilder, range: Int ): Unit endDebugInfo fun endDebugInfo(builder: FlatBufferBuilder): Int getRootAsDebugInfo fun getRootAsDebugInfo(_bb: ByteBuffer ): DebugInfo fun getRootAsDebugInfo(_bb: ByteBuffer , obj: DebugInfo ): DebugInfo startDebugInfo fun startDebugInfo(builder: FlatBufferBuilder): Unit validateVersion fun validateVersion(): Unit","title":"DebugInfo - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-debug-info/#debuginfo","text":"@ExperimentalUnsignedTypes class DebugInfo : Table","title":"DebugInfo"},{"location":"latest/core/org.pinelang.ast.fbs/-debug-info/#constructors","text":"Name Summary <init> DebugInfo()","title":"Constructors"},{"location":"latest/core/org.pinelang.ast.fbs/-debug-info/#properties","text":"Name Summary debugName val debugName: String ? debugNameAsByteBuffer val debugNameAsByteBuffer: ByteBuffer debugType val debugType: String ? debugTypeAsByteBuffer val debugTypeAsByteBuffer: ByteBuffer range val range: Range ?","title":"Properties"},{"location":"latest/core/org.pinelang.ast.fbs/-debug-info/#functions","text":"Name Summary __assign fun __assign(_i: Int , _bb: ByteBuffer ): DebugInfo __init fun __init(_i: Int , _bb: ByteBuffer ): Unit debugNameInByteBuffer fun debugNameInByteBuffer(_bb: ByteBuffer ): ByteBuffer debugTypeInByteBuffer fun debugTypeInByteBuffer(_bb: ByteBuffer ): ByteBuffer range fun range(obj: Range ): Range ?","title":"Functions"},{"location":"latest/core/org.pinelang.ast.fbs/-debug-info/#companion-object-functions","text":"Name Summary addDebugName fun addDebugName(builder: FlatBufferBuilder, debugName: Int ): Unit addDebugType fun addDebugType(builder: FlatBufferBuilder, debugType: Int ): Unit addRange fun addRange(builder: FlatBufferBuilder, range: Int ): Unit endDebugInfo fun endDebugInfo(builder: FlatBufferBuilder): Int getRootAsDebugInfo fun getRootAsDebugInfo(_bb: ByteBuffer ): DebugInfo fun getRootAsDebugInfo(_bb: ByteBuffer , obj: DebugInfo ): DebugInfo startDebugInfo fun startDebugInfo(builder: FlatBufferBuilder): Unit validateVersion fun validateVersion(): Unit","title":"Companion Object Functions"},{"location":"latest/core/org.pinelang.ast.fbs/-debug-info/-init-/","text":"core / org.pinelang.ast.fbs / DebugInfo / <init> <init> \u00b6 DebugInfo()","title":" init "},{"location":"latest/core/org.pinelang.ast.fbs/-debug-info/-init-/#init","text":"DebugInfo()","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.ast.fbs/-debug-info/__assign/","text":"core / org.pinelang.ast.fbs / DebugInfo / __assign __assign \u00b6 fun __assign(_i: Int , _bb: ByteBuffer ): DebugInfo","title":"__assign - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-debug-info/__assign/#__assign","text":"fun __assign(_i: Int , _bb: ByteBuffer ): DebugInfo","title":"__assign"},{"location":"latest/core/org.pinelang.ast.fbs/-debug-info/__init/","text":"core / org.pinelang.ast.fbs / DebugInfo / __init __init \u00b6 fun __init(_i: Int , _bb: ByteBuffer ): Unit","title":"__init - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-debug-info/__init/#__init","text":"fun __init(_i: Int , _bb: ByteBuffer ): Unit","title":"__init"},{"location":"latest/core/org.pinelang.ast.fbs/-debug-info/add-debug-name/","text":"core / org.pinelang.ast.fbs / DebugInfo / addDebugName addDebugName \u00b6 fun addDebugName(builder: FlatBufferBuilder, debugName: Int ): Unit","title":"addDebugName - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-debug-info/add-debug-name/#adddebugname","text":"fun addDebugName(builder: FlatBufferBuilder, debugName: Int ): Unit","title":"addDebugName"},{"location":"latest/core/org.pinelang.ast.fbs/-debug-info/add-debug-type/","text":"core / org.pinelang.ast.fbs / DebugInfo / addDebugType addDebugType \u00b6 fun addDebugType(builder: FlatBufferBuilder, debugType: Int ): Unit","title":"addDebugType - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-debug-info/add-debug-type/#adddebugtype","text":"fun addDebugType(builder: FlatBufferBuilder, debugType: Int ): Unit","title":"addDebugType"},{"location":"latest/core/org.pinelang.ast.fbs/-debug-info/add-range/","text":"core / org.pinelang.ast.fbs / DebugInfo / addRange addRange \u00b6 fun addRange(builder: FlatBufferBuilder, range: Int ): Unit","title":"addRange - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-debug-info/add-range/#addrange","text":"fun addRange(builder: FlatBufferBuilder, range: Int ): Unit","title":"addRange"},{"location":"latest/core/org.pinelang.ast.fbs/-debug-info/debug-name-as-byte-buffer/","text":"core / org.pinelang.ast.fbs / DebugInfo / debugNameAsByteBuffer debugNameAsByteBuffer \u00b6 val debugNameAsByteBuffer: ByteBuffer","title":"debugNameAsByteBuffer - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-debug-info/debug-name-as-byte-buffer/#debugnameasbytebuffer","text":"val debugNameAsByteBuffer: ByteBuffer","title":"debugNameAsByteBuffer"},{"location":"latest/core/org.pinelang.ast.fbs/-debug-info/debug-name-in-byte-buffer/","text":"core / org.pinelang.ast.fbs / DebugInfo / debugNameInByteBuffer debugNameInByteBuffer \u00b6 fun debugNameInByteBuffer(_bb: ByteBuffer ): ByteBuffer","title":"debugNameInByteBuffer - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-debug-info/debug-name-in-byte-buffer/#debugnameinbytebuffer","text":"fun debugNameInByteBuffer(_bb: ByteBuffer ): ByteBuffer","title":"debugNameInByteBuffer"},{"location":"latest/core/org.pinelang.ast.fbs/-debug-info/debug-name/","text":"core / org.pinelang.ast.fbs / DebugInfo / debugName debugName \u00b6 val debugName: String ?","title":"debugName - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-debug-info/debug-name/#debugname","text":"val debugName: String ?","title":"debugName"},{"location":"latest/core/org.pinelang.ast.fbs/-debug-info/debug-type-as-byte-buffer/","text":"core / org.pinelang.ast.fbs / DebugInfo / debugTypeAsByteBuffer debugTypeAsByteBuffer \u00b6 val debugTypeAsByteBuffer: ByteBuffer","title":"debugTypeAsByteBuffer - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-debug-info/debug-type-as-byte-buffer/#debugtypeasbytebuffer","text":"val debugTypeAsByteBuffer: ByteBuffer","title":"debugTypeAsByteBuffer"},{"location":"latest/core/org.pinelang.ast.fbs/-debug-info/debug-type-in-byte-buffer/","text":"core / org.pinelang.ast.fbs / DebugInfo / debugTypeInByteBuffer debugTypeInByteBuffer \u00b6 fun debugTypeInByteBuffer(_bb: ByteBuffer ): ByteBuffer","title":"debugTypeInByteBuffer - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-debug-info/debug-type-in-byte-buffer/#debugtypeinbytebuffer","text":"fun debugTypeInByteBuffer(_bb: ByteBuffer ): ByteBuffer","title":"debugTypeInByteBuffer"},{"location":"latest/core/org.pinelang.ast.fbs/-debug-info/debug-type/","text":"core / org.pinelang.ast.fbs / DebugInfo / debugType debugType \u00b6 val debugType: String ?","title":"debugType - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-debug-info/debug-type/#debugtype","text":"val debugType: String ?","title":"debugType"},{"location":"latest/core/org.pinelang.ast.fbs/-debug-info/end-debug-info/","text":"core / org.pinelang.ast.fbs / DebugInfo / endDebugInfo endDebugInfo \u00b6 fun endDebugInfo(builder: FlatBufferBuilder): Int","title":"endDebugInfo - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-debug-info/end-debug-info/#enddebuginfo","text":"fun endDebugInfo(builder: FlatBufferBuilder): Int","title":"endDebugInfo"},{"location":"latest/core/org.pinelang.ast.fbs/-debug-info/get-root-as-debug-info/","text":"core / org.pinelang.ast.fbs / DebugInfo / getRootAsDebugInfo getRootAsDebugInfo \u00b6 fun getRootAsDebugInfo(_bb: ByteBuffer ): DebugInfo fun getRootAsDebugInfo(_bb: ByteBuffer , obj: DebugInfo ): DebugInfo","title":"getRootAsDebugInfo - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-debug-info/get-root-as-debug-info/#getrootasdebuginfo","text":"fun getRootAsDebugInfo(_bb: ByteBuffer ): DebugInfo fun getRootAsDebugInfo(_bb: ByteBuffer , obj: DebugInfo ): DebugInfo","title":"getRootAsDebugInfo"},{"location":"latest/core/org.pinelang.ast.fbs/-debug-info/range/","text":"core / org.pinelang.ast.fbs / DebugInfo / range range \u00b6 val range: Range ? fun range(obj: Range ): Range ?","title":"range - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-debug-info/range/#range","text":"val range: Range ? fun range(obj: Range ): Range ?","title":"range"},{"location":"latest/core/org.pinelang.ast.fbs/-debug-info/start-debug-info/","text":"core / org.pinelang.ast.fbs / DebugInfo / startDebugInfo startDebugInfo \u00b6 fun startDebugInfo(builder: FlatBufferBuilder): Unit","title":"startDebugInfo - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-debug-info/start-debug-info/#startdebuginfo","text":"fun startDebugInfo(builder: FlatBufferBuilder): Unit","title":"startDebugInfo"},{"location":"latest/core/org.pinelang.ast.fbs/-debug-info/validate-version/","text":"core / org.pinelang.ast.fbs / DebugInfo / validateVersion validateVersion \u00b6 fun validateVersion(): Unit","title":"validateVersion - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-debug-info/validate-version/#validateversion","text":"fun validateVersion(): Unit","title":"validateVersion"},{"location":"latest/core/org.pinelang.ast.fbs/-expr/","text":"core / org.pinelang.ast.fbs / Expr Expr \u00b6 @ExperimentalUnsignedTypes class Expr : Table Constructors \u00b6 Name Summary <init> Expr() Properties \u00b6 Name Summary expValueType val expValueType: UByte Functions \u00b6 Name Summary __assign fun __assign(_i: Int , _bb: ByteBuffer ): Expr __init fun __init(_i: Int , _bb: ByteBuffer ): Unit expValue fun expValue(obj: Table): Table? Companion Object Functions \u00b6 Name Summary addExpValue fun addExpValue(builder: FlatBufferBuilder, expValue: Int ): Unit addExpValueType fun addExpValueType(builder: FlatBufferBuilder, expValueType: UByte ): Unit createExpr fun createExpr(builder: FlatBufferBuilder, expValueType: UByte , expValueOffset: Int ): Int endExpr fun endExpr(builder: FlatBufferBuilder): Int getRootAsExpr fun getRootAsExpr(_bb: ByteBuffer ): Expr fun getRootAsExpr(_bb: ByteBuffer , obj: Expr ): Expr startExpr fun startExpr(builder: FlatBufferBuilder): Unit validateVersion fun validateVersion(): Unit","title":"Expr - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-expr/#expr","text":"@ExperimentalUnsignedTypes class Expr : Table","title":"Expr"},{"location":"latest/core/org.pinelang.ast.fbs/-expr/#constructors","text":"Name Summary <init> Expr()","title":"Constructors"},{"location":"latest/core/org.pinelang.ast.fbs/-expr/#properties","text":"Name Summary expValueType val expValueType: UByte","title":"Properties"},{"location":"latest/core/org.pinelang.ast.fbs/-expr/#functions","text":"Name Summary __assign fun __assign(_i: Int , _bb: ByteBuffer ): Expr __init fun __init(_i: Int , _bb: ByteBuffer ): Unit expValue fun expValue(obj: Table): Table?","title":"Functions"},{"location":"latest/core/org.pinelang.ast.fbs/-expr/#companion-object-functions","text":"Name Summary addExpValue fun addExpValue(builder: FlatBufferBuilder, expValue: Int ): Unit addExpValueType fun addExpValueType(builder: FlatBufferBuilder, expValueType: UByte ): Unit createExpr fun createExpr(builder: FlatBufferBuilder, expValueType: UByte , expValueOffset: Int ): Int endExpr fun endExpr(builder: FlatBufferBuilder): Int getRootAsExpr fun getRootAsExpr(_bb: ByteBuffer ): Expr fun getRootAsExpr(_bb: ByteBuffer , obj: Expr ): Expr startExpr fun startExpr(builder: FlatBufferBuilder): Unit validateVersion fun validateVersion(): Unit","title":"Companion Object Functions"},{"location":"latest/core/org.pinelang.ast.fbs/-expr/-init-/","text":"core / org.pinelang.ast.fbs / Expr / <init> <init> \u00b6 Expr()","title":" init "},{"location":"latest/core/org.pinelang.ast.fbs/-expr/-init-/#init","text":"Expr()","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.ast.fbs/-expr/__assign/","text":"core / org.pinelang.ast.fbs / Expr / __assign __assign \u00b6 fun __assign(_i: Int , _bb: ByteBuffer ): Expr","title":"__assign - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-expr/__assign/#__assign","text":"fun __assign(_i: Int , _bb: ByteBuffer ): Expr","title":"__assign"},{"location":"latest/core/org.pinelang.ast.fbs/-expr/__init/","text":"core / org.pinelang.ast.fbs / Expr / __init __init \u00b6 fun __init(_i: Int , _bb: ByteBuffer ): Unit","title":"__init - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-expr/__init/#__init","text":"fun __init(_i: Int , _bb: ByteBuffer ): Unit","title":"__init"},{"location":"latest/core/org.pinelang.ast.fbs/-expr/add-exp-value-type/","text":"core / org.pinelang.ast.fbs / Expr / addExpValueType addExpValueType \u00b6 fun addExpValueType(builder: FlatBufferBuilder, expValueType: UByte ): Unit","title":"addExpValueType - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-expr/add-exp-value-type/#addexpvaluetype","text":"fun addExpValueType(builder: FlatBufferBuilder, expValueType: UByte ): Unit","title":"addExpValueType"},{"location":"latest/core/org.pinelang.ast.fbs/-expr/add-exp-value/","text":"core / org.pinelang.ast.fbs / Expr / addExpValue addExpValue \u00b6 fun addExpValue(builder: FlatBufferBuilder, expValue: Int ): Unit","title":"addExpValue - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-expr/add-exp-value/#addexpvalue","text":"fun addExpValue(builder: FlatBufferBuilder, expValue: Int ): Unit","title":"addExpValue"},{"location":"latest/core/org.pinelang.ast.fbs/-expr/create-expr/","text":"core / org.pinelang.ast.fbs / Expr / createExpr createExpr \u00b6 fun createExpr(builder: FlatBufferBuilder, expValueType: UByte , expValueOffset: Int ): Int","title":"createExpr - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-expr/create-expr/#createexpr","text":"fun createExpr(builder: FlatBufferBuilder, expValueType: UByte , expValueOffset: Int ): Int","title":"createExpr"},{"location":"latest/core/org.pinelang.ast.fbs/-expr/end-expr/","text":"core / org.pinelang.ast.fbs / Expr / endExpr endExpr \u00b6 fun endExpr(builder: FlatBufferBuilder): Int","title":"endExpr - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-expr/end-expr/#endexpr","text":"fun endExpr(builder: FlatBufferBuilder): Int","title":"endExpr"},{"location":"latest/core/org.pinelang.ast.fbs/-expr/exp-value-type/","text":"core / org.pinelang.ast.fbs / Expr / expValueType expValueType \u00b6 val expValueType: UByte","title":"expValueType - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-expr/exp-value-type/#expvaluetype","text":"val expValueType: UByte","title":"expValueType"},{"location":"latest/core/org.pinelang.ast.fbs/-expr/exp-value/","text":"core / org.pinelang.ast.fbs / Expr / expValue expValue \u00b6 fun expValue(obj: Table): Table?","title":"expValue - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-expr/exp-value/#expvalue","text":"fun expValue(obj: Table): Table?","title":"expValue"},{"location":"latest/core/org.pinelang.ast.fbs/-expr/get-root-as-expr/","text":"core / org.pinelang.ast.fbs / Expr / getRootAsExpr getRootAsExpr \u00b6 fun getRootAsExpr(_bb: ByteBuffer ): Expr fun getRootAsExpr(_bb: ByteBuffer , obj: Expr ): Expr","title":"getRootAsExpr - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-expr/get-root-as-expr/#getrootasexpr","text":"fun getRootAsExpr(_bb: ByteBuffer ): Expr fun getRootAsExpr(_bb: ByteBuffer , obj: Expr ): Expr","title":"getRootAsExpr"},{"location":"latest/core/org.pinelang.ast.fbs/-expr/start-expr/","text":"core / org.pinelang.ast.fbs / Expr / startExpr startExpr \u00b6 fun startExpr(builder: FlatBufferBuilder): Unit","title":"startExpr - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-expr/start-expr/#startexpr","text":"fun startExpr(builder: FlatBufferBuilder): Unit","title":"startExpr"},{"location":"latest/core/org.pinelang.ast.fbs/-expr/validate-version/","text":"core / org.pinelang.ast.fbs / Expr / validateVersion validateVersion \u00b6 fun validateVersion(): Unit","title":"validateVersion - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-expr/validate-version/#validateversion","text":"fun validateVersion(): Unit","title":"validateVersion"},{"location":"latest/core/org.pinelang.ast.fbs/-expr-value/","text":"core / org.pinelang.ast.fbs / ExprValue ExprValue \u00b6 @ExperimentalUnsignedTypes class ExprValue Companion Object Properties \u00b6 Name Summary BinaryExpr const val BinaryExpr: UByte CallableExpr const val CallableExpr: UByte names val names: Array < String > NONE const val NONE: UByte PrimitiveExpr const val PrimitiveExpr: UByte PropRefExpr const val PropRefExpr: UByte Companion Object Functions \u00b6 Name Summary name fun name(e: Int ): String","title":"ExprValue - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-expr-value/#exprvalue","text":"@ExperimentalUnsignedTypes class ExprValue","title":"ExprValue"},{"location":"latest/core/org.pinelang.ast.fbs/-expr-value/#companion-object-properties","text":"Name Summary BinaryExpr const val BinaryExpr: UByte CallableExpr const val CallableExpr: UByte names val names: Array < String > NONE const val NONE: UByte PrimitiveExpr const val PrimitiveExpr: UByte PropRefExpr const val PropRefExpr: UByte","title":"Companion Object Properties"},{"location":"latest/core/org.pinelang.ast.fbs/-expr-value/#companion-object-functions","text":"Name Summary name fun name(e: Int ): String","title":"Companion Object Functions"},{"location":"latest/core/org.pinelang.ast.fbs/-expr-value/-binary-expr/","text":"core / org.pinelang.ast.fbs / ExprValue / BinaryExpr BinaryExpr \u00b6 const val BinaryExpr: UByte","title":"BinaryExpr - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-expr-value/-binary-expr/#binaryexpr","text":"const val BinaryExpr: UByte","title":"BinaryExpr"},{"location":"latest/core/org.pinelang.ast.fbs/-expr-value/-callable-expr/","text":"core / org.pinelang.ast.fbs / ExprValue / CallableExpr CallableExpr \u00b6 const val CallableExpr: UByte","title":"CallableExpr - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-expr-value/-callable-expr/#callableexpr","text":"const val CallableExpr: UByte","title":"CallableExpr"},{"location":"latest/core/org.pinelang.ast.fbs/-expr-value/-n-o-n-e/","text":"core / org.pinelang.ast.fbs / ExprValue / NONE NONE \u00b6 const val NONE: UByte","title":"NONE - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-expr-value/-n-o-n-e/#none","text":"const val NONE: UByte","title":"NONE"},{"location":"latest/core/org.pinelang.ast.fbs/-expr-value/-primitive-expr/","text":"core / org.pinelang.ast.fbs / ExprValue / PrimitiveExpr PrimitiveExpr \u00b6 const val PrimitiveExpr: UByte","title":"PrimitiveExpr - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-expr-value/-primitive-expr/#primitiveexpr","text":"const val PrimitiveExpr: UByte","title":"PrimitiveExpr"},{"location":"latest/core/org.pinelang.ast.fbs/-expr-value/-prop-ref-expr/","text":"core / org.pinelang.ast.fbs / ExprValue / PropRefExpr PropRefExpr \u00b6 const val PropRefExpr: UByte","title":"PropRefExpr - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-expr-value/-prop-ref-expr/#proprefexpr","text":"const val PropRefExpr: UByte","title":"PropRefExpr"},{"location":"latest/core/org.pinelang.ast.fbs/-expr-value/name/","text":"core / org.pinelang.ast.fbs / ExprValue / name name \u00b6 fun name(e: Int ): String","title":"name - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-expr-value/name/#name","text":"fun name(e: Int ): String","title":"name"},{"location":"latest/core/org.pinelang.ast.fbs/-expr-value/names/","text":"core / org.pinelang.ast.fbs / ExprValue / names names \u00b6 val names: Array < String >","title":"names - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-expr-value/names/#names","text":"val names: Array < String >","title":"names"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/","text":"core / org.pinelang.ast.fbs / ObjectDefinition ObjectDefinition \u00b6 @ExperimentalUnsignedTypes class ObjectDefinition : Table Constructors \u00b6 Name Summary <init> ObjectDefinition() Properties \u00b6 Name Summary childrenLength val childrenLength: Int debug val debug: DebugInfo ? id val id: Int propsLength val propsLength: Int signalsLength val signalsLength: Int type val type: Int Functions \u00b6 Name Summary __assign fun __assign(_i: Int , _bb: ByteBuffer ): ObjectDefinition __init fun __init(_i: Int , _bb: ByteBuffer ): Unit children fun children(j: Int ): ObjectDefinition ? fun children(obj: ObjectDefinition , j: Int ): ObjectDefinition ? debug fun debug(obj: DebugInfo ): DebugInfo ? props fun props(j: Int ): PropDefinition ? fun props(obj: PropDefinition , j: Int ): PropDefinition ? signals fun signals(j: Int ): SignalExpr ? fun signals(obj: SignalExpr , j: Int ): SignalExpr ? Companion Object Functions \u00b6 Name Summary addChildren fun addChildren(builder: FlatBufferBuilder, children: Int ): Unit addDebug fun addDebug(builder: FlatBufferBuilder, debug: Int ): Unit addId fun addId(builder: FlatBufferBuilder, id: Int ): Unit addProps fun addProps(builder: FlatBufferBuilder, props: Int ): Unit addSignals fun addSignals(builder: FlatBufferBuilder, signals: Int ): Unit addType fun addType(builder: FlatBufferBuilder, type: Int ): Unit createChildrenVector fun createChildrenVector(builder: FlatBufferBuilder, data: IntArray ): Int createObjectDefinition fun createObjectDefinition(builder: FlatBufferBuilder, id: Int , type: Int , childrenOffset: Int , signalsOffset: Int , propsOffset: Int , debugOffset: Int ): Int createPropsVector fun createPropsVector(builder: FlatBufferBuilder, data: IntArray ): Int createSignalsVector fun createSignalsVector(builder: FlatBufferBuilder, data: IntArray ): Int endObjectDefinition fun endObjectDefinition(builder: FlatBufferBuilder): Int getRootAsObjectDefinition fun getRootAsObjectDefinition(_bb: ByteBuffer ): ObjectDefinition fun getRootAsObjectDefinition(_bb: ByteBuffer , obj: ObjectDefinition ): ObjectDefinition startChildrenVector fun startChildrenVector(builder: FlatBufferBuilder, numElems: Int ): Unit startObjectDefinition fun startObjectDefinition(builder: FlatBufferBuilder): Unit startPropsVector fun startPropsVector(builder: FlatBufferBuilder, numElems: Int ): Unit startSignalsVector fun startSignalsVector(builder: FlatBufferBuilder, numElems: Int ): Unit validateVersion fun validateVersion(): Unit","title":"ObjectDefinition - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/#objectdefinition","text":"@ExperimentalUnsignedTypes class ObjectDefinition : Table","title":"ObjectDefinition"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/#constructors","text":"Name Summary <init> ObjectDefinition()","title":"Constructors"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/#properties","text":"Name Summary childrenLength val childrenLength: Int debug val debug: DebugInfo ? id val id: Int propsLength val propsLength: Int signalsLength val signalsLength: Int type val type: Int","title":"Properties"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/#functions","text":"Name Summary __assign fun __assign(_i: Int , _bb: ByteBuffer ): ObjectDefinition __init fun __init(_i: Int , _bb: ByteBuffer ): Unit children fun children(j: Int ): ObjectDefinition ? fun children(obj: ObjectDefinition , j: Int ): ObjectDefinition ? debug fun debug(obj: DebugInfo ): DebugInfo ? props fun props(j: Int ): PropDefinition ? fun props(obj: PropDefinition , j: Int ): PropDefinition ? signals fun signals(j: Int ): SignalExpr ? fun signals(obj: SignalExpr , j: Int ): SignalExpr ?","title":"Functions"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/#companion-object-functions","text":"Name Summary addChildren fun addChildren(builder: FlatBufferBuilder, children: Int ): Unit addDebug fun addDebug(builder: FlatBufferBuilder, debug: Int ): Unit addId fun addId(builder: FlatBufferBuilder, id: Int ): Unit addProps fun addProps(builder: FlatBufferBuilder, props: Int ): Unit addSignals fun addSignals(builder: FlatBufferBuilder, signals: Int ): Unit addType fun addType(builder: FlatBufferBuilder, type: Int ): Unit createChildrenVector fun createChildrenVector(builder: FlatBufferBuilder, data: IntArray ): Int createObjectDefinition fun createObjectDefinition(builder: FlatBufferBuilder, id: Int , type: Int , childrenOffset: Int , signalsOffset: Int , propsOffset: Int , debugOffset: Int ): Int createPropsVector fun createPropsVector(builder: FlatBufferBuilder, data: IntArray ): Int createSignalsVector fun createSignalsVector(builder: FlatBufferBuilder, data: IntArray ): Int endObjectDefinition fun endObjectDefinition(builder: FlatBufferBuilder): Int getRootAsObjectDefinition fun getRootAsObjectDefinition(_bb: ByteBuffer ): ObjectDefinition fun getRootAsObjectDefinition(_bb: ByteBuffer , obj: ObjectDefinition ): ObjectDefinition startChildrenVector fun startChildrenVector(builder: FlatBufferBuilder, numElems: Int ): Unit startObjectDefinition fun startObjectDefinition(builder: FlatBufferBuilder): Unit startPropsVector fun startPropsVector(builder: FlatBufferBuilder, numElems: Int ): Unit startSignalsVector fun startSignalsVector(builder: FlatBufferBuilder, numElems: Int ): Unit validateVersion fun validateVersion(): Unit","title":"Companion Object Functions"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/-init-/","text":"core / org.pinelang.ast.fbs / ObjectDefinition / <init> <init> \u00b6 ObjectDefinition()","title":" init "},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/-init-/#init","text":"ObjectDefinition()","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/__assign/","text":"core / org.pinelang.ast.fbs / ObjectDefinition / __assign __assign \u00b6 fun __assign(_i: Int , _bb: ByteBuffer ): ObjectDefinition","title":"__assign - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/__assign/#__assign","text":"fun __assign(_i: Int , _bb: ByteBuffer ): ObjectDefinition","title":"__assign"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/__init/","text":"core / org.pinelang.ast.fbs / ObjectDefinition / __init __init \u00b6 fun __init(_i: Int , _bb: ByteBuffer ): Unit","title":"__init - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/__init/#__init","text":"fun __init(_i: Int , _bb: ByteBuffer ): Unit","title":"__init"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/add-children/","text":"core / org.pinelang.ast.fbs / ObjectDefinition / addChildren addChildren \u00b6 fun addChildren(builder: FlatBufferBuilder, children: Int ): Unit","title":"addChildren - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/add-children/#addchildren","text":"fun addChildren(builder: FlatBufferBuilder, children: Int ): Unit","title":"addChildren"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/add-debug/","text":"core / org.pinelang.ast.fbs / ObjectDefinition / addDebug addDebug \u00b6 fun addDebug(builder: FlatBufferBuilder, debug: Int ): Unit","title":"addDebug - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/add-debug/#adddebug","text":"fun addDebug(builder: FlatBufferBuilder, debug: Int ): Unit","title":"addDebug"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/add-id/","text":"core / org.pinelang.ast.fbs / ObjectDefinition / addId addId \u00b6 fun addId(builder: FlatBufferBuilder, id: Int ): Unit","title":"addId - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/add-id/#addid","text":"fun addId(builder: FlatBufferBuilder, id: Int ): Unit","title":"addId"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/add-props/","text":"core / org.pinelang.ast.fbs / ObjectDefinition / addProps addProps \u00b6 fun addProps(builder: FlatBufferBuilder, props: Int ): Unit","title":"addProps - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/add-props/#addprops","text":"fun addProps(builder: FlatBufferBuilder, props: Int ): Unit","title":"addProps"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/add-signals/","text":"core / org.pinelang.ast.fbs / ObjectDefinition / addSignals addSignals \u00b6 fun addSignals(builder: FlatBufferBuilder, signals: Int ): Unit","title":"addSignals - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/add-signals/#addsignals","text":"fun addSignals(builder: FlatBufferBuilder, signals: Int ): Unit","title":"addSignals"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/add-type/","text":"core / org.pinelang.ast.fbs / ObjectDefinition / addType addType \u00b6 fun addType(builder: FlatBufferBuilder, type: Int ): Unit","title":"addType - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/add-type/#addtype","text":"fun addType(builder: FlatBufferBuilder, type: Int ): Unit","title":"addType"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/children-length/","text":"core / org.pinelang.ast.fbs / ObjectDefinition / childrenLength childrenLength \u00b6 val childrenLength: Int","title":"childrenLength - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/children-length/#childrenlength","text":"val childrenLength: Int","title":"childrenLength"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/children/","text":"core / org.pinelang.ast.fbs / ObjectDefinition / children children \u00b6 fun children(j: Int ): ObjectDefinition ? fun children(obj: ObjectDefinition , j: Int ): ObjectDefinition ?","title":"children - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/children/#children","text":"fun children(j: Int ): ObjectDefinition ? fun children(obj: ObjectDefinition , j: Int ): ObjectDefinition ?","title":"children"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/create-children-vector/","text":"core / org.pinelang.ast.fbs / ObjectDefinition / createChildrenVector createChildrenVector \u00b6 fun createChildrenVector(builder: FlatBufferBuilder, data: IntArray ): Int","title":"createChildrenVector - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/create-children-vector/#createchildrenvector","text":"fun createChildrenVector(builder: FlatBufferBuilder, data: IntArray ): Int","title":"createChildrenVector"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/create-object-definition/","text":"core / org.pinelang.ast.fbs / ObjectDefinition / createObjectDefinition createObjectDefinition \u00b6 fun createObjectDefinition(builder: FlatBufferBuilder, id: Int , type: Int , childrenOffset: Int , signalsOffset: Int , propsOffset: Int , debugOffset: Int ): Int","title":"createObjectDefinition - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/create-object-definition/#createobjectdefinition","text":"fun createObjectDefinition(builder: FlatBufferBuilder, id: Int , type: Int , childrenOffset: Int , signalsOffset: Int , propsOffset: Int , debugOffset: Int ): Int","title":"createObjectDefinition"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/create-props-vector/","text":"core / org.pinelang.ast.fbs / ObjectDefinition / createPropsVector createPropsVector \u00b6 fun createPropsVector(builder: FlatBufferBuilder, data: IntArray ): Int","title":"createPropsVector - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/create-props-vector/#createpropsvector","text":"fun createPropsVector(builder: FlatBufferBuilder, data: IntArray ): Int","title":"createPropsVector"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/create-signals-vector/","text":"core / org.pinelang.ast.fbs / ObjectDefinition / createSignalsVector createSignalsVector \u00b6 fun createSignalsVector(builder: FlatBufferBuilder, data: IntArray ): Int","title":"createSignalsVector - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/create-signals-vector/#createsignalsvector","text":"fun createSignalsVector(builder: FlatBufferBuilder, data: IntArray ): Int","title":"createSignalsVector"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/debug/","text":"core / org.pinelang.ast.fbs / ObjectDefinition / debug debug \u00b6 val debug: DebugInfo ? fun debug(obj: DebugInfo ): DebugInfo ?","title":"debug - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/debug/#debug","text":"val debug: DebugInfo ? fun debug(obj: DebugInfo ): DebugInfo ?","title":"debug"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/end-object-definition/","text":"core / org.pinelang.ast.fbs / ObjectDefinition / endObjectDefinition endObjectDefinition \u00b6 fun endObjectDefinition(builder: FlatBufferBuilder): Int","title":"endObjectDefinition - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/end-object-definition/#endobjectdefinition","text":"fun endObjectDefinition(builder: FlatBufferBuilder): Int","title":"endObjectDefinition"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/get-root-as-object-definition/","text":"core / org.pinelang.ast.fbs / ObjectDefinition / getRootAsObjectDefinition getRootAsObjectDefinition \u00b6 fun getRootAsObjectDefinition(_bb: ByteBuffer ): ObjectDefinition fun getRootAsObjectDefinition(_bb: ByteBuffer , obj: ObjectDefinition ): ObjectDefinition","title":"getRootAsObjectDefinition - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/get-root-as-object-definition/#getrootasobjectdefinition","text":"fun getRootAsObjectDefinition(_bb: ByteBuffer ): ObjectDefinition fun getRootAsObjectDefinition(_bb: ByteBuffer , obj: ObjectDefinition ): ObjectDefinition","title":"getRootAsObjectDefinition"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/id/","text":"core / org.pinelang.ast.fbs / ObjectDefinition / id id \u00b6 val id: Int","title":"id - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/id/#id","text":"val id: Int","title":"id"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/props-length/","text":"core / org.pinelang.ast.fbs / ObjectDefinition / propsLength propsLength \u00b6 val propsLength: Int","title":"propsLength - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/props-length/#propslength","text":"val propsLength: Int","title":"propsLength"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/props/","text":"core / org.pinelang.ast.fbs / ObjectDefinition / props props \u00b6 fun props(j: Int ): PropDefinition ? fun props(obj: PropDefinition , j: Int ): PropDefinition ?","title":"props - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/props/#props","text":"fun props(j: Int ): PropDefinition ? fun props(obj: PropDefinition , j: Int ): PropDefinition ?","title":"props"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/signals-length/","text":"core / org.pinelang.ast.fbs / ObjectDefinition / signalsLength signalsLength \u00b6 val signalsLength: Int","title":"signalsLength - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/signals-length/#signalslength","text":"val signalsLength: Int","title":"signalsLength"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/signals/","text":"core / org.pinelang.ast.fbs / ObjectDefinition / signals signals \u00b6 fun signals(j: Int ): SignalExpr ? fun signals(obj: SignalExpr , j: Int ): SignalExpr ?","title":"signals - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/signals/#signals","text":"fun signals(j: Int ): SignalExpr ? fun signals(obj: SignalExpr , j: Int ): SignalExpr ?","title":"signals"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/start-children-vector/","text":"core / org.pinelang.ast.fbs / ObjectDefinition / startChildrenVector startChildrenVector \u00b6 fun startChildrenVector(builder: FlatBufferBuilder, numElems: Int ): Unit","title":"startChildrenVector - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/start-children-vector/#startchildrenvector","text":"fun startChildrenVector(builder: FlatBufferBuilder, numElems: Int ): Unit","title":"startChildrenVector"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/start-object-definition/","text":"core / org.pinelang.ast.fbs / ObjectDefinition / startObjectDefinition startObjectDefinition \u00b6 fun startObjectDefinition(builder: FlatBufferBuilder): Unit","title":"startObjectDefinition - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/start-object-definition/#startobjectdefinition","text":"fun startObjectDefinition(builder: FlatBufferBuilder): Unit","title":"startObjectDefinition"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/start-props-vector/","text":"core / org.pinelang.ast.fbs / ObjectDefinition / startPropsVector startPropsVector \u00b6 fun startPropsVector(builder: FlatBufferBuilder, numElems: Int ): Unit","title":"startPropsVector - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/start-props-vector/#startpropsvector","text":"fun startPropsVector(builder: FlatBufferBuilder, numElems: Int ): Unit","title":"startPropsVector"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/start-signals-vector/","text":"core / org.pinelang.ast.fbs / ObjectDefinition / startSignalsVector startSignalsVector \u00b6 fun startSignalsVector(builder: FlatBufferBuilder, numElems: Int ): Unit","title":"startSignalsVector - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/start-signals-vector/#startsignalsvector","text":"fun startSignalsVector(builder: FlatBufferBuilder, numElems: Int ): Unit","title":"startSignalsVector"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/type/","text":"core / org.pinelang.ast.fbs / ObjectDefinition / type type \u00b6 val type: Int","title":"type - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/type/#type","text":"val type: Int","title":"type"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/validate-version/","text":"core / org.pinelang.ast.fbs / ObjectDefinition / validateVersion validateVersion \u00b6 fun validateVersion(): Unit","title":"validateVersion - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-object-definition/validate-version/#validateversion","text":"fun validateVersion(): Unit","title":"validateVersion"},{"location":"latest/core/org.pinelang.ast.fbs/-position/","text":"core / org.pinelang.ast.fbs / Position Position \u00b6 @ExperimentalUnsignedTypes class Position : Struct Constructors \u00b6 Name Summary <init> Position() Properties \u00b6 Name Summary char val char: Int line val line: Int Functions \u00b6 Name Summary __assign fun __assign(_i: Int , _bb: ByteBuffer ): Position __init fun __init(_i: Int , _bb: ByteBuffer ): Unit Companion Object Functions \u00b6 Name Summary createPosition fun createPosition(builder: FlatBufferBuilder, line: Int , char: Int ): Int","title":"Position - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-position/#position","text":"@ExperimentalUnsignedTypes class Position : Struct","title":"Position"},{"location":"latest/core/org.pinelang.ast.fbs/-position/#constructors","text":"Name Summary <init> Position()","title":"Constructors"},{"location":"latest/core/org.pinelang.ast.fbs/-position/#properties","text":"Name Summary char val char: Int line val line: Int","title":"Properties"},{"location":"latest/core/org.pinelang.ast.fbs/-position/#functions","text":"Name Summary __assign fun __assign(_i: Int , _bb: ByteBuffer ): Position __init fun __init(_i: Int , _bb: ByteBuffer ): Unit","title":"Functions"},{"location":"latest/core/org.pinelang.ast.fbs/-position/#companion-object-functions","text":"Name Summary createPosition fun createPosition(builder: FlatBufferBuilder, line: Int , char: Int ): Int","title":"Companion Object Functions"},{"location":"latest/core/org.pinelang.ast.fbs/-position/-init-/","text":"core / org.pinelang.ast.fbs / Position / <init> <init> \u00b6 Position()","title":" init "},{"location":"latest/core/org.pinelang.ast.fbs/-position/-init-/#init","text":"Position()","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.ast.fbs/-position/__assign/","text":"core / org.pinelang.ast.fbs / Position / __assign __assign \u00b6 fun __assign(_i: Int , _bb: ByteBuffer ): Position","title":"__assign - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-position/__assign/#__assign","text":"fun __assign(_i: Int , _bb: ByteBuffer ): Position","title":"__assign"},{"location":"latest/core/org.pinelang.ast.fbs/-position/__init/","text":"core / org.pinelang.ast.fbs / Position / __init __init \u00b6 fun __init(_i: Int , _bb: ByteBuffer ): Unit","title":"__init - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-position/__init/#__init","text":"fun __init(_i: Int , _bb: ByteBuffer ): Unit","title":"__init"},{"location":"latest/core/org.pinelang.ast.fbs/-position/char/","text":"core / org.pinelang.ast.fbs / Position / char char \u00b6 val char: Int","title":"char - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-position/char/#char","text":"val char: Int","title":"char"},{"location":"latest/core/org.pinelang.ast.fbs/-position/create-position/","text":"core / org.pinelang.ast.fbs / Position / createPosition createPosition \u00b6 fun createPosition(builder: FlatBufferBuilder, line: Int , char: Int ): Int","title":"createPosition - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-position/create-position/#createposition","text":"fun createPosition(builder: FlatBufferBuilder, line: Int , char: Int ): Int","title":"createPosition"},{"location":"latest/core/org.pinelang.ast.fbs/-position/line/","text":"core / org.pinelang.ast.fbs / Position / line line \u00b6 val line: Int","title":"line - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-position/line/#line","text":"val line: Int","title":"line"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-expr/","text":"core / org.pinelang.ast.fbs / PrimitiveExpr PrimitiveExpr \u00b6 @ExperimentalUnsignedTypes class PrimitiveExpr : Table Constructors \u00b6 Name Summary <init> PrimitiveExpr() Properties \u00b6 Name Summary stringValue val stringValue: String ? stringValueAsByteBuffer val stringValueAsByteBuffer: ByteBuffer type val type: UByte value val value: Double Functions \u00b6 Name Summary __assign fun __assign(_i: Int , _bb: ByteBuffer ): PrimitiveExpr __init fun __init(_i: Int , _bb: ByteBuffer ): Unit stringValueInByteBuffer fun stringValueInByteBuffer(_bb: ByteBuffer ): ByteBuffer Companion Object Functions \u00b6 Name Summary addStringValue fun addStringValue(builder: FlatBufferBuilder, stringValue: Int ): Unit addType fun addType(builder: FlatBufferBuilder, type: UByte ): Unit addValue fun addValue(builder: FlatBufferBuilder, value: Double ): Unit createPrimitiveExpr fun createPrimitiveExpr(builder: FlatBufferBuilder, type: UByte , value: Double , stringValueOffset: Int ): Int endPrimitiveExpr fun endPrimitiveExpr(builder: FlatBufferBuilder): Int getRootAsPrimitiveExpr fun getRootAsPrimitiveExpr(_bb: ByteBuffer ): PrimitiveExpr fun getRootAsPrimitiveExpr(_bb: ByteBuffer , obj: PrimitiveExpr ): PrimitiveExpr startPrimitiveExpr fun startPrimitiveExpr(builder: FlatBufferBuilder): Unit validateVersion fun validateVersion(): Unit","title":"PrimitiveExpr - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-expr/#primitiveexpr","text":"@ExperimentalUnsignedTypes class PrimitiveExpr : Table","title":"PrimitiveExpr"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-expr/#constructors","text":"Name Summary <init> PrimitiveExpr()","title":"Constructors"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-expr/#properties","text":"Name Summary stringValue val stringValue: String ? stringValueAsByteBuffer val stringValueAsByteBuffer: ByteBuffer type val type: UByte value val value: Double","title":"Properties"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-expr/#functions","text":"Name Summary __assign fun __assign(_i: Int , _bb: ByteBuffer ): PrimitiveExpr __init fun __init(_i: Int , _bb: ByteBuffer ): Unit stringValueInByteBuffer fun stringValueInByteBuffer(_bb: ByteBuffer ): ByteBuffer","title":"Functions"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-expr/#companion-object-functions","text":"Name Summary addStringValue fun addStringValue(builder: FlatBufferBuilder, stringValue: Int ): Unit addType fun addType(builder: FlatBufferBuilder, type: UByte ): Unit addValue fun addValue(builder: FlatBufferBuilder, value: Double ): Unit createPrimitiveExpr fun createPrimitiveExpr(builder: FlatBufferBuilder, type: UByte , value: Double , stringValueOffset: Int ): Int endPrimitiveExpr fun endPrimitiveExpr(builder: FlatBufferBuilder): Int getRootAsPrimitiveExpr fun getRootAsPrimitiveExpr(_bb: ByteBuffer ): PrimitiveExpr fun getRootAsPrimitiveExpr(_bb: ByteBuffer , obj: PrimitiveExpr ): PrimitiveExpr startPrimitiveExpr fun startPrimitiveExpr(builder: FlatBufferBuilder): Unit validateVersion fun validateVersion(): Unit","title":"Companion Object Functions"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-expr/-init-/","text":"core / org.pinelang.ast.fbs / PrimitiveExpr / <init> <init> \u00b6 PrimitiveExpr()","title":" init "},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-expr/-init-/#init","text":"PrimitiveExpr()","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-expr/__assign/","text":"core / org.pinelang.ast.fbs / PrimitiveExpr / __assign __assign \u00b6 fun __assign(_i: Int , _bb: ByteBuffer ): PrimitiveExpr","title":"__assign - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-expr/__assign/#__assign","text":"fun __assign(_i: Int , _bb: ByteBuffer ): PrimitiveExpr","title":"__assign"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-expr/__init/","text":"core / org.pinelang.ast.fbs / PrimitiveExpr / __init __init \u00b6 fun __init(_i: Int , _bb: ByteBuffer ): Unit","title":"__init - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-expr/__init/#__init","text":"fun __init(_i: Int , _bb: ByteBuffer ): Unit","title":"__init"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-expr/add-string-value/","text":"core / org.pinelang.ast.fbs / PrimitiveExpr / addStringValue addStringValue \u00b6 fun addStringValue(builder: FlatBufferBuilder, stringValue: Int ): Unit","title":"addStringValue - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-expr/add-string-value/#addstringvalue","text":"fun addStringValue(builder: FlatBufferBuilder, stringValue: Int ): Unit","title":"addStringValue"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-expr/add-type/","text":"core / org.pinelang.ast.fbs / PrimitiveExpr / addType addType \u00b6 fun addType(builder: FlatBufferBuilder, type: UByte ): Unit","title":"addType - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-expr/add-type/#addtype","text":"fun addType(builder: FlatBufferBuilder, type: UByte ): Unit","title":"addType"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-expr/add-value/","text":"core / org.pinelang.ast.fbs / PrimitiveExpr / addValue addValue \u00b6 fun addValue(builder: FlatBufferBuilder, value: Double ): Unit","title":"addValue - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-expr/add-value/#addvalue","text":"fun addValue(builder: FlatBufferBuilder, value: Double ): Unit","title":"addValue"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-expr/create-primitive-expr/","text":"core / org.pinelang.ast.fbs / PrimitiveExpr / createPrimitiveExpr createPrimitiveExpr \u00b6 fun createPrimitiveExpr(builder: FlatBufferBuilder, type: UByte , value: Double , stringValueOffset: Int ): Int","title":"createPrimitiveExpr - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-expr/create-primitive-expr/#createprimitiveexpr","text":"fun createPrimitiveExpr(builder: FlatBufferBuilder, type: UByte , value: Double , stringValueOffset: Int ): Int","title":"createPrimitiveExpr"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-expr/end-primitive-expr/","text":"core / org.pinelang.ast.fbs / PrimitiveExpr / endPrimitiveExpr endPrimitiveExpr \u00b6 fun endPrimitiveExpr(builder: FlatBufferBuilder): Int","title":"endPrimitiveExpr - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-expr/end-primitive-expr/#endprimitiveexpr","text":"fun endPrimitiveExpr(builder: FlatBufferBuilder): Int","title":"endPrimitiveExpr"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-expr/get-root-as-primitive-expr/","text":"core / org.pinelang.ast.fbs / PrimitiveExpr / getRootAsPrimitiveExpr getRootAsPrimitiveExpr \u00b6 fun getRootAsPrimitiveExpr(_bb: ByteBuffer ): PrimitiveExpr fun getRootAsPrimitiveExpr(_bb: ByteBuffer , obj: PrimitiveExpr ): PrimitiveExpr","title":"getRootAsPrimitiveExpr - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-expr/get-root-as-primitive-expr/#getrootasprimitiveexpr","text":"fun getRootAsPrimitiveExpr(_bb: ByteBuffer ): PrimitiveExpr fun getRootAsPrimitiveExpr(_bb: ByteBuffer , obj: PrimitiveExpr ): PrimitiveExpr","title":"getRootAsPrimitiveExpr"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-expr/start-primitive-expr/","text":"core / org.pinelang.ast.fbs / PrimitiveExpr / startPrimitiveExpr startPrimitiveExpr \u00b6 fun startPrimitiveExpr(builder: FlatBufferBuilder): Unit","title":"startPrimitiveExpr - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-expr/start-primitive-expr/#startprimitiveexpr","text":"fun startPrimitiveExpr(builder: FlatBufferBuilder): Unit","title":"startPrimitiveExpr"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-expr/string-value-as-byte-buffer/","text":"core / org.pinelang.ast.fbs / PrimitiveExpr / stringValueAsByteBuffer stringValueAsByteBuffer \u00b6 val stringValueAsByteBuffer: ByteBuffer","title":"stringValueAsByteBuffer - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-expr/string-value-as-byte-buffer/#stringvalueasbytebuffer","text":"val stringValueAsByteBuffer: ByteBuffer","title":"stringValueAsByteBuffer"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-expr/string-value-in-byte-buffer/","text":"core / org.pinelang.ast.fbs / PrimitiveExpr / stringValueInByteBuffer stringValueInByteBuffer \u00b6 fun stringValueInByteBuffer(_bb: ByteBuffer ): ByteBuffer","title":"stringValueInByteBuffer - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-expr/string-value-in-byte-buffer/#stringvalueinbytebuffer","text":"fun stringValueInByteBuffer(_bb: ByteBuffer ): ByteBuffer","title":"stringValueInByteBuffer"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-expr/string-value/","text":"core / org.pinelang.ast.fbs / PrimitiveExpr / stringValue stringValue \u00b6 val stringValue: String ?","title":"stringValue - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-expr/string-value/#stringvalue","text":"val stringValue: String ?","title":"stringValue"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-expr/type/","text":"core / org.pinelang.ast.fbs / PrimitiveExpr / type type \u00b6 val type: UByte","title":"type - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-expr/type/#type","text":"val type: UByte","title":"type"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-expr/validate-version/","text":"core / org.pinelang.ast.fbs / PrimitiveExpr / validateVersion validateVersion \u00b6 fun validateVersion(): Unit","title":"validateVersion - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-expr/validate-version/#validateversion","text":"fun validateVersion(): Unit","title":"validateVersion"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-expr/value/","text":"core / org.pinelang.ast.fbs / PrimitiveExpr / value value \u00b6 val value: Double","title":"value - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-expr/value/#value","text":"val value: Double","title":"value"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-type/","text":"core / org.pinelang.ast.fbs / PrimitiveType PrimitiveType \u00b6 @ExperimentalUnsignedTypes class PrimitiveType Companion Object Properties \u00b6 Name Summary Boolean const val Boolean: UByte Double const val Double: UByte Int const val Int: UByte List const val List: UByte names val names: Array < String > ObjectProperty const val ObjectProperty: UByte String const val String: UByte Void const val Void: UByte Companion Object Functions \u00b6 Name Summary name fun name(e: Int ): String","title":"PrimitiveType - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-type/#primitivetype","text":"@ExperimentalUnsignedTypes class PrimitiveType","title":"PrimitiveType"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-type/#companion-object-properties","text":"Name Summary Boolean const val Boolean: UByte Double const val Double: UByte Int const val Int: UByte List const val List: UByte names val names: Array < String > ObjectProperty const val ObjectProperty: UByte String const val String: UByte Void const val Void: UByte","title":"Companion Object Properties"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-type/#companion-object-functions","text":"Name Summary name fun name(e: Int ): String","title":"Companion Object Functions"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-type/-boolean/","text":"core / org.pinelang.ast.fbs / PrimitiveType / Boolean Boolean \u00b6 const val Boolean: UByte","title":"Boolean - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-type/-boolean/#boolean","text":"const val Boolean: UByte","title":"Boolean"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-type/-double/","text":"core / org.pinelang.ast.fbs / PrimitiveType / Double Double \u00b6 const val Double: UByte","title":"Double - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-type/-double/#double","text":"const val Double: UByte","title":"Double"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-type/-int/","text":"core / org.pinelang.ast.fbs / PrimitiveType / Int Int \u00b6 const val Int: UByte","title":"Int - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-type/-int/#int","text":"const val Int: UByte","title":"Int"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-type/-list/","text":"core / org.pinelang.ast.fbs / PrimitiveType / List List \u00b6 const val List: UByte","title":"List - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-type/-list/#list","text":"const val List: UByte","title":"List"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-type/-object-property/","text":"core / org.pinelang.ast.fbs / PrimitiveType / ObjectProperty ObjectProperty \u00b6 const val ObjectProperty: UByte","title":"ObjectProperty - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-type/-object-property/#objectproperty","text":"const val ObjectProperty: UByte","title":"ObjectProperty"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-type/-string/","text":"core / org.pinelang.ast.fbs / PrimitiveType / String String \u00b6 const val String: UByte","title":"String - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-type/-string/#string","text":"const val String: UByte","title":"String"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-type/-void/","text":"core / org.pinelang.ast.fbs / PrimitiveType / Void Void \u00b6 const val Void: UByte","title":"Void - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-type/-void/#void","text":"const val Void: UByte","title":"Void"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-type/name/","text":"core / org.pinelang.ast.fbs / PrimitiveType / name name \u00b6 fun name(e: Int ): String","title":"name - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-type/name/#name","text":"fun name(e: Int ): String","title":"name"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-type/names/","text":"core / org.pinelang.ast.fbs / PrimitiveType / names names \u00b6 val names: Array < String >","title":"names - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-primitive-type/names/#names","text":"val names: Array < String >","title":"names"},{"location":"latest/core/org.pinelang.ast.fbs/-program/","text":"core / org.pinelang.ast.fbs / Program Program \u00b6 @ExperimentalUnsignedTypes class Program : Table Constructors \u00b6 Name Summary <init> Program() Properties \u00b6 Name Summary root val root: ObjectDefinition ? Functions \u00b6 Name Summary __assign fun __assign(_i: Int , _bb: ByteBuffer ): Program __init fun __init(_i: Int , _bb: ByteBuffer ): Unit root fun root(obj: ObjectDefinition ): ObjectDefinition ? Companion Object Functions \u00b6 Name Summary addRoot fun addRoot(builder: FlatBufferBuilder, root: Int ): Unit createProgram fun createProgram(builder: FlatBufferBuilder, rootOffset: Int ): Int endProgram fun endProgram(builder: FlatBufferBuilder): Int finishProgramBuffer fun finishProgramBuffer(builder: FlatBufferBuilder, offset: Int ): Unit finishSizePrefixedProgramBuffer fun finishSizePrefixedProgramBuffer(builder: FlatBufferBuilder, offset: Int ): Unit getRootAsProgram fun getRootAsProgram(_bb: ByteBuffer ): Program fun getRootAsProgram(_bb: ByteBuffer , obj: Program ): Program startProgram fun startProgram(builder: FlatBufferBuilder): Unit validateVersion fun validateVersion(): Unit","title":"Program - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-program/#program","text":"@ExperimentalUnsignedTypes class Program : Table","title":"Program"},{"location":"latest/core/org.pinelang.ast.fbs/-program/#constructors","text":"Name Summary <init> Program()","title":"Constructors"},{"location":"latest/core/org.pinelang.ast.fbs/-program/#properties","text":"Name Summary root val root: ObjectDefinition ?","title":"Properties"},{"location":"latest/core/org.pinelang.ast.fbs/-program/#functions","text":"Name Summary __assign fun __assign(_i: Int , _bb: ByteBuffer ): Program __init fun __init(_i: Int , _bb: ByteBuffer ): Unit root fun root(obj: ObjectDefinition ): ObjectDefinition ?","title":"Functions"},{"location":"latest/core/org.pinelang.ast.fbs/-program/#companion-object-functions","text":"Name Summary addRoot fun addRoot(builder: FlatBufferBuilder, root: Int ): Unit createProgram fun createProgram(builder: FlatBufferBuilder, rootOffset: Int ): Int endProgram fun endProgram(builder: FlatBufferBuilder): Int finishProgramBuffer fun finishProgramBuffer(builder: FlatBufferBuilder, offset: Int ): Unit finishSizePrefixedProgramBuffer fun finishSizePrefixedProgramBuffer(builder: FlatBufferBuilder, offset: Int ): Unit getRootAsProgram fun getRootAsProgram(_bb: ByteBuffer ): Program fun getRootAsProgram(_bb: ByteBuffer , obj: Program ): Program startProgram fun startProgram(builder: FlatBufferBuilder): Unit validateVersion fun validateVersion(): Unit","title":"Companion Object Functions"},{"location":"latest/core/org.pinelang.ast.fbs/-program/-init-/","text":"core / org.pinelang.ast.fbs / Program / <init> <init> \u00b6 Program()","title":" init "},{"location":"latest/core/org.pinelang.ast.fbs/-program/-init-/#init","text":"Program()","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.ast.fbs/-program/__assign/","text":"core / org.pinelang.ast.fbs / Program / __assign __assign \u00b6 fun __assign(_i: Int , _bb: ByteBuffer ): Program","title":"__assign - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-program/__assign/#__assign","text":"fun __assign(_i: Int , _bb: ByteBuffer ): Program","title":"__assign"},{"location":"latest/core/org.pinelang.ast.fbs/-program/__init/","text":"core / org.pinelang.ast.fbs / Program / __init __init \u00b6 fun __init(_i: Int , _bb: ByteBuffer ): Unit","title":"__init - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-program/__init/#__init","text":"fun __init(_i: Int , _bb: ByteBuffer ): Unit","title":"__init"},{"location":"latest/core/org.pinelang.ast.fbs/-program/add-root/","text":"core / org.pinelang.ast.fbs / Program / addRoot addRoot \u00b6 fun addRoot(builder: FlatBufferBuilder, root: Int ): Unit","title":"addRoot - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-program/add-root/#addroot","text":"fun addRoot(builder: FlatBufferBuilder, root: Int ): Unit","title":"addRoot"},{"location":"latest/core/org.pinelang.ast.fbs/-program/create-program/","text":"core / org.pinelang.ast.fbs / Program / createProgram createProgram \u00b6 fun createProgram(builder: FlatBufferBuilder, rootOffset: Int ): Int","title":"createProgram - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-program/create-program/#createprogram","text":"fun createProgram(builder: FlatBufferBuilder, rootOffset: Int ): Int","title":"createProgram"},{"location":"latest/core/org.pinelang.ast.fbs/-program/end-program/","text":"core / org.pinelang.ast.fbs / Program / endProgram endProgram \u00b6 fun endProgram(builder: FlatBufferBuilder): Int","title":"endProgram - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-program/end-program/#endprogram","text":"fun endProgram(builder: FlatBufferBuilder): Int","title":"endProgram"},{"location":"latest/core/org.pinelang.ast.fbs/-program/finish-program-buffer/","text":"core / org.pinelang.ast.fbs / Program / finishProgramBuffer finishProgramBuffer \u00b6 fun finishProgramBuffer(builder: FlatBufferBuilder, offset: Int ): Unit","title":"finishProgramBuffer - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-program/finish-program-buffer/#finishprogrambuffer","text":"fun finishProgramBuffer(builder: FlatBufferBuilder, offset: Int ): Unit","title":"finishProgramBuffer"},{"location":"latest/core/org.pinelang.ast.fbs/-program/finish-size-prefixed-program-buffer/","text":"core / org.pinelang.ast.fbs / Program / finishSizePrefixedProgramBuffer finishSizePrefixedProgramBuffer \u00b6 fun finishSizePrefixedProgramBuffer(builder: FlatBufferBuilder, offset: Int ): Unit","title":"finishSizePrefixedProgramBuffer - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-program/finish-size-prefixed-program-buffer/#finishsizeprefixedprogrambuffer","text":"fun finishSizePrefixedProgramBuffer(builder: FlatBufferBuilder, offset: Int ): Unit","title":"finishSizePrefixedProgramBuffer"},{"location":"latest/core/org.pinelang.ast.fbs/-program/get-root-as-program/","text":"core / org.pinelang.ast.fbs / Program / getRootAsProgram getRootAsProgram \u00b6 fun getRootAsProgram(_bb: ByteBuffer ): Program fun getRootAsProgram(_bb: ByteBuffer , obj: Program ): Program","title":"getRootAsProgram - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-program/get-root-as-program/#getrootasprogram","text":"fun getRootAsProgram(_bb: ByteBuffer ): Program fun getRootAsProgram(_bb: ByteBuffer , obj: Program ): Program","title":"getRootAsProgram"},{"location":"latest/core/org.pinelang.ast.fbs/-program/root/","text":"core / org.pinelang.ast.fbs / Program / root root \u00b6 val root: ObjectDefinition ? fun root(obj: ObjectDefinition ): ObjectDefinition ?","title":"root - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-program/root/#root","text":"val root: ObjectDefinition ? fun root(obj: ObjectDefinition ): ObjectDefinition ?","title":"root"},{"location":"latest/core/org.pinelang.ast.fbs/-program/start-program/","text":"core / org.pinelang.ast.fbs / Program / startProgram startProgram \u00b6 fun startProgram(builder: FlatBufferBuilder): Unit","title":"startProgram - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-program/start-program/#startprogram","text":"fun startProgram(builder: FlatBufferBuilder): Unit","title":"startProgram"},{"location":"latest/core/org.pinelang.ast.fbs/-program/validate-version/","text":"core / org.pinelang.ast.fbs / Program / validateVersion validateVersion \u00b6 fun validateVersion(): Unit","title":"validateVersion - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-program/validate-version/#validateversion","text":"fun validateVersion(): Unit","title":"validateVersion"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-definition/","text":"core / org.pinelang.ast.fbs / PropDefinition PropDefinition \u00b6 @ExperimentalUnsignedTypes class PropDefinition : Table Constructors \u00b6 Name Summary <init> PropDefinition() Properties \u00b6 Name Summary debug val debug: DebugInfo ? id val id: UByte value val value: Expr ? Functions \u00b6 Name Summary __assign fun __assign(_i: Int , _bb: ByteBuffer ): PropDefinition __init fun __init(_i: Int , _bb: ByteBuffer ): Unit debug fun debug(obj: DebugInfo ): DebugInfo ? value fun value(obj: Expr ): Expr ? Companion Object Functions \u00b6 Name Summary addDebug fun addDebug(builder: FlatBufferBuilder, debug: Int ): Unit addId fun addId(builder: FlatBufferBuilder, id: UByte ): Unit addValue fun addValue(builder: FlatBufferBuilder, value: Int ): Unit createPropDefinition fun createPropDefinition(builder: FlatBufferBuilder, id: UByte , valueOffset: Int , debugOffset: Int ): Int endPropDefinition fun endPropDefinition(builder: FlatBufferBuilder): Int getRootAsPropDefinition fun getRootAsPropDefinition(_bb: ByteBuffer ): PropDefinition fun getRootAsPropDefinition(_bb: ByteBuffer , obj: PropDefinition ): PropDefinition startPropDefinition fun startPropDefinition(builder: FlatBufferBuilder): Unit validateVersion fun validateVersion(): Unit","title":"PropDefinition - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-definition/#propdefinition","text":"@ExperimentalUnsignedTypes class PropDefinition : Table","title":"PropDefinition"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-definition/#constructors","text":"Name Summary <init> PropDefinition()","title":"Constructors"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-definition/#properties","text":"Name Summary debug val debug: DebugInfo ? id val id: UByte value val value: Expr ?","title":"Properties"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-definition/#functions","text":"Name Summary __assign fun __assign(_i: Int , _bb: ByteBuffer ): PropDefinition __init fun __init(_i: Int , _bb: ByteBuffer ): Unit debug fun debug(obj: DebugInfo ): DebugInfo ? value fun value(obj: Expr ): Expr ?","title":"Functions"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-definition/#companion-object-functions","text":"Name Summary addDebug fun addDebug(builder: FlatBufferBuilder, debug: Int ): Unit addId fun addId(builder: FlatBufferBuilder, id: UByte ): Unit addValue fun addValue(builder: FlatBufferBuilder, value: Int ): Unit createPropDefinition fun createPropDefinition(builder: FlatBufferBuilder, id: UByte , valueOffset: Int , debugOffset: Int ): Int endPropDefinition fun endPropDefinition(builder: FlatBufferBuilder): Int getRootAsPropDefinition fun getRootAsPropDefinition(_bb: ByteBuffer ): PropDefinition fun getRootAsPropDefinition(_bb: ByteBuffer , obj: PropDefinition ): PropDefinition startPropDefinition fun startPropDefinition(builder: FlatBufferBuilder): Unit validateVersion fun validateVersion(): Unit","title":"Companion Object Functions"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-definition/-init-/","text":"core / org.pinelang.ast.fbs / PropDefinition / <init> <init> \u00b6 PropDefinition()","title":" init "},{"location":"latest/core/org.pinelang.ast.fbs/-prop-definition/-init-/#init","text":"PropDefinition()","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-definition/__assign/","text":"core / org.pinelang.ast.fbs / PropDefinition / __assign __assign \u00b6 fun __assign(_i: Int , _bb: ByteBuffer ): PropDefinition","title":"__assign - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-definition/__assign/#__assign","text":"fun __assign(_i: Int , _bb: ByteBuffer ): PropDefinition","title":"__assign"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-definition/__init/","text":"core / org.pinelang.ast.fbs / PropDefinition / __init __init \u00b6 fun __init(_i: Int , _bb: ByteBuffer ): Unit","title":"__init - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-definition/__init/#__init","text":"fun __init(_i: Int , _bb: ByteBuffer ): Unit","title":"__init"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-definition/add-debug/","text":"core / org.pinelang.ast.fbs / PropDefinition / addDebug addDebug \u00b6 fun addDebug(builder: FlatBufferBuilder, debug: Int ): Unit","title":"addDebug - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-definition/add-debug/#adddebug","text":"fun addDebug(builder: FlatBufferBuilder, debug: Int ): Unit","title":"addDebug"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-definition/add-id/","text":"core / org.pinelang.ast.fbs / PropDefinition / addId addId \u00b6 fun addId(builder: FlatBufferBuilder, id: UByte ): Unit","title":"addId - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-definition/add-id/#addid","text":"fun addId(builder: FlatBufferBuilder, id: UByte ): Unit","title":"addId"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-definition/add-value/","text":"core / org.pinelang.ast.fbs / PropDefinition / addValue addValue \u00b6 fun addValue(builder: FlatBufferBuilder, value: Int ): Unit","title":"addValue - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-definition/add-value/#addvalue","text":"fun addValue(builder: FlatBufferBuilder, value: Int ): Unit","title":"addValue"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-definition/create-prop-definition/","text":"core / org.pinelang.ast.fbs / PropDefinition / createPropDefinition createPropDefinition \u00b6 fun createPropDefinition(builder: FlatBufferBuilder, id: UByte , valueOffset: Int , debugOffset: Int ): Int","title":"createPropDefinition - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-definition/create-prop-definition/#createpropdefinition","text":"fun createPropDefinition(builder: FlatBufferBuilder, id: UByte , valueOffset: Int , debugOffset: Int ): Int","title":"createPropDefinition"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-definition/debug/","text":"core / org.pinelang.ast.fbs / PropDefinition / debug debug \u00b6 val debug: DebugInfo ? fun debug(obj: DebugInfo ): DebugInfo ?","title":"debug - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-definition/debug/#debug","text":"val debug: DebugInfo ? fun debug(obj: DebugInfo ): DebugInfo ?","title":"debug"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-definition/end-prop-definition/","text":"core / org.pinelang.ast.fbs / PropDefinition / endPropDefinition endPropDefinition \u00b6 fun endPropDefinition(builder: FlatBufferBuilder): Int","title":"endPropDefinition - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-definition/end-prop-definition/#endpropdefinition","text":"fun endPropDefinition(builder: FlatBufferBuilder): Int","title":"endPropDefinition"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-definition/get-root-as-prop-definition/","text":"core / org.pinelang.ast.fbs / PropDefinition / getRootAsPropDefinition getRootAsPropDefinition \u00b6 fun getRootAsPropDefinition(_bb: ByteBuffer ): PropDefinition fun getRootAsPropDefinition(_bb: ByteBuffer , obj: PropDefinition ): PropDefinition","title":"getRootAsPropDefinition - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-definition/get-root-as-prop-definition/#getrootaspropdefinition","text":"fun getRootAsPropDefinition(_bb: ByteBuffer ): PropDefinition fun getRootAsPropDefinition(_bb: ByteBuffer , obj: PropDefinition ): PropDefinition","title":"getRootAsPropDefinition"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-definition/id/","text":"core / org.pinelang.ast.fbs / PropDefinition / id id \u00b6 val id: UByte","title":"id - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-definition/id/#id","text":"val id: UByte","title":"id"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-definition/start-prop-definition/","text":"core / org.pinelang.ast.fbs / PropDefinition / startPropDefinition startPropDefinition \u00b6 fun startPropDefinition(builder: FlatBufferBuilder): Unit","title":"startPropDefinition - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-definition/start-prop-definition/#startpropdefinition","text":"fun startPropDefinition(builder: FlatBufferBuilder): Unit","title":"startPropDefinition"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-definition/validate-version/","text":"core / org.pinelang.ast.fbs / PropDefinition / validateVersion validateVersion \u00b6 fun validateVersion(): Unit","title":"validateVersion - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-definition/validate-version/#validateversion","text":"fun validateVersion(): Unit","title":"validateVersion"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-definition/value/","text":"core / org.pinelang.ast.fbs / PropDefinition / value value \u00b6 val value: Expr ? fun value(obj: Expr ): Expr ?","title":"value - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-definition/value/#value","text":"val value: Expr ? fun value(obj: Expr ): Expr ?","title":"value"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-ref-expr/","text":"core / org.pinelang.ast.fbs / PropRefExpr PropRefExpr \u00b6 @ExperimentalUnsignedTypes class PropRefExpr : Table Constructors \u00b6 Name Summary <init> PropRefExpr() Properties \u00b6 Name Summary objId val objId: Int propId val propId: UByte Functions \u00b6 Name Summary __assign fun __assign(_i: Int , _bb: ByteBuffer ): PropRefExpr __init fun __init(_i: Int , _bb: ByteBuffer ): Unit Companion Object Functions \u00b6 Name Summary addObjId fun addObjId(builder: FlatBufferBuilder, objId: Int ): Unit addPropId fun addPropId(builder: FlatBufferBuilder, propId: UByte ): Unit createPropRefExpr fun createPropRefExpr(builder: FlatBufferBuilder, objId: Int , propId: UByte ): Int endPropRefExpr fun endPropRefExpr(builder: FlatBufferBuilder): Int getRootAsPropRefExpr fun getRootAsPropRefExpr(_bb: ByteBuffer ): PropRefExpr fun getRootAsPropRefExpr(_bb: ByteBuffer , obj: PropRefExpr ): PropRefExpr startPropRefExpr fun startPropRefExpr(builder: FlatBufferBuilder): Unit validateVersion fun validateVersion(): Unit","title":"PropRefExpr - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-ref-expr/#proprefexpr","text":"@ExperimentalUnsignedTypes class PropRefExpr : Table","title":"PropRefExpr"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-ref-expr/#constructors","text":"Name Summary <init> PropRefExpr()","title":"Constructors"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-ref-expr/#properties","text":"Name Summary objId val objId: Int propId val propId: UByte","title":"Properties"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-ref-expr/#functions","text":"Name Summary __assign fun __assign(_i: Int , _bb: ByteBuffer ): PropRefExpr __init fun __init(_i: Int , _bb: ByteBuffer ): Unit","title":"Functions"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-ref-expr/#companion-object-functions","text":"Name Summary addObjId fun addObjId(builder: FlatBufferBuilder, objId: Int ): Unit addPropId fun addPropId(builder: FlatBufferBuilder, propId: UByte ): Unit createPropRefExpr fun createPropRefExpr(builder: FlatBufferBuilder, objId: Int , propId: UByte ): Int endPropRefExpr fun endPropRefExpr(builder: FlatBufferBuilder): Int getRootAsPropRefExpr fun getRootAsPropRefExpr(_bb: ByteBuffer ): PropRefExpr fun getRootAsPropRefExpr(_bb: ByteBuffer , obj: PropRefExpr ): PropRefExpr startPropRefExpr fun startPropRefExpr(builder: FlatBufferBuilder): Unit validateVersion fun validateVersion(): Unit","title":"Companion Object Functions"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-ref-expr/-init-/","text":"core / org.pinelang.ast.fbs / PropRefExpr / <init> <init> \u00b6 PropRefExpr()","title":" init "},{"location":"latest/core/org.pinelang.ast.fbs/-prop-ref-expr/-init-/#init","text":"PropRefExpr()","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-ref-expr/__assign/","text":"core / org.pinelang.ast.fbs / PropRefExpr / __assign __assign \u00b6 fun __assign(_i: Int , _bb: ByteBuffer ): PropRefExpr","title":"__assign - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-ref-expr/__assign/#__assign","text":"fun __assign(_i: Int , _bb: ByteBuffer ): PropRefExpr","title":"__assign"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-ref-expr/__init/","text":"core / org.pinelang.ast.fbs / PropRefExpr / __init __init \u00b6 fun __init(_i: Int , _bb: ByteBuffer ): Unit","title":"__init - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-ref-expr/__init/#__init","text":"fun __init(_i: Int , _bb: ByteBuffer ): Unit","title":"__init"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-ref-expr/add-obj-id/","text":"core / org.pinelang.ast.fbs / PropRefExpr / addObjId addObjId \u00b6 fun addObjId(builder: FlatBufferBuilder, objId: Int ): Unit","title":"addObjId - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-ref-expr/add-obj-id/#addobjid","text":"fun addObjId(builder: FlatBufferBuilder, objId: Int ): Unit","title":"addObjId"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-ref-expr/add-prop-id/","text":"core / org.pinelang.ast.fbs / PropRefExpr / addPropId addPropId \u00b6 fun addPropId(builder: FlatBufferBuilder, propId: UByte ): Unit","title":"addPropId - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-ref-expr/add-prop-id/#addpropid","text":"fun addPropId(builder: FlatBufferBuilder, propId: UByte ): Unit","title":"addPropId"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-ref-expr/create-prop-ref-expr/","text":"core / org.pinelang.ast.fbs / PropRefExpr / createPropRefExpr createPropRefExpr \u00b6 fun createPropRefExpr(builder: FlatBufferBuilder, objId: Int , propId: UByte ): Int","title":"createPropRefExpr - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-ref-expr/create-prop-ref-expr/#createproprefexpr","text":"fun createPropRefExpr(builder: FlatBufferBuilder, objId: Int , propId: UByte ): Int","title":"createPropRefExpr"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-ref-expr/end-prop-ref-expr/","text":"core / org.pinelang.ast.fbs / PropRefExpr / endPropRefExpr endPropRefExpr \u00b6 fun endPropRefExpr(builder: FlatBufferBuilder): Int","title":"endPropRefExpr - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-ref-expr/end-prop-ref-expr/#endproprefexpr","text":"fun endPropRefExpr(builder: FlatBufferBuilder): Int","title":"endPropRefExpr"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-ref-expr/get-root-as-prop-ref-expr/","text":"core / org.pinelang.ast.fbs / PropRefExpr / getRootAsPropRefExpr getRootAsPropRefExpr \u00b6 fun getRootAsPropRefExpr(_bb: ByteBuffer ): PropRefExpr fun getRootAsPropRefExpr(_bb: ByteBuffer , obj: PropRefExpr ): PropRefExpr","title":"getRootAsPropRefExpr - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-ref-expr/get-root-as-prop-ref-expr/#getrootasproprefexpr","text":"fun getRootAsPropRefExpr(_bb: ByteBuffer ): PropRefExpr fun getRootAsPropRefExpr(_bb: ByteBuffer , obj: PropRefExpr ): PropRefExpr","title":"getRootAsPropRefExpr"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-ref-expr/obj-id/","text":"core / org.pinelang.ast.fbs / PropRefExpr / objId objId \u00b6 val objId: Int","title":"objId - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-ref-expr/obj-id/#objid","text":"val objId: Int","title":"objId"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-ref-expr/prop-id/","text":"core / org.pinelang.ast.fbs / PropRefExpr / propId propId \u00b6 val propId: UByte","title":"propId - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-ref-expr/prop-id/#propid","text":"val propId: UByte","title":"propId"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-ref-expr/start-prop-ref-expr/","text":"core / org.pinelang.ast.fbs / PropRefExpr / startPropRefExpr startPropRefExpr \u00b6 fun startPropRefExpr(builder: FlatBufferBuilder): Unit","title":"startPropRefExpr - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-ref-expr/start-prop-ref-expr/#startproprefexpr","text":"fun startPropRefExpr(builder: FlatBufferBuilder): Unit","title":"startPropRefExpr"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-ref-expr/validate-version/","text":"core / org.pinelang.ast.fbs / PropRefExpr / validateVersion validateVersion \u00b6 fun validateVersion(): Unit","title":"validateVersion - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-prop-ref-expr/validate-version/#validateversion","text":"fun validateVersion(): Unit","title":"validateVersion"},{"location":"latest/core/org.pinelang.ast.fbs/-range/","text":"core / org.pinelang.ast.fbs / Range Range \u00b6 @ExperimentalUnsignedTypes class Range : Struct Constructors \u00b6 Name Summary <init> Range() Properties \u00b6 Name Summary end val end: Position ? start val start: Position ? Functions \u00b6 Name Summary __assign fun __assign(_i: Int , _bb: ByteBuffer ): Range __init fun __init(_i: Int , _bb: ByteBuffer ): Unit end fun end(obj: Position ): Position ? start fun start(obj: Position ): Position ? Companion Object Functions \u00b6 Name Summary createRange fun createRange(builder: FlatBufferBuilder, start_line: Int , start_char: Int , end_line: Int , end_char: Int ): Int","title":"Range - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-range/#range","text":"@ExperimentalUnsignedTypes class Range : Struct","title":"Range"},{"location":"latest/core/org.pinelang.ast.fbs/-range/#constructors","text":"Name Summary <init> Range()","title":"Constructors"},{"location":"latest/core/org.pinelang.ast.fbs/-range/#properties","text":"Name Summary end val end: Position ? start val start: Position ?","title":"Properties"},{"location":"latest/core/org.pinelang.ast.fbs/-range/#functions","text":"Name Summary __assign fun __assign(_i: Int , _bb: ByteBuffer ): Range __init fun __init(_i: Int , _bb: ByteBuffer ): Unit end fun end(obj: Position ): Position ? start fun start(obj: Position ): Position ?","title":"Functions"},{"location":"latest/core/org.pinelang.ast.fbs/-range/#companion-object-functions","text":"Name Summary createRange fun createRange(builder: FlatBufferBuilder, start_line: Int , start_char: Int , end_line: Int , end_char: Int ): Int","title":"Companion Object Functions"},{"location":"latest/core/org.pinelang.ast.fbs/-range/-init-/","text":"core / org.pinelang.ast.fbs / Range / <init> <init> \u00b6 Range()","title":" init "},{"location":"latest/core/org.pinelang.ast.fbs/-range/-init-/#init","text":"Range()","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.ast.fbs/-range/__assign/","text":"core / org.pinelang.ast.fbs / Range / __assign __assign \u00b6 fun __assign(_i: Int , _bb: ByteBuffer ): Range","title":"__assign - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-range/__assign/#__assign","text":"fun __assign(_i: Int , _bb: ByteBuffer ): Range","title":"__assign"},{"location":"latest/core/org.pinelang.ast.fbs/-range/__init/","text":"core / org.pinelang.ast.fbs / Range / __init __init \u00b6 fun __init(_i: Int , _bb: ByteBuffer ): Unit","title":"__init - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-range/__init/#__init","text":"fun __init(_i: Int , _bb: ByteBuffer ): Unit","title":"__init"},{"location":"latest/core/org.pinelang.ast.fbs/-range/create-range/","text":"core / org.pinelang.ast.fbs / Range / createRange createRange \u00b6 fun createRange(builder: FlatBufferBuilder, start_line: Int , start_char: Int , end_line: Int , end_char: Int ): Int","title":"createRange - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-range/create-range/#createrange","text":"fun createRange(builder: FlatBufferBuilder, start_line: Int , start_char: Int , end_line: Int , end_char: Int ): Int","title":"createRange"},{"location":"latest/core/org.pinelang.ast.fbs/-range/end/","text":"core / org.pinelang.ast.fbs / Range / end end \u00b6 val end: Position ? fun end(obj: Position ): Position ?","title":"end - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-range/end/#end","text":"val end: Position ? fun end(obj: Position ): Position ?","title":"end"},{"location":"latest/core/org.pinelang.ast.fbs/-range/start/","text":"core / org.pinelang.ast.fbs / Range / start start \u00b6 val start: Position ? fun start(obj: Position ): Position ?","title":"start - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-range/start/#start","text":"val start: Position ? fun start(obj: Position ): Position ?","title":"start"},{"location":"latest/core/org.pinelang.ast.fbs/-signal-expr/","text":"core / org.pinelang.ast.fbs / SignalExpr SignalExpr \u00b6 @ExperimentalUnsignedTypes class SignalExpr : Table Constructors \u00b6 Name Summary <init> SignalExpr() Properties \u00b6 Name Summary debug val debug: DebugInfo ? expr val expr: CallableExpr ? id val id: UByte Functions \u00b6 Name Summary __assign fun __assign(_i: Int , _bb: ByteBuffer ): SignalExpr __init fun __init(_i: Int , _bb: ByteBuffer ): Unit debug fun debug(obj: DebugInfo ): DebugInfo ? expr fun expr(obj: CallableExpr ): CallableExpr ? Companion Object Functions \u00b6 Name Summary addDebug fun addDebug(builder: FlatBufferBuilder, debug: Int ): Unit addExpr fun addExpr(builder: FlatBufferBuilder, expr: Int ): Unit addId fun addId(builder: FlatBufferBuilder, id: UByte ): Unit createSignalExpr fun createSignalExpr(builder: FlatBufferBuilder, id: UByte , exprOffset: Int , debugOffset: Int ): Int endSignalExpr fun endSignalExpr(builder: FlatBufferBuilder): Int getRootAsSignalExpr fun getRootAsSignalExpr(_bb: ByteBuffer ): SignalExpr fun getRootAsSignalExpr(_bb: ByteBuffer , obj: SignalExpr ): SignalExpr startSignalExpr fun startSignalExpr(builder: FlatBufferBuilder): Unit validateVersion fun validateVersion(): Unit","title":"SignalExpr - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-signal-expr/#signalexpr","text":"@ExperimentalUnsignedTypes class SignalExpr : Table","title":"SignalExpr"},{"location":"latest/core/org.pinelang.ast.fbs/-signal-expr/#constructors","text":"Name Summary <init> SignalExpr()","title":"Constructors"},{"location":"latest/core/org.pinelang.ast.fbs/-signal-expr/#properties","text":"Name Summary debug val debug: DebugInfo ? expr val expr: CallableExpr ? id val id: UByte","title":"Properties"},{"location":"latest/core/org.pinelang.ast.fbs/-signal-expr/#functions","text":"Name Summary __assign fun __assign(_i: Int , _bb: ByteBuffer ): SignalExpr __init fun __init(_i: Int , _bb: ByteBuffer ): Unit debug fun debug(obj: DebugInfo ): DebugInfo ? expr fun expr(obj: CallableExpr ): CallableExpr ?","title":"Functions"},{"location":"latest/core/org.pinelang.ast.fbs/-signal-expr/#companion-object-functions","text":"Name Summary addDebug fun addDebug(builder: FlatBufferBuilder, debug: Int ): Unit addExpr fun addExpr(builder: FlatBufferBuilder, expr: Int ): Unit addId fun addId(builder: FlatBufferBuilder, id: UByte ): Unit createSignalExpr fun createSignalExpr(builder: FlatBufferBuilder, id: UByte , exprOffset: Int , debugOffset: Int ): Int endSignalExpr fun endSignalExpr(builder: FlatBufferBuilder): Int getRootAsSignalExpr fun getRootAsSignalExpr(_bb: ByteBuffer ): SignalExpr fun getRootAsSignalExpr(_bb: ByteBuffer , obj: SignalExpr ): SignalExpr startSignalExpr fun startSignalExpr(builder: FlatBufferBuilder): Unit validateVersion fun validateVersion(): Unit","title":"Companion Object Functions"},{"location":"latest/core/org.pinelang.ast.fbs/-signal-expr/-init-/","text":"core / org.pinelang.ast.fbs / SignalExpr / <init> <init> \u00b6 SignalExpr()","title":" init "},{"location":"latest/core/org.pinelang.ast.fbs/-signal-expr/-init-/#init","text":"SignalExpr()","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.ast.fbs/-signal-expr/__assign/","text":"core / org.pinelang.ast.fbs / SignalExpr / __assign __assign \u00b6 fun __assign(_i: Int , _bb: ByteBuffer ): SignalExpr","title":"__assign - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-signal-expr/__assign/#__assign","text":"fun __assign(_i: Int , _bb: ByteBuffer ): SignalExpr","title":"__assign"},{"location":"latest/core/org.pinelang.ast.fbs/-signal-expr/__init/","text":"core / org.pinelang.ast.fbs / SignalExpr / __init __init \u00b6 fun __init(_i: Int , _bb: ByteBuffer ): Unit","title":"__init - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-signal-expr/__init/#__init","text":"fun __init(_i: Int , _bb: ByteBuffer ): Unit","title":"__init"},{"location":"latest/core/org.pinelang.ast.fbs/-signal-expr/add-debug/","text":"core / org.pinelang.ast.fbs / SignalExpr / addDebug addDebug \u00b6 fun addDebug(builder: FlatBufferBuilder, debug: Int ): Unit","title":"addDebug - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-signal-expr/add-debug/#adddebug","text":"fun addDebug(builder: FlatBufferBuilder, debug: Int ): Unit","title":"addDebug"},{"location":"latest/core/org.pinelang.ast.fbs/-signal-expr/add-expr/","text":"core / org.pinelang.ast.fbs / SignalExpr / addExpr addExpr \u00b6 fun addExpr(builder: FlatBufferBuilder, expr: Int ): Unit","title":"addExpr - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-signal-expr/add-expr/#addexpr","text":"fun addExpr(builder: FlatBufferBuilder, expr: Int ): Unit","title":"addExpr"},{"location":"latest/core/org.pinelang.ast.fbs/-signal-expr/add-id/","text":"core / org.pinelang.ast.fbs / SignalExpr / addId addId \u00b6 fun addId(builder: FlatBufferBuilder, id: UByte ): Unit","title":"addId - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-signal-expr/add-id/#addid","text":"fun addId(builder: FlatBufferBuilder, id: UByte ): Unit","title":"addId"},{"location":"latest/core/org.pinelang.ast.fbs/-signal-expr/create-signal-expr/","text":"core / org.pinelang.ast.fbs / SignalExpr / createSignalExpr createSignalExpr \u00b6 fun createSignalExpr(builder: FlatBufferBuilder, id: UByte , exprOffset: Int , debugOffset: Int ): Int","title":"createSignalExpr - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-signal-expr/create-signal-expr/#createsignalexpr","text":"fun createSignalExpr(builder: FlatBufferBuilder, id: UByte , exprOffset: Int , debugOffset: Int ): Int","title":"createSignalExpr"},{"location":"latest/core/org.pinelang.ast.fbs/-signal-expr/debug/","text":"core / org.pinelang.ast.fbs / SignalExpr / debug debug \u00b6 val debug: DebugInfo ? fun debug(obj: DebugInfo ): DebugInfo ?","title":"debug - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-signal-expr/debug/#debug","text":"val debug: DebugInfo ? fun debug(obj: DebugInfo ): DebugInfo ?","title":"debug"},{"location":"latest/core/org.pinelang.ast.fbs/-signal-expr/end-signal-expr/","text":"core / org.pinelang.ast.fbs / SignalExpr / endSignalExpr endSignalExpr \u00b6 fun endSignalExpr(builder: FlatBufferBuilder): Int","title":"endSignalExpr - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-signal-expr/end-signal-expr/#endsignalexpr","text":"fun endSignalExpr(builder: FlatBufferBuilder): Int","title":"endSignalExpr"},{"location":"latest/core/org.pinelang.ast.fbs/-signal-expr/expr/","text":"core / org.pinelang.ast.fbs / SignalExpr / expr expr \u00b6 val expr: CallableExpr ? fun expr(obj: CallableExpr ): CallableExpr ?","title":"expr - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-signal-expr/expr/#expr","text":"val expr: CallableExpr ? fun expr(obj: CallableExpr ): CallableExpr ?","title":"expr"},{"location":"latest/core/org.pinelang.ast.fbs/-signal-expr/get-root-as-signal-expr/","text":"core / org.pinelang.ast.fbs / SignalExpr / getRootAsSignalExpr getRootAsSignalExpr \u00b6 fun getRootAsSignalExpr(_bb: ByteBuffer ): SignalExpr fun getRootAsSignalExpr(_bb: ByteBuffer , obj: SignalExpr ): SignalExpr","title":"getRootAsSignalExpr - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-signal-expr/get-root-as-signal-expr/#getrootassignalexpr","text":"fun getRootAsSignalExpr(_bb: ByteBuffer ): SignalExpr fun getRootAsSignalExpr(_bb: ByteBuffer , obj: SignalExpr ): SignalExpr","title":"getRootAsSignalExpr"},{"location":"latest/core/org.pinelang.ast.fbs/-signal-expr/id/","text":"core / org.pinelang.ast.fbs / SignalExpr / id id \u00b6 val id: UByte","title":"id - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-signal-expr/id/#id","text":"val id: UByte","title":"id"},{"location":"latest/core/org.pinelang.ast.fbs/-signal-expr/start-signal-expr/","text":"core / org.pinelang.ast.fbs / SignalExpr / startSignalExpr startSignalExpr \u00b6 fun startSignalExpr(builder: FlatBufferBuilder): Unit","title":"startSignalExpr - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-signal-expr/start-signal-expr/#startsignalexpr","text":"fun startSignalExpr(builder: FlatBufferBuilder): Unit","title":"startSignalExpr"},{"location":"latest/core/org.pinelang.ast.fbs/-signal-expr/validate-version/","text":"core / org.pinelang.ast.fbs / SignalExpr / validateVersion validateVersion \u00b6 fun validateVersion(): Unit","title":"validateVersion - Pinelang"},{"location":"latest/core/org.pinelang.ast.fbs/-signal-expr/validate-version/#validateversion","text":"fun validateVersion(): Unit","title":"validateVersion"},{"location":"latest/core/org.pinelang.core/","text":"core / org.pinelang.core Package org.pinelang.core \u00b6 Types \u00b6 Name Summary Allocator typealias Allocator = ( Int ) -> PineObject BaseSignal class BaseSignal : PineSignal ChildrenListPineProp open class ChildrenListPineProp : PineProp < MutableList < PineObject >>, Iterable < PineObject > CompileObjectMetaData data class CompileObjectMetaData CustomFlatBufferBuilder class CustomFlatBufferBuilder : FlatBufferBuilder MetaProp data class MetaProp PineBoolean class PineBoolean : PineExpr < Boolean > PineCallable class PineCallable<T> : PineExpr <T> PineCompiler class PineCompiler PineConnection data class PineConnection PineContext class PineContext PineDouble class PineDouble : PineNumber < Double >, PineExpr < Double > PineEngine class PineEngine PineExpr open class PineExpr<T> PineInt class PineInt : PineNumber < Int >, PineExpr < Int > PineList class PineList : PineExpr < List <*>> PineMetaObject class PineMetaObject PineNumber interface PineNumber<T> PineObject abstract class PineObject PineProp open class PineProp<T> : PineSignal , ReadWriteProperty < PineObject , T> PineSignal interface PineSignal PineString class PineString : PineExpr < String > PineType data class PineType Slot typealias Slot = () -> Unit Exceptions \u00b6 Name Summary BinaryOpException class BinaryOpException : PineScriptException BinaryOpNotSupportedPineScriptException class BinaryOpNotSupportedPineScriptException : PineScriptException PineScriptException open class PineScriptException : RuntimeException PineScriptParseException class PineScriptParseException : RuntimeException Extensions for External Classes \u00b6 Name Summary kotlin.UByte Functions \u00b6 Name Summary boolExpr fun boolExpr(calculation: () -> Boolean ): PineBoolean boolProp fun PineObject .boolProp(kProp: KProperty < Boolean >, initialValue: Boolean = false): PineProp < Boolean > doubleExpr fun doubleExpr(calculation: () -> Double ): PineDouble doubleProp fun PineObject .doubleProp(kProp: KProperty < Double >, initialValue: Double = 0.0): PineProp < Double > intExpr fun intExpr(value: Int ): PineInt intProp fun PineObject .intProp(kProp: KProperty < Int >, initialValue: Int = 0): PineProp < Int > registerProp fun <T> PineObject .registerProp(prop: PineProp <T>): PineProp <T> stringExpr fun stringExpr(calculation: () -> String ): PineString stringProp fun PineObject .stringProp(kProp: KProperty < String >, initialValue: String = \"\"): PineProp < String >","title":"Package org.pinelang.core - Pinelang"},{"location":"latest/core/org.pinelang.core/#package-orgpinelangcore","text":"","title":"Package org.pinelang.core"},{"location":"latest/core/org.pinelang.core/#types","text":"Name Summary Allocator typealias Allocator = ( Int ) -> PineObject BaseSignal class BaseSignal : PineSignal ChildrenListPineProp open class ChildrenListPineProp : PineProp < MutableList < PineObject >>, Iterable < PineObject > CompileObjectMetaData data class CompileObjectMetaData CustomFlatBufferBuilder class CustomFlatBufferBuilder : FlatBufferBuilder MetaProp data class MetaProp PineBoolean class PineBoolean : PineExpr < Boolean > PineCallable class PineCallable<T> : PineExpr <T> PineCompiler class PineCompiler PineConnection data class PineConnection PineContext class PineContext PineDouble class PineDouble : PineNumber < Double >, PineExpr < Double > PineEngine class PineEngine PineExpr open class PineExpr<T> PineInt class PineInt : PineNumber < Int >, PineExpr < Int > PineList class PineList : PineExpr < List <*>> PineMetaObject class PineMetaObject PineNumber interface PineNumber<T> PineObject abstract class PineObject PineProp open class PineProp<T> : PineSignal , ReadWriteProperty < PineObject , T> PineSignal interface PineSignal PineString class PineString : PineExpr < String > PineType data class PineType Slot typealias Slot = () -> Unit","title":"Types"},{"location":"latest/core/org.pinelang.core/#exceptions","text":"Name Summary BinaryOpException class BinaryOpException : PineScriptException BinaryOpNotSupportedPineScriptException class BinaryOpNotSupportedPineScriptException : PineScriptException PineScriptException open class PineScriptException : RuntimeException PineScriptParseException class PineScriptParseException : RuntimeException","title":"Exceptions"},{"location":"latest/core/org.pinelang.core/#extensions-for-external-classes","text":"Name Summary kotlin.UByte","title":"Extensions for External Classes"},{"location":"latest/core/org.pinelang.core/#functions","text":"Name Summary boolExpr fun boolExpr(calculation: () -> Boolean ): PineBoolean boolProp fun PineObject .boolProp(kProp: KProperty < Boolean >, initialValue: Boolean = false): PineProp < Boolean > doubleExpr fun doubleExpr(calculation: () -> Double ): PineDouble doubleProp fun PineObject .doubleProp(kProp: KProperty < Double >, initialValue: Double = 0.0): PineProp < Double > intExpr fun intExpr(value: Int ): PineInt intProp fun PineObject .intProp(kProp: KProperty < Int >, initialValue: Int = 0): PineProp < Int > registerProp fun <T> PineObject .registerProp(prop: PineProp <T>): PineProp <T> stringExpr fun stringExpr(calculation: () -> String ): PineString stringProp fun PineObject .stringProp(kProp: KProperty < String >, initialValue: String = \"\"): PineProp < String >","title":"Functions"},{"location":"latest/core/org.pinelang.core/-allocator/","text":"core / org.pinelang.core / Allocator Allocator \u00b6 typealias Allocator = ( Int ) -> PineObject","title":"Allocator - Pinelang"},{"location":"latest/core/org.pinelang.core/-allocator/#allocator","text":"typealias Allocator = ( Int ) -> PineObject","title":"Allocator"},{"location":"latest/core/org.pinelang.core/-slot/","text":"core / org.pinelang.core / Slot Slot \u00b6 typealias Slot = () -> Unit","title":"Slot - Pinelang"},{"location":"latest/core/org.pinelang.core/-slot/#slot","text":"typealias Slot = () -> Unit","title":"Slot"},{"location":"latest/core/org.pinelang.core/bool-expr/","text":"core / org.pinelang.core / boolExpr boolExpr \u00b6 fun boolExpr(calculation: () -> Boolean ): PineBoolean","title":"boolExpr - Pinelang"},{"location":"latest/core/org.pinelang.core/bool-expr/#boolexpr","text":"fun boolExpr(calculation: () -> Boolean ): PineBoolean","title":"boolExpr"},{"location":"latest/core/org.pinelang.core/bool-prop/","text":"core / org.pinelang.core / boolProp boolProp \u00b6 fun PineObject .boolProp(kProp: KProperty < Boolean >, initialValue: Boolean = false): PineProp < Boolean >","title":"boolProp - Pinelang"},{"location":"latest/core/org.pinelang.core/bool-prop/#boolprop","text":"fun PineObject .boolProp(kProp: KProperty < Boolean >, initialValue: Boolean = false): PineProp < Boolean >","title":"boolProp"},{"location":"latest/core/org.pinelang.core/double-expr/","text":"core / org.pinelang.core / doubleExpr doubleExpr \u00b6 fun doubleExpr(calculation: () -> Double ): PineDouble","title":"doubleExpr - Pinelang"},{"location":"latest/core/org.pinelang.core/double-expr/#doubleexpr","text":"fun doubleExpr(calculation: () -> Double ): PineDouble","title":"doubleExpr"},{"location":"latest/core/org.pinelang.core/double-prop/","text":"core / org.pinelang.core / doubleProp doubleProp \u00b6 fun PineObject .doubleProp(kProp: KProperty < Double >, initialValue: Double = 0.0): PineProp < Double >","title":"doubleProp - Pinelang"},{"location":"latest/core/org.pinelang.core/double-prop/#doubleprop","text":"fun PineObject .doubleProp(kProp: KProperty < Double >, initialValue: Double = 0.0): PineProp < Double >","title":"doubleProp"},{"location":"latest/core/org.pinelang.core/int-expr/","text":"core / org.pinelang.core / intExpr intExpr \u00b6 fun intExpr(value: Int ): PineInt","title":"intExpr - Pinelang"},{"location":"latest/core/org.pinelang.core/int-expr/#intexpr","text":"fun intExpr(value: Int ): PineInt","title":"intExpr"},{"location":"latest/core/org.pinelang.core/int-prop/","text":"core / org.pinelang.core / intProp intProp \u00b6 fun PineObject .intProp(kProp: KProperty < Int >, initialValue: Int = 0): PineProp < Int >","title":"intProp - Pinelang"},{"location":"latest/core/org.pinelang.core/int-prop/#intprop","text":"fun PineObject .intProp(kProp: KProperty < Int >, initialValue: Int = 0): PineProp < Int >","title":"intProp"},{"location":"latest/core/org.pinelang.core/register-prop/","text":"core / org.pinelang.core / registerProp registerProp \u00b6 fun <T> PineObject .registerProp(prop: PineProp <T>): PineProp <T>","title":"registerProp - Pinelang"},{"location":"latest/core/org.pinelang.core/register-prop/#registerprop","text":"fun <T> PineObject .registerProp(prop: PineProp <T>): PineProp <T>","title":"registerProp"},{"location":"latest/core/org.pinelang.core/string-expr/","text":"core / org.pinelang.core / stringExpr stringExpr \u00b6 fun stringExpr(calculation: () -> String ): PineString","title":"stringExpr - Pinelang"},{"location":"latest/core/org.pinelang.core/string-expr/#stringexpr","text":"fun stringExpr(calculation: () -> String ): PineString","title":"stringExpr"},{"location":"latest/core/org.pinelang.core/string-prop/","text":"core / org.pinelang.core / stringProp stringProp \u00b6 fun PineObject .stringProp(kProp: KProperty < String >, initialValue: String = \"\"): PineProp < String >","title":"stringProp - Pinelang"},{"location":"latest/core/org.pinelang.core/string-prop/#stringprop","text":"fun PineObject .stringProp(kProp: KProperty < String >, initialValue: String = \"\"): PineProp < String >","title":"stringProp"},{"location":"latest/core/org.pinelang.core/-base-signal/","text":"core / org.pinelang.core / BaseSignal BaseSignal \u00b6 class BaseSignal : PineSignal Constructors \u00b6 Name Summary <init> BaseSignal(pineObject: PineObject , name: String ) Properties \u00b6 Name Summary name val name: String Functions \u00b6 Name Summary getPineObject fun getPineObject(): PineObject getScriptName fun getScriptName(): String","title":"BaseSignal - Pinelang"},{"location":"latest/core/org.pinelang.core/-base-signal/#basesignal","text":"class BaseSignal : PineSignal","title":"BaseSignal"},{"location":"latest/core/org.pinelang.core/-base-signal/#constructors","text":"Name Summary <init> BaseSignal(pineObject: PineObject , name: String )","title":"Constructors"},{"location":"latest/core/org.pinelang.core/-base-signal/#properties","text":"Name Summary name val name: String","title":"Properties"},{"location":"latest/core/org.pinelang.core/-base-signal/#functions","text":"Name Summary getPineObject fun getPineObject(): PineObject getScriptName fun getScriptName(): String","title":"Functions"},{"location":"latest/core/org.pinelang.core/-base-signal/-init-/","text":"core / org.pinelang.core / BaseSignal / <init> <init> \u00b6 BaseSignal(pineObject: PineObject , name: String )","title":" init "},{"location":"latest/core/org.pinelang.core/-base-signal/-init-/#init","text":"BaseSignal(pineObject: PineObject , name: String )","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.core/-base-signal/get-pine-object/","text":"core / org.pinelang.core / BaseSignal / getPineObject getPineObject \u00b6 fun getPineObject(): PineObject","title":"getPineObject - Pinelang"},{"location":"latest/core/org.pinelang.core/-base-signal/get-pine-object/#getpineobject","text":"fun getPineObject(): PineObject","title":"getPineObject"},{"location":"latest/core/org.pinelang.core/-base-signal/get-script-name/","text":"core / org.pinelang.core / BaseSignal / getScriptName getScriptName \u00b6 fun getScriptName(): String","title":"getScriptName - Pinelang"},{"location":"latest/core/org.pinelang.core/-base-signal/get-script-name/#getscriptname","text":"fun getScriptName(): String","title":"getScriptName"},{"location":"latest/core/org.pinelang.core/-base-signal/name/","text":"core / org.pinelang.core / BaseSignal / name name \u00b6 val name: String","title":"name - Pinelang"},{"location":"latest/core/org.pinelang.core/-base-signal/name/#name","text":"val name: String","title":"name"},{"location":"latest/core/org.pinelang.core/-binary-op-exception/","text":"core / org.pinelang.core / BinaryOpException BinaryOpException \u00b6 class BinaryOpException : PineScriptException Constructors \u00b6 Name Summary <init> BinaryOpException(op: UByte , typeA: PineType , typeB: PineType )","title":"BinaryOpException - Pinelang"},{"location":"latest/core/org.pinelang.core/-binary-op-exception/#binaryopexception","text":"class BinaryOpException : PineScriptException","title":"BinaryOpException"},{"location":"latest/core/org.pinelang.core/-binary-op-exception/#constructors","text":"Name Summary <init> BinaryOpException(op: UByte , typeA: PineType , typeB: PineType )","title":"Constructors"},{"location":"latest/core/org.pinelang.core/-binary-op-exception/-init-/","text":"core / org.pinelang.core / BinaryOpException / <init> <init> \u00b6 BinaryOpException(op: UByte , typeA: PineType , typeB: PineType )","title":" init "},{"location":"latest/core/org.pinelang.core/-binary-op-exception/-init-/#init","text":"BinaryOpException(op: UByte , typeA: PineType , typeB: PineType )","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.core/-binary-op-not-supported-pine-script-exception/","text":"core / org.pinelang.core / BinaryOpNotSupportedPineScriptException BinaryOpNotSupportedPineScriptException \u00b6 class BinaryOpNotSupportedPineScriptException : PineScriptException Constructors \u00b6 Name Summary <init> BinaryOpNotSupportedPineScriptException(op: UByte , type: PineType )","title":"BinaryOpNotSupportedPineScriptException - Pinelang"},{"location":"latest/core/org.pinelang.core/-binary-op-not-supported-pine-script-exception/#binaryopnotsupportedpinescriptexception","text":"class BinaryOpNotSupportedPineScriptException : PineScriptException","title":"BinaryOpNotSupportedPineScriptException"},{"location":"latest/core/org.pinelang.core/-binary-op-not-supported-pine-script-exception/#constructors","text":"Name Summary <init> BinaryOpNotSupportedPineScriptException(op: UByte , type: PineType )","title":"Constructors"},{"location":"latest/core/org.pinelang.core/-binary-op-not-supported-pine-script-exception/-init-/","text":"core / org.pinelang.core / BinaryOpNotSupportedPineScriptException / <init> <init> \u00b6 BinaryOpNotSupportedPineScriptException(op: UByte , type: PineType )","title":" init "},{"location":"latest/core/org.pinelang.core/-binary-op-not-supported-pine-script-exception/-init-/#init","text":"BinaryOpNotSupportedPineScriptException(op: UByte , type: PineType )","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.core/-children-list-pine-prop/","text":"core / org.pinelang.core / ChildrenListPineProp ChildrenListPineProp \u00b6 open class ChildrenListPineProp : PineProp < MutableList < PineObject >>, Iterable < PineObject > Types \u00b6 Name Summary ListPinePropIterator inner class ListPinePropIterator : Iterator < PineObject > Constructors \u00b6 Name Summary <init> ChildrenListPineProp(pineObject: PineObject , kProp: KProperty <*>) Properties \u00b6 Name Summary props var props: MutableList < PineObject > Functions \u00b6 Name Summary add fun add(el: PineObject ): Boolean get fun get(pos: Int ): PineObject getPineObject open fun getPineObject(): PineObject getScriptName open fun getScriptName(): String getValue open operator fun getValue(thisRef: PineObject , property: KProperty <*>): MutableList < PineObject > iterator open fun iterator(): Iterator < PineObject > remove fun remove(el: PineObject ): Boolean","title":"ChildrenListPineProp - Pinelang"},{"location":"latest/core/org.pinelang.core/-children-list-pine-prop/#childrenlistpineprop","text":"open class ChildrenListPineProp : PineProp < MutableList < PineObject >>, Iterable < PineObject >","title":"ChildrenListPineProp"},{"location":"latest/core/org.pinelang.core/-children-list-pine-prop/#types","text":"Name Summary ListPinePropIterator inner class ListPinePropIterator : Iterator < PineObject >","title":"Types"},{"location":"latest/core/org.pinelang.core/-children-list-pine-prop/#constructors","text":"Name Summary <init> ChildrenListPineProp(pineObject: PineObject , kProp: KProperty <*>)","title":"Constructors"},{"location":"latest/core/org.pinelang.core/-children-list-pine-prop/#properties","text":"Name Summary props var props: MutableList < PineObject >","title":"Properties"},{"location":"latest/core/org.pinelang.core/-children-list-pine-prop/#functions","text":"Name Summary add fun add(el: PineObject ): Boolean get fun get(pos: Int ): PineObject getPineObject open fun getPineObject(): PineObject getScriptName open fun getScriptName(): String getValue open operator fun getValue(thisRef: PineObject , property: KProperty <*>): MutableList < PineObject > iterator open fun iterator(): Iterator < PineObject > remove fun remove(el: PineObject ): Boolean","title":"Functions"},{"location":"latest/core/org.pinelang.core/-children-list-pine-prop/-init-/","text":"core / org.pinelang.core / ChildrenListPineProp / <init> <init> \u00b6 ChildrenListPineProp(pineObject: PineObject , kProp: KProperty <*>)","title":" init "},{"location":"latest/core/org.pinelang.core/-children-list-pine-prop/-init-/#init","text":"ChildrenListPineProp(pineObject: PineObject , kProp: KProperty <*>)","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.core/-children-list-pine-prop/add/","text":"core / org.pinelang.core / ChildrenListPineProp / add add \u00b6 fun add(el: PineObject ): Boolean","title":"add - Pinelang"},{"location":"latest/core/org.pinelang.core/-children-list-pine-prop/add/#add","text":"fun add(el: PineObject ): Boolean","title":"add"},{"location":"latest/core/org.pinelang.core/-children-list-pine-prop/get-pine-object/","text":"core / org.pinelang.core / ChildrenListPineProp / getPineObject getPineObject \u00b6 open fun getPineObject(): PineObject","title":"getPineObject - Pinelang"},{"location":"latest/core/org.pinelang.core/-children-list-pine-prop/get-pine-object/#getpineobject","text":"open fun getPineObject(): PineObject","title":"getPineObject"},{"location":"latest/core/org.pinelang.core/-children-list-pine-prop/get-script-name/","text":"core / org.pinelang.core / ChildrenListPineProp / getScriptName getScriptName \u00b6 open fun getScriptName(): String","title":"getScriptName - Pinelang"},{"location":"latest/core/org.pinelang.core/-children-list-pine-prop/get-script-name/#getscriptname","text":"open fun getScriptName(): String","title":"getScriptName"},{"location":"latest/core/org.pinelang.core/-children-list-pine-prop/get-value/","text":"core / org.pinelang.core / ChildrenListPineProp / getValue getValue \u00b6 open operator fun getValue(thisRef: PineObject , property: KProperty <*>): MutableList < PineObject >","title":"getValue - Pinelang"},{"location":"latest/core/org.pinelang.core/-children-list-pine-prop/get-value/#getvalue","text":"open operator fun getValue(thisRef: PineObject , property: KProperty <*>): MutableList < PineObject >","title":"getValue"},{"location":"latest/core/org.pinelang.core/-children-list-pine-prop/get/","text":"core / org.pinelang.core / ChildrenListPineProp / get get \u00b6 fun get(pos: Int ): PineObject","title":"get - Pinelang"},{"location":"latest/core/org.pinelang.core/-children-list-pine-prop/get/#get","text":"fun get(pos: Int ): PineObject","title":"get"},{"location":"latest/core/org.pinelang.core/-children-list-pine-prop/iterator/","text":"core / org.pinelang.core / ChildrenListPineProp / iterator iterator \u00b6 open fun iterator(): Iterator < PineObject >","title":"iterator - Pinelang"},{"location":"latest/core/org.pinelang.core/-children-list-pine-prop/iterator/#iterator","text":"open fun iterator(): Iterator < PineObject >","title":"iterator"},{"location":"latest/core/org.pinelang.core/-children-list-pine-prop/props/","text":"core / org.pinelang.core / ChildrenListPineProp / props props \u00b6 var props: MutableList < PineObject >","title":"props - Pinelang"},{"location":"latest/core/org.pinelang.core/-children-list-pine-prop/props/#props","text":"var props: MutableList < PineObject >","title":"props"},{"location":"latest/core/org.pinelang.core/-children-list-pine-prop/remove/","text":"core / org.pinelang.core / ChildrenListPineProp / remove remove \u00b6 fun remove(el: PineObject ): Boolean","title":"remove - Pinelang"},{"location":"latest/core/org.pinelang.core/-children-list-pine-prop/remove/#remove","text":"fun remove(el: PineObject ): Boolean","title":"remove"},{"location":"latest/core/org.pinelang.core/-children-list-pine-prop/-list-pine-prop-iterator/","text":"core / org.pinelang.core / ChildrenListPineProp / ListPinePropIterator ListPinePropIterator \u00b6 inner class ListPinePropIterator : Iterator < PineObject > Constructors \u00b6 Name Summary <init> ListPinePropIterator() Functions \u00b6 Name Summary hasNext fun hasNext(): Boolean next fun next(): PineObject","title":"ListPinePropIterator - Pinelang"},{"location":"latest/core/org.pinelang.core/-children-list-pine-prop/-list-pine-prop-iterator/#listpinepropiterator","text":"inner class ListPinePropIterator : Iterator < PineObject >","title":"ListPinePropIterator"},{"location":"latest/core/org.pinelang.core/-children-list-pine-prop/-list-pine-prop-iterator/#constructors","text":"Name Summary <init> ListPinePropIterator()","title":"Constructors"},{"location":"latest/core/org.pinelang.core/-children-list-pine-prop/-list-pine-prop-iterator/#functions","text":"Name Summary hasNext fun hasNext(): Boolean next fun next(): PineObject","title":"Functions"},{"location":"latest/core/org.pinelang.core/-children-list-pine-prop/-list-pine-prop-iterator/-init-/","text":"core / org.pinelang.core / ChildrenListPineProp / ListPinePropIterator / <init> <init> \u00b6 ListPinePropIterator()","title":" init "},{"location":"latest/core/org.pinelang.core/-children-list-pine-prop/-list-pine-prop-iterator/-init-/#init","text":"ListPinePropIterator()","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.core/-children-list-pine-prop/-list-pine-prop-iterator/has-next/","text":"core / org.pinelang.core / ChildrenListPineProp / ListPinePropIterator / hasNext hasNext \u00b6 fun hasNext(): Boolean","title":"hasNext - Pinelang"},{"location":"latest/core/org.pinelang.core/-children-list-pine-prop/-list-pine-prop-iterator/has-next/#hasnext","text":"fun hasNext(): Boolean","title":"hasNext"},{"location":"latest/core/org.pinelang.core/-children-list-pine-prop/-list-pine-prop-iterator/next/","text":"core / org.pinelang.core / ChildrenListPineProp / ListPinePropIterator / next next \u00b6 fun next(): PineObject","title":"next - Pinelang"},{"location":"latest/core/org.pinelang.core/-children-list-pine-prop/-list-pine-prop-iterator/next/#next","text":"fun next(): PineObject","title":"next"},{"location":"latest/core/org.pinelang.core/-compile-object-meta-data/","text":"core / org.pinelang.core / CompileObjectMetaData CompileObjectMetaData \u00b6 data class CompileObjectMetaData Constructors \u00b6 Name Summary <init> CompileObjectMetaData(typeIdx: Int , objId: Int , objName: String ) Properties \u00b6 Name Summary objId val objId: Int objName val objName: String typeIdx val typeIdx: Int","title":"CompileObjectMetaData - Pinelang"},{"location":"latest/core/org.pinelang.core/-compile-object-meta-data/#compileobjectmetadata","text":"data class CompileObjectMetaData","title":"CompileObjectMetaData"},{"location":"latest/core/org.pinelang.core/-compile-object-meta-data/#constructors","text":"Name Summary <init> CompileObjectMetaData(typeIdx: Int , objId: Int , objName: String )","title":"Constructors"},{"location":"latest/core/org.pinelang.core/-compile-object-meta-data/#properties","text":"Name Summary objId val objId: Int objName val objName: String typeIdx val typeIdx: Int","title":"Properties"},{"location":"latest/core/org.pinelang.core/-compile-object-meta-data/-init-/","text":"core / org.pinelang.core / CompileObjectMetaData / <init> <init> \u00b6 CompileObjectMetaData(typeIdx: Int , objId: Int , objName: String )","title":" init "},{"location":"latest/core/org.pinelang.core/-compile-object-meta-data/-init-/#init","text":"CompileObjectMetaData(typeIdx: Int , objId: Int , objName: String )","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.core/-compile-object-meta-data/obj-id/","text":"core / org.pinelang.core / CompileObjectMetaData / objId objId \u00b6 val objId: Int","title":"objId - Pinelang"},{"location":"latest/core/org.pinelang.core/-compile-object-meta-data/obj-id/#objid","text":"val objId: Int","title":"objId"},{"location":"latest/core/org.pinelang.core/-compile-object-meta-data/obj-name/","text":"core / org.pinelang.core / CompileObjectMetaData / objName objName \u00b6 val objName: String","title":"objName - Pinelang"},{"location":"latest/core/org.pinelang.core/-compile-object-meta-data/obj-name/#objname","text":"val objName: String","title":"objName"},{"location":"latest/core/org.pinelang.core/-compile-object-meta-data/type-idx/","text":"core / org.pinelang.core / CompileObjectMetaData / typeIdx typeIdx \u00b6 val typeIdx: Int","title":"typeIdx - Pinelang"},{"location":"latest/core/org.pinelang.core/-compile-object-meta-data/type-idx/#typeidx","text":"val typeIdx: Int","title":"typeIdx"},{"location":"latest/core/org.pinelang.core/-custom-flat-buffer-builder/","text":"core / org.pinelang.core / CustomFlatBufferBuilder CustomFlatBufferBuilder \u00b6 class CustomFlatBufferBuilder : FlatBufferBuilder Constructors \u00b6 Name Summary <init> CustomFlatBufferBuilder(initialSize: Int ) Functions \u00b6 Name Summary clear fun clear(): Unit createString fun createString(s: CharSequence ?): Int","title":"CustomFlatBufferBuilder - Pinelang"},{"location":"latest/core/org.pinelang.core/-custom-flat-buffer-builder/#customflatbufferbuilder","text":"class CustomFlatBufferBuilder : FlatBufferBuilder","title":"CustomFlatBufferBuilder"},{"location":"latest/core/org.pinelang.core/-custom-flat-buffer-builder/#constructors","text":"Name Summary <init> CustomFlatBufferBuilder(initialSize: Int )","title":"Constructors"},{"location":"latest/core/org.pinelang.core/-custom-flat-buffer-builder/#functions","text":"Name Summary clear fun clear(): Unit createString fun createString(s: CharSequence ?): Int","title":"Functions"},{"location":"latest/core/org.pinelang.core/-custom-flat-buffer-builder/-init-/","text":"core / org.pinelang.core / CustomFlatBufferBuilder / <init> <init> \u00b6 CustomFlatBufferBuilder(initialSize: Int )","title":" init "},{"location":"latest/core/org.pinelang.core/-custom-flat-buffer-builder/-init-/#init","text":"CustomFlatBufferBuilder(initialSize: Int )","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.core/-custom-flat-buffer-builder/clear/","text":"core / org.pinelang.core / CustomFlatBufferBuilder / clear clear \u00b6 fun clear(): Unit","title":"clear - Pinelang"},{"location":"latest/core/org.pinelang.core/-custom-flat-buffer-builder/clear/#clear","text":"fun clear(): Unit","title":"clear"},{"location":"latest/core/org.pinelang.core/-custom-flat-buffer-builder/create-string/","text":"core / org.pinelang.core / CustomFlatBufferBuilder / createString createString \u00b6 fun createString(s: CharSequence ?): Int","title":"createString - Pinelang"},{"location":"latest/core/org.pinelang.core/-custom-flat-buffer-builder/create-string/#createstring","text":"fun createString(s: CharSequence ?): Int","title":"createString"},{"location":"latest/core/org.pinelang.core/-meta-prop/","text":"core / org.pinelang.core / MetaProp MetaProp \u00b6 data class MetaProp Constructors \u00b6 Name Summary <init> MetaProp(name: String , type: PineType ) Properties \u00b6 Name Summary name val name: String type val type: PineType","title":"MetaProp - Pinelang"},{"location":"latest/core/org.pinelang.core/-meta-prop/#metaprop","text":"data class MetaProp","title":"MetaProp"},{"location":"latest/core/org.pinelang.core/-meta-prop/#constructors","text":"Name Summary <init> MetaProp(name: String , type: PineType )","title":"Constructors"},{"location":"latest/core/org.pinelang.core/-meta-prop/#properties","text":"Name Summary name val name: String type val type: PineType","title":"Properties"},{"location":"latest/core/org.pinelang.core/-meta-prop/-init-/","text":"core / org.pinelang.core / MetaProp / <init> <init> \u00b6 MetaProp(name: String , type: PineType )","title":" init "},{"location":"latest/core/org.pinelang.core/-meta-prop/-init-/#init","text":"MetaProp(name: String , type: PineType )","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.core/-meta-prop/name/","text":"core / org.pinelang.core / MetaProp / name name \u00b6 val name: String","title":"name - Pinelang"},{"location":"latest/core/org.pinelang.core/-meta-prop/name/#name","text":"val name: String","title":"name"},{"location":"latest/core/org.pinelang.core/-meta-prop/type/","text":"core / org.pinelang.core / MetaProp / type type \u00b6 val type: PineType","title":"type - Pinelang"},{"location":"latest/core/org.pinelang.core/-meta-prop/type/#type","text":"val type: PineType","title":"type"},{"location":"latest/core/org.pinelang.core/-pine-boolean/","text":"core / org.pinelang.core / PineBoolean PineBoolean \u00b6 class PineBoolean : PineExpr < Boolean > Constructors \u00b6 Name Summary <init> PineBoolean(value: Boolean ) PineBoolean(vararg refs: PineExpr <*>, calculation: () -> Boolean ) Functions \u00b6 Name Summary and infix fun and(other: PineExpr <*>): PineBoolean equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int not operator fun not(): PineBoolean or infix fun or(other: PineExpr <*>): PineBoolean","title":"PineBoolean - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-boolean/#pineboolean","text":"class PineBoolean : PineExpr < Boolean >","title":"PineBoolean"},{"location":"latest/core/org.pinelang.core/-pine-boolean/#constructors","text":"Name Summary <init> PineBoolean(value: Boolean ) PineBoolean(vararg refs: PineExpr <*>, calculation: () -> Boolean )","title":"Constructors"},{"location":"latest/core/org.pinelang.core/-pine-boolean/#functions","text":"Name Summary and infix fun and(other: PineExpr <*>): PineBoolean equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int not operator fun not(): PineBoolean or infix fun or(other: PineExpr <*>): PineBoolean","title":"Functions"},{"location":"latest/core/org.pinelang.core/-pine-boolean/-init-/","text":"core / org.pinelang.core / PineBoolean / <init> <init> \u00b6 PineBoolean(value: Boolean ) PineBoolean(vararg refs: PineExpr <*>, calculation: () -> Boolean )","title":" init "},{"location":"latest/core/org.pinelang.core/-pine-boolean/-init-/#init","text":"PineBoolean(value: Boolean ) PineBoolean(vararg refs: PineExpr <*>, calculation: () -> Boolean )","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.core/-pine-boolean/and/","text":"core / org.pinelang.core / PineBoolean / and and \u00b6 infix fun and(other: PineExpr <*>): PineBoolean","title":"and - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-boolean/and/#and","text":"infix fun and(other: PineExpr <*>): PineBoolean","title":"and"},{"location":"latest/core/org.pinelang.core/-pine-boolean/equals/","text":"core / org.pinelang.core / PineBoolean / equals equals \u00b6 fun equals(other: Any ?): Boolean","title":"equals - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-boolean/equals/#equals","text":"fun equals(other: Any ?): Boolean","title":"equals"},{"location":"latest/core/org.pinelang.core/-pine-boolean/hash-code/","text":"core / org.pinelang.core / PineBoolean / hashCode hashCode \u00b6 fun hashCode(): Int","title":"hashCode - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-boolean/hash-code/#hashcode","text":"fun hashCode(): Int","title":"hashCode"},{"location":"latest/core/org.pinelang.core/-pine-boolean/not/","text":"core / org.pinelang.core / PineBoolean / not not \u00b6 operator fun not(): PineBoolean","title":"not - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-boolean/not/#not","text":"operator fun not(): PineBoolean","title":"not"},{"location":"latest/core/org.pinelang.core/-pine-boolean/or/","text":"core / org.pinelang.core / PineBoolean / or or \u00b6 infix fun or(other: PineExpr <*>): PineBoolean","title":"or - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-boolean/or/#or","text":"infix fun or(other: PineExpr <*>): PineBoolean","title":"or"},{"location":"latest/core/org.pinelang.core/-pine-callable/","text":"core / org.pinelang.core / PineCallable PineCallable \u00b6 class PineCallable<T> : PineExpr <T> Constructors \u00b6 Name Summary <init> PineCallable(returnType: PineType , name: String , vararg refs: PineExpr <*>, calculation: () -> T) Properties \u00b6 Name Summary calculation val calculation: () -> T name val name: String returnType val returnType: PineType Functions \u00b6 Name Summary isFunction fun isFunction(): Boolean","title":"PineCallable - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-callable/#pinecallable","text":"class PineCallable<T> : PineExpr <T>","title":"PineCallable"},{"location":"latest/core/org.pinelang.core/-pine-callable/#constructors","text":"Name Summary <init> PineCallable(returnType: PineType , name: String , vararg refs: PineExpr <*>, calculation: () -> T)","title":"Constructors"},{"location":"latest/core/org.pinelang.core/-pine-callable/#properties","text":"Name Summary calculation val calculation: () -> T name val name: String returnType val returnType: PineType","title":"Properties"},{"location":"latest/core/org.pinelang.core/-pine-callable/#functions","text":"Name Summary isFunction fun isFunction(): Boolean","title":"Functions"},{"location":"latest/core/org.pinelang.core/-pine-callable/-init-/","text":"core / org.pinelang.core / PineCallable / <init> <init> \u00b6 PineCallable(returnType: PineType , name: String , vararg refs: PineExpr <*>, calculation: () -> T)","title":" init "},{"location":"latest/core/org.pinelang.core/-pine-callable/-init-/#init","text":"PineCallable(returnType: PineType , name: String , vararg refs: PineExpr <*>, calculation: () -> T)","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.core/-pine-callable/calculation/","text":"core / org.pinelang.core / PineCallable / calculation calculation \u00b6 val calculation: () -> T","title":"calculation - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-callable/calculation/#calculation","text":"val calculation: () -> T","title":"calculation"},{"location":"latest/core/org.pinelang.core/-pine-callable/is-function/","text":"core / org.pinelang.core / PineCallable / isFunction isFunction \u00b6 fun isFunction(): Boolean","title":"isFunction - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-callable/is-function/#isfunction","text":"fun isFunction(): Boolean","title":"isFunction"},{"location":"latest/core/org.pinelang.core/-pine-callable/name/","text":"core / org.pinelang.core / PineCallable / name name \u00b6 val name: String","title":"name - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-callable/name/#name","text":"val name: String","title":"name"},{"location":"latest/core/org.pinelang.core/-pine-callable/return-type/","text":"core / org.pinelang.core / PineCallable / returnType returnType \u00b6 val returnType: PineType","title":"returnType - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-callable/return-type/#returntype","text":"val returnType: PineType","title":"returnType"},{"location":"latest/core/org.pinelang.core/-pine-compiler/","text":"core / org.pinelang.core / PineCompiler PineCompiler \u00b6 @ExperimentalUnsignedTypes class PineCompiler Properties \u00b6 Name Summary flatBuilder val flatBuilder: CustomFlatBufferBuilder types val types: IndexedMap < PineMetaObject > Functions \u00b6 Name Summary compile fun compile(unit: String , keepDebugSymbols: Boolean = false): Program generateObjectId fun generateObjectId(typeId: Int , objectIdentifier: String ?): Int objectMetaData fun objectMetaData(objectIdentifier: String ): CompileObjectMetaData ?","title":"PineCompiler - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-compiler/#pinecompiler","text":"@ExperimentalUnsignedTypes class PineCompiler","title":"PineCompiler"},{"location":"latest/core/org.pinelang.core/-pine-compiler/#properties","text":"Name Summary flatBuilder val flatBuilder: CustomFlatBufferBuilder types val types: IndexedMap < PineMetaObject >","title":"Properties"},{"location":"latest/core/org.pinelang.core/-pine-compiler/#functions","text":"Name Summary compile fun compile(unit: String , keepDebugSymbols: Boolean = false): Program generateObjectId fun generateObjectId(typeId: Int , objectIdentifier: String ?): Int objectMetaData fun objectMetaData(objectIdentifier: String ): CompileObjectMetaData ?","title":"Functions"},{"location":"latest/core/org.pinelang.core/-pine-compiler/compile/","text":"core / org.pinelang.core / PineCompiler / compile compile \u00b6 fun compile(unit: String , keepDebugSymbols: Boolean = false): Program","title":"compile - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-compiler/compile/#compile","text":"fun compile(unit: String , keepDebugSymbols: Boolean = false): Program","title":"compile"},{"location":"latest/core/org.pinelang.core/-pine-compiler/flat-builder/","text":"core / org.pinelang.core / PineCompiler / flatBuilder flatBuilder \u00b6 val flatBuilder: CustomFlatBufferBuilder","title":"flatBuilder - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-compiler/flat-builder/#flatbuilder","text":"val flatBuilder: CustomFlatBufferBuilder","title":"flatBuilder"},{"location":"latest/core/org.pinelang.core/-pine-compiler/generate-object-id/","text":"core / org.pinelang.core / PineCompiler / generateObjectId generateObjectId \u00b6 fun generateObjectId(typeId: Int , objectIdentifier: String ?): Int","title":"generateObjectId - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-compiler/generate-object-id/#generateobjectid","text":"fun generateObjectId(typeId: Int , objectIdentifier: String ?): Int","title":"generateObjectId"},{"location":"latest/core/org.pinelang.core/-pine-compiler/object-meta-data/","text":"core / org.pinelang.core / PineCompiler / objectMetaData objectMetaData \u00b6 fun objectMetaData(objectIdentifier: String ): CompileObjectMetaData ?","title":"objectMetaData - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-compiler/object-meta-data/#objectmetadata","text":"fun objectMetaData(objectIdentifier: String ): CompileObjectMetaData ?","title":"objectMetaData"},{"location":"latest/core/org.pinelang.core/-pine-compiler/types/","text":"core / org.pinelang.core / PineCompiler / types types \u00b6 val types: IndexedMap < PineMetaObject >","title":"types - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-compiler/types/#types","text":"val types: IndexedMap < PineMetaObject >","title":"types"},{"location":"latest/core/org.pinelang.core/-pine-connection/","text":"core / org.pinelang.core / PineConnection PineConnection \u00b6 data class PineConnection Constructors \u00b6 Name Summary <init> PineConnection(signalIdx: Int , slot: Slot ) Properties \u00b6 Name Summary signalIdx val signalIdx: Int slot val slot: Slot","title":"PineConnection - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-connection/#pineconnection","text":"data class PineConnection","title":"PineConnection"},{"location":"latest/core/org.pinelang.core/-pine-connection/#constructors","text":"Name Summary <init> PineConnection(signalIdx: Int , slot: Slot )","title":"Constructors"},{"location":"latest/core/org.pinelang.core/-pine-connection/#properties","text":"Name Summary signalIdx val signalIdx: Int slot val slot: Slot","title":"Properties"},{"location":"latest/core/org.pinelang.core/-pine-connection/-init-/","text":"core / org.pinelang.core / PineConnection / <init> <init> \u00b6 PineConnection(signalIdx: Int , slot: Slot )","title":" init "},{"location":"latest/core/org.pinelang.core/-pine-connection/-init-/#init","text":"PineConnection(signalIdx: Int , slot: Slot )","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.core/-pine-connection/signal-idx/","text":"core / org.pinelang.core / PineConnection / signalIdx signalIdx \u00b6 val signalIdx: Int","title":"signalIdx - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-connection/signal-idx/#signalidx","text":"val signalIdx: Int","title":"signalIdx"},{"location":"latest/core/org.pinelang.core/-pine-connection/slot/","text":"core / org.pinelang.core / PineConnection / slot slot \u00b6 val slot: Slot","title":"slot - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-connection/slot/#slot","text":"val slot: Slot","title":"slot"},{"location":"latest/core/org.pinelang.core/-pine-context/","text":"core / org.pinelang.core / PineContext PineContext \u00b6 class PineContext Constructors \u00b6 Name Summary <init> PineContext() Properties \u00b6 Name Summary refs val refs: HashMap < Int , PineObject > Functions \u00b6 Name Summary clear fun clear(): Unit get operator fun get(id: Int ): PineObject ? registerObject fun registerObject(id: Int , obj: PineObject ): Unit","title":"PineContext - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-context/#pinecontext","text":"class PineContext","title":"PineContext"},{"location":"latest/core/org.pinelang.core/-pine-context/#constructors","text":"Name Summary <init> PineContext()","title":"Constructors"},{"location":"latest/core/org.pinelang.core/-pine-context/#properties","text":"Name Summary refs val refs: HashMap < Int , PineObject >","title":"Properties"},{"location":"latest/core/org.pinelang.core/-pine-context/#functions","text":"Name Summary clear fun clear(): Unit get operator fun get(id: Int ): PineObject ? registerObject fun registerObject(id: Int , obj: PineObject ): Unit","title":"Functions"},{"location":"latest/core/org.pinelang.core/-pine-context/-init-/","text":"core / org.pinelang.core / PineContext / <init> <init> \u00b6 PineContext()","title":" init "},{"location":"latest/core/org.pinelang.core/-pine-context/-init-/#init","text":"PineContext()","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.core/-pine-context/clear/","text":"core / org.pinelang.core / PineContext / clear clear \u00b6 fun clear(): Unit","title":"clear - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-context/clear/#clear","text":"fun clear(): Unit","title":"clear"},{"location":"latest/core/org.pinelang.core/-pine-context/get/","text":"core / org.pinelang.core / PineContext / get get \u00b6 operator fun get(id: Int ): PineObject ?","title":"get - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-context/get/#get","text":"operator fun get(id: Int ): PineObject ?","title":"get"},{"location":"latest/core/org.pinelang.core/-pine-context/refs/","text":"core / org.pinelang.core / PineContext / refs refs \u00b6 val refs: HashMap < Int , PineObject >","title":"refs - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-context/refs/#refs","text":"val refs: HashMap < Int , PineObject >","title":"refs"},{"location":"latest/core/org.pinelang.core/-pine-context/register-object/","text":"core / org.pinelang.core / PineContext / registerObject registerObject \u00b6 fun registerObject(id: Int , obj: PineObject ): Unit","title":"registerObject - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-context/register-object/#registerobject","text":"fun registerObject(id: Int , obj: PineObject ): Unit","title":"registerObject"},{"location":"latest/core/org.pinelang.core/-pine-double/","text":"core / org.pinelang.core / PineDouble PineDouble \u00b6 class PineDouble : PineNumber < Double >, PineExpr < Double > Constructors \u00b6 Name Summary <init> PineDouble(value: Double ) PineDouble(vararg refs: PineExpr <*>, calculation: () -> Double ) Functions \u00b6 Name Summary div fun div(other: PineExpr <*>): PineDouble equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int minus fun minus(other: PineExpr <*>): PineDouble plus fun plus(other: PineExpr <*>): PineDouble rem fun rem(other: PineExpr <*>): PineDouble times fun times(other: PineExpr <*>): PineDouble toDouble fun toDouble(): PineDouble toInt fun toInt(): PineExpr < Int >","title":"PineDouble - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-double/#pinedouble","text":"class PineDouble : PineNumber < Double >, PineExpr < Double >","title":"PineDouble"},{"location":"latest/core/org.pinelang.core/-pine-double/#constructors","text":"Name Summary <init> PineDouble(value: Double ) PineDouble(vararg refs: PineExpr <*>, calculation: () -> Double )","title":"Constructors"},{"location":"latest/core/org.pinelang.core/-pine-double/#functions","text":"Name Summary div fun div(other: PineExpr <*>): PineDouble equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int minus fun minus(other: PineExpr <*>): PineDouble plus fun plus(other: PineExpr <*>): PineDouble rem fun rem(other: PineExpr <*>): PineDouble times fun times(other: PineExpr <*>): PineDouble toDouble fun toDouble(): PineDouble toInt fun toInt(): PineExpr < Int >","title":"Functions"},{"location":"latest/core/org.pinelang.core/-pine-double/-init-/","text":"core / org.pinelang.core / PineDouble / <init> <init> \u00b6 PineDouble(value: Double ) PineDouble(vararg refs: PineExpr <*>, calculation: () -> Double )","title":" init "},{"location":"latest/core/org.pinelang.core/-pine-double/-init-/#init","text":"PineDouble(value: Double ) PineDouble(vararg refs: PineExpr <*>, calculation: () -> Double )","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.core/-pine-double/div/","text":"core / org.pinelang.core / PineDouble / div div \u00b6 fun div(other: PineExpr <*>): PineDouble","title":"div - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-double/div/#div","text":"fun div(other: PineExpr <*>): PineDouble","title":"div"},{"location":"latest/core/org.pinelang.core/-pine-double/equals/","text":"core / org.pinelang.core / PineDouble / equals equals \u00b6 fun equals(other: Any ?): Boolean","title":"equals - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-double/equals/#equals","text":"fun equals(other: Any ?): Boolean","title":"equals"},{"location":"latest/core/org.pinelang.core/-pine-double/hash-code/","text":"core / org.pinelang.core / PineDouble / hashCode hashCode \u00b6 fun hashCode(): Int","title":"hashCode - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-double/hash-code/#hashcode","text":"fun hashCode(): Int","title":"hashCode"},{"location":"latest/core/org.pinelang.core/-pine-double/minus/","text":"core / org.pinelang.core / PineDouble / minus minus \u00b6 fun minus(other: PineExpr <*>): PineDouble","title":"minus - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-double/minus/#minus","text":"fun minus(other: PineExpr <*>): PineDouble","title":"minus"},{"location":"latest/core/org.pinelang.core/-pine-double/plus/","text":"core / org.pinelang.core / PineDouble / plus plus \u00b6 fun plus(other: PineExpr <*>): PineDouble","title":"plus - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-double/plus/#plus","text":"fun plus(other: PineExpr <*>): PineDouble","title":"plus"},{"location":"latest/core/org.pinelang.core/-pine-double/rem/","text":"core / org.pinelang.core / PineDouble / rem rem \u00b6 fun rem(other: PineExpr <*>): PineDouble","title":"rem - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-double/rem/#rem","text":"fun rem(other: PineExpr <*>): PineDouble","title":"rem"},{"location":"latest/core/org.pinelang.core/-pine-double/times/","text":"core / org.pinelang.core / PineDouble / times times \u00b6 fun times(other: PineExpr <*>): PineDouble","title":"times - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-double/times/#times","text":"fun times(other: PineExpr <*>): PineDouble","title":"times"},{"location":"latest/core/org.pinelang.core/-pine-double/to-double/","text":"core / org.pinelang.core / PineDouble / toDouble toDouble \u00b6 fun toDouble(): PineDouble","title":"toDouble - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-double/to-double/#todouble","text":"fun toDouble(): PineDouble","title":"toDouble"},{"location":"latest/core/org.pinelang.core/-pine-double/to-int/","text":"core / org.pinelang.core / PineDouble / toInt toInt \u00b6 fun toInt(): PineExpr < Int >","title":"toInt - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-double/to-int/#toint","text":"fun toInt(): PineExpr < Int >","title":"toInt"},{"location":"latest/core/org.pinelang.core/-pine-engine/","text":"core / org.pinelang.core / PineEngine PineEngine \u00b6 @ExperimentalUnsignedTypes class PineEngine Types \u00b6 Name Summary Builder class Builder Properties \u00b6 Name Summary dpCalculator val dpCalculator: ( Int ) -> Int types val types: IndexedMap < PineMetaObject > Functions \u00b6 Name Summary compile fun compile(script: String , keepDebugSymbols: Boolean = false): Program eval fun eval(program: Program ): PineObject load fun load(script: String , debugSymbol: Boolean = false): PineObject","title":"PineEngine - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-engine/#pineengine","text":"@ExperimentalUnsignedTypes class PineEngine","title":"PineEngine"},{"location":"latest/core/org.pinelang.core/-pine-engine/#types","text":"Name Summary Builder class Builder","title":"Types"},{"location":"latest/core/org.pinelang.core/-pine-engine/#properties","text":"Name Summary dpCalculator val dpCalculator: ( Int ) -> Int types val types: IndexedMap < PineMetaObject >","title":"Properties"},{"location":"latest/core/org.pinelang.core/-pine-engine/#functions","text":"Name Summary compile fun compile(script: String , keepDebugSymbols: Boolean = false): Program eval fun eval(program: Program ): PineObject load fun load(script: String , debugSymbol: Boolean = false): PineObject","title":"Functions"},{"location":"latest/core/org.pinelang.core/-pine-engine/compile/","text":"core / org.pinelang.core / PineEngine / compile compile \u00b6 fun compile(script: String , keepDebugSymbols: Boolean = false): Program","title":"compile - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-engine/compile/#compile","text":"fun compile(script: String , keepDebugSymbols: Boolean = false): Program","title":"compile"},{"location":"latest/core/org.pinelang.core/-pine-engine/dp-calculator/","text":"core / org.pinelang.core / PineEngine / dpCalculator dpCalculator \u00b6 val dpCalculator: ( Int ) -> Int","title":"dpCalculator - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-engine/dp-calculator/#dpcalculator","text":"val dpCalculator: ( Int ) -> Int","title":"dpCalculator"},{"location":"latest/core/org.pinelang.core/-pine-engine/eval/","text":"core / org.pinelang.core / PineEngine / eval eval \u00b6 fun eval(program: Program ): PineObject","title":"eval - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-engine/eval/#eval","text":"fun eval(program: Program ): PineObject","title":"eval"},{"location":"latest/core/org.pinelang.core/-pine-engine/load/","text":"core / org.pinelang.core / PineEngine / load load \u00b6 fun load(script: String , debugSymbol: Boolean = false): PineObject","title":"load - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-engine/load/#load","text":"fun load(script: String , debugSymbol: Boolean = false): PineObject","title":"load"},{"location":"latest/core/org.pinelang.core/-pine-engine/types/","text":"core / org.pinelang.core / PineEngine / types types \u00b6 val types: IndexedMap < PineMetaObject >","title":"types - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-engine/types/#types","text":"val types: IndexedMap < PineMetaObject >","title":"types"},{"location":"latest/core/org.pinelang.core/-pine-engine/-builder/","text":"core / org.pinelang.core / PineEngine / Builder Builder \u00b6 class Builder Constructors \u00b6 Name Summary <init> Builder() Functions \u00b6 Name Summary build fun build(): PineEngine pixelDensityCalculator fun pixelDensityCalculator(lambda: ( Int ) -> Int ): Unit registerPineType fun registerPineType(meta: PineMetaObject ): Builder","title":"Builder - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-engine/-builder/#builder","text":"class Builder","title":"Builder"},{"location":"latest/core/org.pinelang.core/-pine-engine/-builder/#constructors","text":"Name Summary <init> Builder()","title":"Constructors"},{"location":"latest/core/org.pinelang.core/-pine-engine/-builder/#functions","text":"Name Summary build fun build(): PineEngine pixelDensityCalculator fun pixelDensityCalculator(lambda: ( Int ) -> Int ): Unit registerPineType fun registerPineType(meta: PineMetaObject ): Builder","title":"Functions"},{"location":"latest/core/org.pinelang.core/-pine-engine/-builder/-init-/","text":"core / org.pinelang.core / PineEngine / Builder / <init> <init> \u00b6 Builder()","title":" init "},{"location":"latest/core/org.pinelang.core/-pine-engine/-builder/-init-/#init","text":"Builder()","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.core/-pine-engine/-builder/build/","text":"core / org.pinelang.core / PineEngine / Builder / build build \u00b6 fun build(): PineEngine","title":"build - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-engine/-builder/build/#build","text":"fun build(): PineEngine","title":"build"},{"location":"latest/core/org.pinelang.core/-pine-engine/-builder/pixel-density-calculator/","text":"core / org.pinelang.core / PineEngine / Builder / pixelDensityCalculator pixelDensityCalculator \u00b6 fun pixelDensityCalculator(lambda: ( Int ) -> Int ): Unit","title":"pixelDensityCalculator - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-engine/-builder/pixel-density-calculator/#pixeldensitycalculator","text":"fun pixelDensityCalculator(lambda: ( Int ) -> Int ): Unit","title":"pixelDensityCalculator"},{"location":"latest/core/org.pinelang.core/-pine-engine/-builder/register-pine-type/","text":"core / org.pinelang.core / PineEngine / Builder / registerPineType registerPineType \u00b6 fun registerPineType(meta: PineMetaObject ): Builder","title":"registerPineType - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-engine/-builder/register-pine-type/#registerpinetype","text":"fun registerPineType(meta: PineMetaObject ): Builder","title":"registerPineType"},{"location":"latest/core/org.pinelang.core/-pine-expr/","text":"core / org.pinelang.core / PineExpr PineExpr \u00b6 open class PineExpr<T> Constructors \u00b6 Name Summary <init> PineExpr(pineType: PineType , vararg refs: PineExpr <*>, calculation: () -> T) Properties \u00b6 Name Summary dirty var dirty: Boolean listenerCount val listenerCount: Int listeners var listeners: MutableList <() -> Unit >? pineType val pineType: PineType refs vararg var refs: Array <out PineExpr <*>> Functions \u00b6 Name Summary connect fun connect(lambda: () -> Unit ): Unit disconnect fun disconnect(lambda: () -> Unit , all: Boolean = true): Unit emit fun emit(): Unit ? invoke operator fun invoke(): T isBoolean fun isBoolean(): Boolean isDouble fun isDouble(): Boolean isFunction open fun isFunction(): Boolean isInt fun isInt(): Boolean isList fun isList(): Boolean isNumber fun isNumber(): Boolean isObject fun isObject(): Boolean isString fun isString(): Boolean move fun move(other: PineExpr <T>): Unit pineEquals open fun pineEquals(other: PineExpr <*>): PineBoolean toPineBoolean fun toPineBoolean(): PineBoolean toPineDouble fun toPineDouble(): PineDouble toPineInt fun toPineInt(): PineInt toPineString fun toPineString(): PineString update fun update(vararg refs: PineExpr <*>, calculation: () -> T): Unit Companion Object Functions \u00b6 Name Summary of fun of(value: Int ): PineInt fun of(value: Double ): PineDouble fun of(value: Float ): PineDouble fun of(value: Boolean ): PineBoolean fun of(value: String ): PineString fun of(value: List <*>): PineList fun <T> of(value: T): PineExpr <*> Inheritors \u00b6 Name Summary PineBoolean class PineBoolean : PineExpr < Boolean > PineCallable class PineCallable<T> : PineExpr <T> PineDouble class PineDouble : PineNumber < Double >, PineExpr < Double > PineInt class PineInt : PineNumber < Int >, PineExpr < Int > PineList class PineList : PineExpr < List <*>> PineString class PineString : PineExpr < String >","title":"PineExpr - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-expr/#pineexpr","text":"open class PineExpr<T>","title":"PineExpr"},{"location":"latest/core/org.pinelang.core/-pine-expr/#constructors","text":"Name Summary <init> PineExpr(pineType: PineType , vararg refs: PineExpr <*>, calculation: () -> T)","title":"Constructors"},{"location":"latest/core/org.pinelang.core/-pine-expr/#properties","text":"Name Summary dirty var dirty: Boolean listenerCount val listenerCount: Int listeners var listeners: MutableList <() -> Unit >? pineType val pineType: PineType refs vararg var refs: Array <out PineExpr <*>>","title":"Properties"},{"location":"latest/core/org.pinelang.core/-pine-expr/#functions","text":"Name Summary connect fun connect(lambda: () -> Unit ): Unit disconnect fun disconnect(lambda: () -> Unit , all: Boolean = true): Unit emit fun emit(): Unit ? invoke operator fun invoke(): T isBoolean fun isBoolean(): Boolean isDouble fun isDouble(): Boolean isFunction open fun isFunction(): Boolean isInt fun isInt(): Boolean isList fun isList(): Boolean isNumber fun isNumber(): Boolean isObject fun isObject(): Boolean isString fun isString(): Boolean move fun move(other: PineExpr <T>): Unit pineEquals open fun pineEquals(other: PineExpr <*>): PineBoolean toPineBoolean fun toPineBoolean(): PineBoolean toPineDouble fun toPineDouble(): PineDouble toPineInt fun toPineInt(): PineInt toPineString fun toPineString(): PineString update fun update(vararg refs: PineExpr <*>, calculation: () -> T): Unit","title":"Functions"},{"location":"latest/core/org.pinelang.core/-pine-expr/#companion-object-functions","text":"Name Summary of fun of(value: Int ): PineInt fun of(value: Double ): PineDouble fun of(value: Float ): PineDouble fun of(value: Boolean ): PineBoolean fun of(value: String ): PineString fun of(value: List <*>): PineList fun <T> of(value: T): PineExpr <*>","title":"Companion Object Functions"},{"location":"latest/core/org.pinelang.core/-pine-expr/#inheritors","text":"Name Summary PineBoolean class PineBoolean : PineExpr < Boolean > PineCallable class PineCallable<T> : PineExpr <T> PineDouble class PineDouble : PineNumber < Double >, PineExpr < Double > PineInt class PineInt : PineNumber < Int >, PineExpr < Int > PineList class PineList : PineExpr < List <*>> PineString class PineString : PineExpr < String >","title":"Inheritors"},{"location":"latest/core/org.pinelang.core/-pine-expr/-init-/","text":"core / org.pinelang.core / PineExpr / <init> <init> \u00b6 PineExpr(pineType: PineType , vararg refs: PineExpr <*>, calculation: () -> T)","title":" init "},{"location":"latest/core/org.pinelang.core/-pine-expr/-init-/#init","text":"PineExpr(pineType: PineType , vararg refs: PineExpr <*>, calculation: () -> T)","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.core/-pine-expr/connect/","text":"core / org.pinelang.core / PineExpr / connect connect \u00b6 fun connect(lambda: () -> Unit ): Unit","title":"connect - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-expr/connect/#connect","text":"fun connect(lambda: () -> Unit ): Unit","title":"connect"},{"location":"latest/core/org.pinelang.core/-pine-expr/dirty/","text":"core / org.pinelang.core / PineExpr / dirty dirty \u00b6 protected var dirty: Boolean","title":"dirty - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-expr/dirty/#dirty","text":"protected var dirty: Boolean","title":"dirty"},{"location":"latest/core/org.pinelang.core/-pine-expr/disconnect/","text":"core / org.pinelang.core / PineExpr / disconnect disconnect \u00b6 fun disconnect(lambda: () -> Unit , all: Boolean = true): Unit","title":"disconnect - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-expr/disconnect/#disconnect","text":"fun disconnect(lambda: () -> Unit , all: Boolean = true): Unit","title":"disconnect"},{"location":"latest/core/org.pinelang.core/-pine-expr/emit/","text":"core / org.pinelang.core / PineExpr / emit emit \u00b6 fun emit(): Unit ?","title":"emit - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-expr/emit/#emit","text":"fun emit(): Unit ?","title":"emit"},{"location":"latest/core/org.pinelang.core/-pine-expr/invoke/","text":"core / org.pinelang.core / PineExpr / invoke invoke \u00b6 operator fun invoke(): T","title":"invoke - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-expr/invoke/#invoke","text":"operator fun invoke(): T","title":"invoke"},{"location":"latest/core/org.pinelang.core/-pine-expr/is-boolean/","text":"core / org.pinelang.core / PineExpr / isBoolean isBoolean \u00b6 fun isBoolean(): Boolean","title":"isBoolean - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-expr/is-boolean/#isboolean","text":"fun isBoolean(): Boolean","title":"isBoolean"},{"location":"latest/core/org.pinelang.core/-pine-expr/is-double/","text":"core / org.pinelang.core / PineExpr / isDouble isDouble \u00b6 fun isDouble(): Boolean","title":"isDouble - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-expr/is-double/#isdouble","text":"fun isDouble(): Boolean","title":"isDouble"},{"location":"latest/core/org.pinelang.core/-pine-expr/is-function/","text":"core / org.pinelang.core / PineExpr / isFunction isFunction \u00b6 open fun isFunction(): Boolean","title":"isFunction - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-expr/is-function/#isfunction","text":"open fun isFunction(): Boolean","title":"isFunction"},{"location":"latest/core/org.pinelang.core/-pine-expr/is-int/","text":"core / org.pinelang.core / PineExpr / isInt isInt \u00b6 fun isInt(): Boolean","title":"isInt - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-expr/is-int/#isint","text":"fun isInt(): Boolean","title":"isInt"},{"location":"latest/core/org.pinelang.core/-pine-expr/is-list/","text":"core / org.pinelang.core / PineExpr / isList isList \u00b6 fun isList(): Boolean","title":"isList - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-expr/is-list/#islist","text":"fun isList(): Boolean","title":"isList"},{"location":"latest/core/org.pinelang.core/-pine-expr/is-number/","text":"core / org.pinelang.core / PineExpr / isNumber isNumber \u00b6 fun isNumber(): Boolean","title":"isNumber - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-expr/is-number/#isnumber","text":"fun isNumber(): Boolean","title":"isNumber"},{"location":"latest/core/org.pinelang.core/-pine-expr/is-object/","text":"core / org.pinelang.core / PineExpr / isObject isObject \u00b6 fun isObject(): Boolean","title":"isObject - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-expr/is-object/#isobject","text":"fun isObject(): Boolean","title":"isObject"},{"location":"latest/core/org.pinelang.core/-pine-expr/is-string/","text":"core / org.pinelang.core / PineExpr / isString isString \u00b6 fun isString(): Boolean","title":"isString - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-expr/is-string/#isstring","text":"fun isString(): Boolean","title":"isString"},{"location":"latest/core/org.pinelang.core/-pine-expr/listener-count/","text":"core / org.pinelang.core / PineExpr / listenerCount listenerCount \u00b6 val listenerCount: Int","title":"listenerCount - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-expr/listener-count/#listenercount","text":"val listenerCount: Int","title":"listenerCount"},{"location":"latest/core/org.pinelang.core/-pine-expr/listeners/","text":"core / org.pinelang.core / PineExpr / listeners listeners \u00b6 var listeners: MutableList <() -> Unit >?","title":"listeners - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-expr/listeners/#listeners","text":"var listeners: MutableList <() -> Unit >?","title":"listeners"},{"location":"latest/core/org.pinelang.core/-pine-expr/move/","text":"core / org.pinelang.core / PineExpr / move move \u00b6 fun move(other: PineExpr <T>): Unit","title":"move - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-expr/move/#move","text":"fun move(other: PineExpr <T>): Unit","title":"move"},{"location":"latest/core/org.pinelang.core/-pine-expr/of/","text":"core / org.pinelang.core / PineExpr / of of \u00b6 fun of(value: Int ): PineInt fun of(value: Double ): PineDouble fun of(value: Float ): PineDouble fun of(value: Boolean ): PineBoolean fun of(value: String ): PineString fun of(value: List <*>): PineList fun <T> of(value: T): PineExpr <*>","title":"of - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-expr/of/#of","text":"fun of(value: Int ): PineInt fun of(value: Double ): PineDouble fun of(value: Float ): PineDouble fun of(value: Boolean ): PineBoolean fun of(value: String ): PineString fun of(value: List <*>): PineList fun <T> of(value: T): PineExpr <*>","title":"of"},{"location":"latest/core/org.pinelang.core/-pine-expr/pine-equals/","text":"core / org.pinelang.core / PineExpr / pineEquals pineEquals \u00b6 open fun pineEquals(other: PineExpr <*>): PineBoolean","title":"pineEquals - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-expr/pine-equals/#pineequals","text":"open fun pineEquals(other: PineExpr <*>): PineBoolean","title":"pineEquals"},{"location":"latest/core/org.pinelang.core/-pine-expr/pine-type/","text":"core / org.pinelang.core / PineExpr / pineType pineType \u00b6 val pineType: PineType","title":"pineType - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-expr/pine-type/#pinetype","text":"val pineType: PineType","title":"pineType"},{"location":"latest/core/org.pinelang.core/-pine-expr/refs/","text":"core / org.pinelang.core / PineExpr / refs refs \u00b6 protected vararg var refs: Array <out PineExpr <*>>","title":"refs - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-expr/refs/#refs","text":"protected vararg var refs: Array <out PineExpr <*>>","title":"refs"},{"location":"latest/core/org.pinelang.core/-pine-expr/to-pine-boolean/","text":"core / org.pinelang.core / PineExpr / toPineBoolean toPineBoolean \u00b6 fun toPineBoolean(): PineBoolean","title":"toPineBoolean - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-expr/to-pine-boolean/#topineboolean","text":"fun toPineBoolean(): PineBoolean","title":"toPineBoolean"},{"location":"latest/core/org.pinelang.core/-pine-expr/to-pine-double/","text":"core / org.pinelang.core / PineExpr / toPineDouble toPineDouble \u00b6 fun toPineDouble(): PineDouble","title":"toPineDouble - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-expr/to-pine-double/#topinedouble","text":"fun toPineDouble(): PineDouble","title":"toPineDouble"},{"location":"latest/core/org.pinelang.core/-pine-expr/to-pine-int/","text":"core / org.pinelang.core / PineExpr / toPineInt toPineInt \u00b6 fun toPineInt(): PineInt","title":"toPineInt - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-expr/to-pine-int/#topineint","text":"fun toPineInt(): PineInt","title":"toPineInt"},{"location":"latest/core/org.pinelang.core/-pine-expr/to-pine-string/","text":"core / org.pinelang.core / PineExpr / toPineString toPineString \u00b6 fun toPineString(): PineString","title":"toPineString - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-expr/to-pine-string/#topinestring","text":"fun toPineString(): PineString","title":"toPineString"},{"location":"latest/core/org.pinelang.core/-pine-expr/update/","text":"core / org.pinelang.core / PineExpr / update update \u00b6 fun update(vararg refs: PineExpr <*>, calculation: () -> T): Unit","title":"update - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-expr/update/#update","text":"fun update(vararg refs: PineExpr <*>, calculation: () -> T): Unit","title":"update"},{"location":"latest/core/org.pinelang.core/-pine-int/","text":"core / org.pinelang.core / PineInt PineInt \u00b6 class PineInt : PineNumber < Int >, PineExpr < Int > Constructors \u00b6 Name Summary <init> PineInt(value: Int ) PineInt(vararg refs: PineExpr <*>, calculation: () -> Int ) Functions \u00b6 Name Summary div fun div(other: PineExpr <*>): PineInt equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int minus fun minus(other: PineExpr <*>): PineInt plus fun plus(other: PineExpr <*>): PineInt rem fun rem(other: PineExpr <*>): PineInt times fun times(other: PineExpr <*>): PineInt toDouble fun toDouble(): PineDouble toInt fun toInt(): PineInt","title":"PineInt - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-int/#pineint","text":"class PineInt : PineNumber < Int >, PineExpr < Int >","title":"PineInt"},{"location":"latest/core/org.pinelang.core/-pine-int/#constructors","text":"Name Summary <init> PineInt(value: Int ) PineInt(vararg refs: PineExpr <*>, calculation: () -> Int )","title":"Constructors"},{"location":"latest/core/org.pinelang.core/-pine-int/#functions","text":"Name Summary div fun div(other: PineExpr <*>): PineInt equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int minus fun minus(other: PineExpr <*>): PineInt plus fun plus(other: PineExpr <*>): PineInt rem fun rem(other: PineExpr <*>): PineInt times fun times(other: PineExpr <*>): PineInt toDouble fun toDouble(): PineDouble toInt fun toInt(): PineInt","title":"Functions"},{"location":"latest/core/org.pinelang.core/-pine-int/-init-/","text":"core / org.pinelang.core / PineInt / <init> <init> \u00b6 PineInt(value: Int ) PineInt(vararg refs: PineExpr <*>, calculation: () -> Int )","title":" init "},{"location":"latest/core/org.pinelang.core/-pine-int/-init-/#init","text":"PineInt(value: Int ) PineInt(vararg refs: PineExpr <*>, calculation: () -> Int )","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.core/-pine-int/div/","text":"core / org.pinelang.core / PineInt / div div \u00b6 fun div(other: PineExpr <*>): PineInt","title":"div - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-int/div/#div","text":"fun div(other: PineExpr <*>): PineInt","title":"div"},{"location":"latest/core/org.pinelang.core/-pine-int/equals/","text":"core / org.pinelang.core / PineInt / equals equals \u00b6 fun equals(other: Any ?): Boolean","title":"equals - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-int/equals/#equals","text":"fun equals(other: Any ?): Boolean","title":"equals"},{"location":"latest/core/org.pinelang.core/-pine-int/hash-code/","text":"core / org.pinelang.core / PineInt / hashCode hashCode \u00b6 fun hashCode(): Int","title":"hashCode - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-int/hash-code/#hashcode","text":"fun hashCode(): Int","title":"hashCode"},{"location":"latest/core/org.pinelang.core/-pine-int/minus/","text":"core / org.pinelang.core / PineInt / minus minus \u00b6 fun minus(other: PineExpr <*>): PineInt","title":"minus - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-int/minus/#minus","text":"fun minus(other: PineExpr <*>): PineInt","title":"minus"},{"location":"latest/core/org.pinelang.core/-pine-int/plus/","text":"core / org.pinelang.core / PineInt / plus plus \u00b6 fun plus(other: PineExpr <*>): PineInt","title":"plus - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-int/plus/#plus","text":"fun plus(other: PineExpr <*>): PineInt","title":"plus"},{"location":"latest/core/org.pinelang.core/-pine-int/rem/","text":"core / org.pinelang.core / PineInt / rem rem \u00b6 fun rem(other: PineExpr <*>): PineInt","title":"rem - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-int/rem/#rem","text":"fun rem(other: PineExpr <*>): PineInt","title":"rem"},{"location":"latest/core/org.pinelang.core/-pine-int/times/","text":"core / org.pinelang.core / PineInt / times times \u00b6 fun times(other: PineExpr <*>): PineInt","title":"times - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-int/times/#times","text":"fun times(other: PineExpr <*>): PineInt","title":"times"},{"location":"latest/core/org.pinelang.core/-pine-int/to-double/","text":"core / org.pinelang.core / PineInt / toDouble toDouble \u00b6 fun toDouble(): PineDouble","title":"toDouble - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-int/to-double/#todouble","text":"fun toDouble(): PineDouble","title":"toDouble"},{"location":"latest/core/org.pinelang.core/-pine-int/to-int/","text":"core / org.pinelang.core / PineInt / toInt toInt \u00b6 fun toInt(): PineInt","title":"toInt - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-int/to-int/#toint","text":"fun toInt(): PineInt","title":"toInt"},{"location":"latest/core/org.pinelang.core/-pine-list/","text":"core / org.pinelang.core / PineList PineList \u00b6 class PineList : PineExpr < List <*>> Constructors \u00b6 Name Summary <init> PineList(value: List <*>) PineList(vararg refs: PineExpr <*>, calculation: () -> List <*>)","title":"PineList - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-list/#pinelist","text":"class PineList : PineExpr < List <*>>","title":"PineList"},{"location":"latest/core/org.pinelang.core/-pine-list/#constructors","text":"Name Summary <init> PineList(value: List <*>) PineList(vararg refs: PineExpr <*>, calculation: () -> List <*>)","title":"Constructors"},{"location":"latest/core/org.pinelang.core/-pine-list/-init-/","text":"core / org.pinelang.core / PineList / <init> <init> \u00b6 PineList(value: List <*>) PineList(vararg refs: PineExpr <*>, calculation: () -> List <*>)","title":" init "},{"location":"latest/core/org.pinelang.core/-pine-list/-init-/#init","text":"PineList(value: List <*>) PineList(vararg refs: PineExpr <*>, calculation: () -> List <*>)","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.core/-pine-meta-object/","text":"core / org.pinelang.core / PineMetaObject PineMetaObject \u00b6 class PineMetaObject Constructors \u00b6 Name Summary <init> PineMetaObject(scriptName: String , docString: String = \"\", allocator: Allocator ) Properties \u00b6 Name Summary allNames val allNames: Array < String > allocator val allocator: Allocator docString val docString: String props val props: Array < MetaProp > scriptName val scriptName: String Functions \u00b6 Name Summary callableNames fun callableNames(): List < String > indexOfAny fun indexOfAny(name: String ): Int ? indexOfCallable fun indexOfCallable(name: String ): Int ? indexOfProp fun indexOfProp(name: String ): Int ? indexOfSignal fun indexOfSignal(name: String ): Int ? propNames fun propNames(): List < String > signalNames fun signalNames(): List < String >","title":"PineMetaObject - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-meta-object/#pinemetaobject","text":"class PineMetaObject","title":"PineMetaObject"},{"location":"latest/core/org.pinelang.core/-pine-meta-object/#constructors","text":"Name Summary <init> PineMetaObject(scriptName: String , docString: String = \"\", allocator: Allocator )","title":"Constructors"},{"location":"latest/core/org.pinelang.core/-pine-meta-object/#properties","text":"Name Summary allNames val allNames: Array < String > allocator val allocator: Allocator docString val docString: String props val props: Array < MetaProp > scriptName val scriptName: String","title":"Properties"},{"location":"latest/core/org.pinelang.core/-pine-meta-object/#functions","text":"Name Summary callableNames fun callableNames(): List < String > indexOfAny fun indexOfAny(name: String ): Int ? indexOfCallable fun indexOfCallable(name: String ): Int ? indexOfProp fun indexOfProp(name: String ): Int ? indexOfSignal fun indexOfSignal(name: String ): Int ? propNames fun propNames(): List < String > signalNames fun signalNames(): List < String >","title":"Functions"},{"location":"latest/core/org.pinelang.core/-pine-meta-object/-init-/","text":"core / org.pinelang.core / PineMetaObject / <init> <init> \u00b6 PineMetaObject(scriptName: String , docString: String = \"\", allocator: Allocator )","title":" init "},{"location":"latest/core/org.pinelang.core/-pine-meta-object/-init-/#init","text":"PineMetaObject(scriptName: String , docString: String = \"\", allocator: Allocator )","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.core/-pine-meta-object/all-names/","text":"core / org.pinelang.core / PineMetaObject / allNames allNames \u00b6 val allNames: Array < String >","title":"allNames - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-meta-object/all-names/#allnames","text":"val allNames: Array < String >","title":"allNames"},{"location":"latest/core/org.pinelang.core/-pine-meta-object/allocator/","text":"core / org.pinelang.core / PineMetaObject / allocator allocator \u00b6 val allocator: Allocator","title":"allocator - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-meta-object/allocator/#allocator","text":"val allocator: Allocator","title":"allocator"},{"location":"latest/core/org.pinelang.core/-pine-meta-object/callable-names/","text":"core / org.pinelang.core / PineMetaObject / callableNames callableNames \u00b6 fun callableNames(): List < String >","title":"callableNames - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-meta-object/callable-names/#callablenames","text":"fun callableNames(): List < String >","title":"callableNames"},{"location":"latest/core/org.pinelang.core/-pine-meta-object/doc-string/","text":"core / org.pinelang.core / PineMetaObject / docString docString \u00b6 val docString: String","title":"docString - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-meta-object/doc-string/#docstring","text":"val docString: String","title":"docString"},{"location":"latest/core/org.pinelang.core/-pine-meta-object/index-of-any/","text":"core / org.pinelang.core / PineMetaObject / indexOfAny indexOfAny \u00b6 fun indexOfAny(name: String ): Int ?","title":"indexOfAny - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-meta-object/index-of-any/#indexofany","text":"fun indexOfAny(name: String ): Int ?","title":"indexOfAny"},{"location":"latest/core/org.pinelang.core/-pine-meta-object/index-of-callable/","text":"core / org.pinelang.core / PineMetaObject / indexOfCallable indexOfCallable \u00b6 fun indexOfCallable(name: String ): Int ?","title":"indexOfCallable - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-meta-object/index-of-callable/#indexofcallable","text":"fun indexOfCallable(name: String ): Int ?","title":"indexOfCallable"},{"location":"latest/core/org.pinelang.core/-pine-meta-object/index-of-prop/","text":"core / org.pinelang.core / PineMetaObject / indexOfProp indexOfProp \u00b6 fun indexOfProp(name: String ): Int ?","title":"indexOfProp - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-meta-object/index-of-prop/#indexofprop","text":"fun indexOfProp(name: String ): Int ?","title":"indexOfProp"},{"location":"latest/core/org.pinelang.core/-pine-meta-object/index-of-signal/","text":"core / org.pinelang.core / PineMetaObject / indexOfSignal indexOfSignal \u00b6 fun indexOfSignal(name: String ): Int ?","title":"indexOfSignal - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-meta-object/index-of-signal/#indexofsignal","text":"fun indexOfSignal(name: String ): Int ?","title":"indexOfSignal"},{"location":"latest/core/org.pinelang.core/-pine-meta-object/prop-names/","text":"core / org.pinelang.core / PineMetaObject / propNames propNames \u00b6 fun propNames(): List < String >","title":"propNames - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-meta-object/prop-names/#propnames","text":"fun propNames(): List < String >","title":"propNames"},{"location":"latest/core/org.pinelang.core/-pine-meta-object/props/","text":"core / org.pinelang.core / PineMetaObject / props props \u00b6 val props: Array < MetaProp >","title":"props - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-meta-object/props/#props","text":"val props: Array < MetaProp >","title":"props"},{"location":"latest/core/org.pinelang.core/-pine-meta-object/script-name/","text":"core / org.pinelang.core / PineMetaObject / scriptName scriptName \u00b6 val scriptName: String","title":"scriptName - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-meta-object/script-name/#scriptname","text":"val scriptName: String","title":"scriptName"},{"location":"latest/core/org.pinelang.core/-pine-meta-object/signal-names/","text":"core / org.pinelang.core / PineMetaObject / signalNames signalNames \u00b6 fun signalNames(): List < String >","title":"signalNames - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-meta-object/signal-names/#signalnames","text":"fun signalNames(): List < String >","title":"signalNames"},{"location":"latest/core/org.pinelang.core/-pine-number/","text":"core / org.pinelang.core / PineNumber PineNumber \u00b6 interface PineNumber<T> Functions \u00b6 Name Summary div abstract operator fun div(other: PineExpr <*>): PineExpr <T> minus abstract operator fun minus(other: PineExpr <*>): PineExpr <T> plus abstract operator fun plus(other: PineExpr <*>): PineExpr <T> rem abstract operator fun rem(other: PineExpr <*>): PineExpr <T> times abstract operator fun times(other: PineExpr <*>): PineExpr <T> toDouble abstract fun toDouble(): PineExpr < Double > toInt abstract fun toInt(): PineExpr < Int > Inheritors \u00b6 Name Summary PineDouble class PineDouble : PineNumber < Double >, PineExpr < Double > PineInt class PineInt : PineNumber < Int >, PineExpr < Int >","title":"PineNumber - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-number/#pinenumber","text":"interface PineNumber<T>","title":"PineNumber"},{"location":"latest/core/org.pinelang.core/-pine-number/#functions","text":"Name Summary div abstract operator fun div(other: PineExpr <*>): PineExpr <T> minus abstract operator fun minus(other: PineExpr <*>): PineExpr <T> plus abstract operator fun plus(other: PineExpr <*>): PineExpr <T> rem abstract operator fun rem(other: PineExpr <*>): PineExpr <T> times abstract operator fun times(other: PineExpr <*>): PineExpr <T> toDouble abstract fun toDouble(): PineExpr < Double > toInt abstract fun toInt(): PineExpr < Int >","title":"Functions"},{"location":"latest/core/org.pinelang.core/-pine-number/#inheritors","text":"Name Summary PineDouble class PineDouble : PineNumber < Double >, PineExpr < Double > PineInt class PineInt : PineNumber < Int >, PineExpr < Int >","title":"Inheritors"},{"location":"latest/core/org.pinelang.core/-pine-number/div/","text":"core / org.pinelang.core / PineNumber / div div \u00b6 abstract operator fun div(other: PineExpr <*>): PineExpr <T>","title":"div - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-number/div/#div","text":"abstract operator fun div(other: PineExpr <*>): PineExpr <T>","title":"div"},{"location":"latest/core/org.pinelang.core/-pine-number/minus/","text":"core / org.pinelang.core / PineNumber / minus minus \u00b6 abstract operator fun minus(other: PineExpr <*>): PineExpr <T>","title":"minus - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-number/minus/#minus","text":"abstract operator fun minus(other: PineExpr <*>): PineExpr <T>","title":"minus"},{"location":"latest/core/org.pinelang.core/-pine-number/plus/","text":"core / org.pinelang.core / PineNumber / plus plus \u00b6 abstract operator fun plus(other: PineExpr <*>): PineExpr <T>","title":"plus - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-number/plus/#plus","text":"abstract operator fun plus(other: PineExpr <*>): PineExpr <T>","title":"plus"},{"location":"latest/core/org.pinelang.core/-pine-number/rem/","text":"core / org.pinelang.core / PineNumber / rem rem \u00b6 abstract operator fun rem(other: PineExpr <*>): PineExpr <T>","title":"rem - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-number/rem/#rem","text":"abstract operator fun rem(other: PineExpr <*>): PineExpr <T>","title":"rem"},{"location":"latest/core/org.pinelang.core/-pine-number/times/","text":"core / org.pinelang.core / PineNumber / times times \u00b6 abstract operator fun times(other: PineExpr <*>): PineExpr <T>","title":"times - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-number/times/#times","text":"abstract operator fun times(other: PineExpr <*>): PineExpr <T>","title":"times"},{"location":"latest/core/org.pinelang.core/-pine-number/to-double/","text":"core / org.pinelang.core / PineNumber / toDouble toDouble \u00b6 abstract fun toDouble(): PineExpr < Double >","title":"toDouble - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-number/to-double/#todouble","text":"abstract fun toDouble(): PineExpr < Double >","title":"toDouble"},{"location":"latest/core/org.pinelang.core/-pine-number/to-int/","text":"core / org.pinelang.core / PineNumber / toInt toInt \u00b6 abstract fun toInt(): PineExpr < Int >","title":"toInt - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-number/to-int/#toint","text":"abstract fun toInt(): PineExpr < Int >","title":"toInt"},{"location":"latest/core/org.pinelang.core/-pine-object/","text":"core / org.pinelang.core / PineObject PineObject \u00b6 abstract class PineObject Constructors \u00b6 Name Summary <init> PineObject(id: Int = -1, name: String ? = null) Properties \u00b6 Name Summary callables val callables: MutableList < PineCallable <*>> children val children: ChildrenListPineProp id val id: Int name var name: String ? props val props: MutableList < PineProp <*>> signals val signals: MutableList < PineSignal > slots val slots: MutableList < PineConnection > Functions \u00b6 Name Summary connect fun connect(signal: String , slot: () -> Unit ): Boolean disconnect fun disconnect(signal: String , slot: () -> Unit ): Boolean dispose fun dispose(): Unit emit fun emit(signal: String ): Unit emitMount fun emitMount(): Unit emitUnmount fun emitUnmount(): Unit getMeta abstract fun getMeta(): PineMetaObject getProp fun getProp(name: String ): PineProp <*> makeCallable fun makeCallable(name: String , lambda: () -> Unit ): PineExpr < Unit > fun <T> makeCallable(returnType: PineType , name: String , lambda: () -> T): PineExpr <T> makeSignal fun makeSignal(name: String ): PineSignal toString open fun toString(): String Companion Object Properties \u00b6 Name Summary INVALID_ID const val INVALID_ID: Int SIG_MOUNT const val SIG_MOUNT: String SIG_UNMOUNT const val SIG_UNMOUNT: String Extension Functions \u00b6 Name Summary boolProp fun PineObject .boolProp(kProp: KProperty < Boolean >, initialValue: Boolean = false): PineProp < Boolean > doubleProp fun PineObject .doubleProp(kProp: KProperty < Double >, initialValue: Double = 0.0): PineProp < Double > intProp fun PineObject .intProp(kProp: KProperty < Int >, initialValue: Int = 0): PineProp < Int > registerProp fun <T> PineObject .registerProp(prop: PineProp <T>): PineProp <T> stringProp fun PineObject .stringProp(kProp: KProperty < String >, initialValue: String = \"\"): PineProp < String > Inheritors \u00b6 Name Summary Item class Item : PineObject","title":"PineObject - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-object/#pineobject","text":"abstract class PineObject","title":"PineObject"},{"location":"latest/core/org.pinelang.core/-pine-object/#constructors","text":"Name Summary <init> PineObject(id: Int = -1, name: String ? = null)","title":"Constructors"},{"location":"latest/core/org.pinelang.core/-pine-object/#properties","text":"Name Summary callables val callables: MutableList < PineCallable <*>> children val children: ChildrenListPineProp id val id: Int name var name: String ? props val props: MutableList < PineProp <*>> signals val signals: MutableList < PineSignal > slots val slots: MutableList < PineConnection >","title":"Properties"},{"location":"latest/core/org.pinelang.core/-pine-object/#functions","text":"Name Summary connect fun connect(signal: String , slot: () -> Unit ): Boolean disconnect fun disconnect(signal: String , slot: () -> Unit ): Boolean dispose fun dispose(): Unit emit fun emit(signal: String ): Unit emitMount fun emitMount(): Unit emitUnmount fun emitUnmount(): Unit getMeta abstract fun getMeta(): PineMetaObject getProp fun getProp(name: String ): PineProp <*> makeCallable fun makeCallable(name: String , lambda: () -> Unit ): PineExpr < Unit > fun <T> makeCallable(returnType: PineType , name: String , lambda: () -> T): PineExpr <T> makeSignal fun makeSignal(name: String ): PineSignal toString open fun toString(): String","title":"Functions"},{"location":"latest/core/org.pinelang.core/-pine-object/#companion-object-properties","text":"Name Summary INVALID_ID const val INVALID_ID: Int SIG_MOUNT const val SIG_MOUNT: String SIG_UNMOUNT const val SIG_UNMOUNT: String","title":"Companion Object Properties"},{"location":"latest/core/org.pinelang.core/-pine-object/#extension-functions","text":"Name Summary boolProp fun PineObject .boolProp(kProp: KProperty < Boolean >, initialValue: Boolean = false): PineProp < Boolean > doubleProp fun PineObject .doubleProp(kProp: KProperty < Double >, initialValue: Double = 0.0): PineProp < Double > intProp fun PineObject .intProp(kProp: KProperty < Int >, initialValue: Int = 0): PineProp < Int > registerProp fun <T> PineObject .registerProp(prop: PineProp <T>): PineProp <T> stringProp fun PineObject .stringProp(kProp: KProperty < String >, initialValue: String = \"\"): PineProp < String >","title":"Extension Functions"},{"location":"latest/core/org.pinelang.core/-pine-object/#inheritors","text":"Name Summary Item class Item : PineObject","title":"Inheritors"},{"location":"latest/core/org.pinelang.core/-pine-object/-i-n-v-a-l-i-d_-i-d/","text":"core / org.pinelang.core / PineObject / INVALID_ID INVALID_ID \u00b6 const val INVALID_ID: Int","title":"INVALID_ID - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-object/-i-n-v-a-l-i-d_-i-d/#invalid_id","text":"const val INVALID_ID: Int","title":"INVALID_ID"},{"location":"latest/core/org.pinelang.core/-pine-object/-init-/","text":"core / org.pinelang.core / PineObject / <init> <init> \u00b6 PineObject(id: Int = -1, name: String ? = null)","title":" init "},{"location":"latest/core/org.pinelang.core/-pine-object/-init-/#init","text":"PineObject(id: Int = -1, name: String ? = null)","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.core/-pine-object/-s-i-g_-m-o-u-n-t/","text":"core / org.pinelang.core / PineObject / SIG_MOUNT SIG_MOUNT \u00b6 const val SIG_MOUNT: String","title":"SIG_MOUNT - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-object/-s-i-g_-m-o-u-n-t/#sig_mount","text":"const val SIG_MOUNT: String","title":"SIG_MOUNT"},{"location":"latest/core/org.pinelang.core/-pine-object/-s-i-g_-u-n-m-o-u-n-t/","text":"core / org.pinelang.core / PineObject / SIG_UNMOUNT SIG_UNMOUNT \u00b6 const val SIG_UNMOUNT: String","title":"SIG_UNMOUNT - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-object/-s-i-g_-u-n-m-o-u-n-t/#sig_unmount","text":"const val SIG_UNMOUNT: String","title":"SIG_UNMOUNT"},{"location":"latest/core/org.pinelang.core/-pine-object/callables/","text":"core / org.pinelang.core / PineObject / callables callables \u00b6 val callables: MutableList < PineCallable <*>>","title":"callables - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-object/callables/#callables","text":"val callables: MutableList < PineCallable <*>>","title":"callables"},{"location":"latest/core/org.pinelang.core/-pine-object/children/","text":"core / org.pinelang.core / PineObject / children children \u00b6 val children: ChildrenListPineProp","title":"children - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-object/children/#children","text":"val children: ChildrenListPineProp","title":"children"},{"location":"latest/core/org.pinelang.core/-pine-object/connect/","text":"core / org.pinelang.core / PineObject / connect connect \u00b6 fun connect(signal: String , slot: () -> Unit ): Boolean","title":"connect - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-object/connect/#connect","text":"fun connect(signal: String , slot: () -> Unit ): Boolean","title":"connect"},{"location":"latest/core/org.pinelang.core/-pine-object/disconnect/","text":"core / org.pinelang.core / PineObject / disconnect disconnect \u00b6 fun disconnect(signal: String , slot: () -> Unit ): Boolean","title":"disconnect - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-object/disconnect/#disconnect","text":"fun disconnect(signal: String , slot: () -> Unit ): Boolean","title":"disconnect"},{"location":"latest/core/org.pinelang.core/-pine-object/dispose/","text":"core / org.pinelang.core / PineObject / dispose dispose \u00b6 fun dispose(): Unit","title":"dispose - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-object/dispose/#dispose","text":"fun dispose(): Unit","title":"dispose"},{"location":"latest/core/org.pinelang.core/-pine-object/emit-mount/","text":"core / org.pinelang.core / PineObject / emitMount emitMount \u00b6 fun emitMount(): Unit","title":"emitMount - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-object/emit-mount/#emitmount","text":"fun emitMount(): Unit","title":"emitMount"},{"location":"latest/core/org.pinelang.core/-pine-object/emit-unmount/","text":"core / org.pinelang.core / PineObject / emitUnmount emitUnmount \u00b6 fun emitUnmount(): Unit","title":"emitUnmount - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-object/emit-unmount/#emitunmount","text":"fun emitUnmount(): Unit","title":"emitUnmount"},{"location":"latest/core/org.pinelang.core/-pine-object/emit/","text":"core / org.pinelang.core / PineObject / emit emit \u00b6 fun emit(signal: String ): Unit","title":"emit - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-object/emit/#emit","text":"fun emit(signal: String ): Unit","title":"emit"},{"location":"latest/core/org.pinelang.core/-pine-object/get-meta/","text":"core / org.pinelang.core / PineObject / getMeta getMeta \u00b6 abstract fun getMeta(): PineMetaObject","title":"getMeta - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-object/get-meta/#getmeta","text":"abstract fun getMeta(): PineMetaObject","title":"getMeta"},{"location":"latest/core/org.pinelang.core/-pine-object/get-prop/","text":"core / org.pinelang.core / PineObject / getProp getProp \u00b6 fun getProp(name: String ): PineProp <*>","title":"getProp - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-object/get-prop/#getprop","text":"fun getProp(name: String ): PineProp <*>","title":"getProp"},{"location":"latest/core/org.pinelang.core/-pine-object/id/","text":"core / org.pinelang.core / PineObject / id id \u00b6 val id: Int","title":"id - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-object/id/#id","text":"val id: Int","title":"id"},{"location":"latest/core/org.pinelang.core/-pine-object/make-callable/","text":"core / org.pinelang.core / PineObject / makeCallable makeCallable \u00b6 fun makeCallable(name: String , lambda: () -> Unit ): PineExpr < Unit > fun <T> makeCallable(returnType: PineType , name: String , lambda: () -> T): PineExpr <T>","title":"makeCallable - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-object/make-callable/#makecallable","text":"fun makeCallable(name: String , lambda: () -> Unit ): PineExpr < Unit > fun <T> makeCallable(returnType: PineType , name: String , lambda: () -> T): PineExpr <T>","title":"makeCallable"},{"location":"latest/core/org.pinelang.core/-pine-object/make-signal/","text":"core / org.pinelang.core / PineObject / makeSignal makeSignal \u00b6 fun makeSignal(name: String ): PineSignal","title":"makeSignal - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-object/make-signal/#makesignal","text":"fun makeSignal(name: String ): PineSignal","title":"makeSignal"},{"location":"latest/core/org.pinelang.core/-pine-object/name/","text":"core / org.pinelang.core / PineObject / name name \u00b6 var name: String ?","title":"name - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-object/name/#name","text":"var name: String ?","title":"name"},{"location":"latest/core/org.pinelang.core/-pine-object/props/","text":"core / org.pinelang.core / PineObject / props props \u00b6 val props: MutableList < PineProp <*>>","title":"props - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-object/props/#props","text":"val props: MutableList < PineProp <*>>","title":"props"},{"location":"latest/core/org.pinelang.core/-pine-object/signals/","text":"core / org.pinelang.core / PineObject / signals signals \u00b6 val signals: MutableList < PineSignal >","title":"signals - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-object/signals/#signals","text":"val signals: MutableList < PineSignal >","title":"signals"},{"location":"latest/core/org.pinelang.core/-pine-object/slots/","text":"core / org.pinelang.core / PineObject / slots slots \u00b6 val slots: MutableList < PineConnection >","title":"slots - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-object/slots/#slots","text":"val slots: MutableList < PineConnection >","title":"slots"},{"location":"latest/core/org.pinelang.core/-pine-object/to-string/","text":"core / org.pinelang.core / PineObject / toString toString \u00b6 open fun toString(): String","title":"toString - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-object/to-string/#tostring","text":"open fun toString(): String","title":"toString"},{"location":"latest/core/org.pinelang.core/-pine-prop/","text":"core / org.pinelang.core / PineProp PineProp \u00b6 open class PineProp<T> : PineSignal , ReadWriteProperty < PineObject , T> Constructors \u00b6 Name Summary <init> PineProp(pineObject: PineObject , name: String , expr: PineExpr < Any ?>) Properties \u00b6 Name Summary expr val expr: PineExpr < Any ?> name val name: String Functions \u00b6 Name Summary asType fun <T> asType(): PineProp <T> bind fun <T> bind(other: PineProp <T>): Unit getPineObject open fun getPineObject(): PineObject getScriptName open fun getScriptName(): String getValue open fun getValue(thisRef: PineObject , property: KProperty <*>): T setValue open fun setValue(thisRef: PineObject , property: KProperty <*>, value: T): Unit toString open fun toString(): String Inheritors \u00b6 Name Summary ChildrenListPineProp open class ChildrenListPineProp : PineProp < MutableList < PineObject >>, Iterable < PineObject >","title":"PineProp - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-prop/#pineprop","text":"open class PineProp<T> : PineSignal , ReadWriteProperty < PineObject , T>","title":"PineProp"},{"location":"latest/core/org.pinelang.core/-pine-prop/#constructors","text":"Name Summary <init> PineProp(pineObject: PineObject , name: String , expr: PineExpr < Any ?>)","title":"Constructors"},{"location":"latest/core/org.pinelang.core/-pine-prop/#properties","text":"Name Summary expr val expr: PineExpr < Any ?> name val name: String","title":"Properties"},{"location":"latest/core/org.pinelang.core/-pine-prop/#functions","text":"Name Summary asType fun <T> asType(): PineProp <T> bind fun <T> bind(other: PineProp <T>): Unit getPineObject open fun getPineObject(): PineObject getScriptName open fun getScriptName(): String getValue open fun getValue(thisRef: PineObject , property: KProperty <*>): T setValue open fun setValue(thisRef: PineObject , property: KProperty <*>, value: T): Unit toString open fun toString(): String","title":"Functions"},{"location":"latest/core/org.pinelang.core/-pine-prop/#inheritors","text":"Name Summary ChildrenListPineProp open class ChildrenListPineProp : PineProp < MutableList < PineObject >>, Iterable < PineObject >","title":"Inheritors"},{"location":"latest/core/org.pinelang.core/-pine-prop/-init-/","text":"core / org.pinelang.core / PineProp / <init> <init> \u00b6 PineProp(pineObject: PineObject , name: String , expr: PineExpr < Any ?>)","title":" init "},{"location":"latest/core/org.pinelang.core/-pine-prop/-init-/#init","text":"PineProp(pineObject: PineObject , name: String , expr: PineExpr < Any ?>)","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.core/-pine-prop/as-type/","text":"core / org.pinelang.core / PineProp / asType asType \u00b6 fun <T> asType(): PineProp <T>","title":"asType - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-prop/as-type/#astype","text":"fun <T> asType(): PineProp <T>","title":"asType"},{"location":"latest/core/org.pinelang.core/-pine-prop/bind/","text":"core / org.pinelang.core / PineProp / bind bind \u00b6 fun <T> bind(other: PineProp <T>): Unit","title":"bind - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-prop/bind/#bind","text":"fun <T> bind(other: PineProp <T>): Unit","title":"bind"},{"location":"latest/core/org.pinelang.core/-pine-prop/expr/","text":"core / org.pinelang.core / PineProp / expr expr \u00b6 val expr: PineExpr < Any ?>","title":"expr - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-prop/expr/#expr","text":"val expr: PineExpr < Any ?>","title":"expr"},{"location":"latest/core/org.pinelang.core/-pine-prop/get-pine-object/","text":"core / org.pinelang.core / PineProp / getPineObject getPineObject \u00b6 open fun getPineObject(): PineObject","title":"getPineObject - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-prop/get-pine-object/#getpineobject","text":"open fun getPineObject(): PineObject","title":"getPineObject"},{"location":"latest/core/org.pinelang.core/-pine-prop/get-script-name/","text":"core / org.pinelang.core / PineProp / getScriptName getScriptName \u00b6 open fun getScriptName(): String","title":"getScriptName - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-prop/get-script-name/#getscriptname","text":"open fun getScriptName(): String","title":"getScriptName"},{"location":"latest/core/org.pinelang.core/-pine-prop/get-value/","text":"core / org.pinelang.core / PineProp / getValue getValue \u00b6 open fun getValue(thisRef: PineObject , property: KProperty <*>): T","title":"getValue - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-prop/get-value/#getvalue","text":"open fun getValue(thisRef: PineObject , property: KProperty <*>): T","title":"getValue"},{"location":"latest/core/org.pinelang.core/-pine-prop/name/","text":"core / org.pinelang.core / PineProp / name name \u00b6 val name: String","title":"name - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-prop/name/#name","text":"val name: String","title":"name"},{"location":"latest/core/org.pinelang.core/-pine-prop/set-value/","text":"core / org.pinelang.core / PineProp / setValue setValue \u00b6 open fun setValue(thisRef: PineObject , property: KProperty <*>, value: T): Unit","title":"setValue - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-prop/set-value/#setvalue","text":"open fun setValue(thisRef: PineObject , property: KProperty <*>, value: T): Unit","title":"setValue"},{"location":"latest/core/org.pinelang.core/-pine-prop/to-string/","text":"core / org.pinelang.core / PineProp / toString toString \u00b6 open fun toString(): String","title":"toString - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-prop/to-string/#tostring","text":"open fun toString(): String","title":"toString"},{"location":"latest/core/org.pinelang.core/-pine-script-exception/","text":"core / org.pinelang.core / PineScriptException PineScriptException \u00b6 open class PineScriptException : RuntimeException Constructors \u00b6 Name Summary <init> PineScriptException(msg: String , cause: Throwable ? = null) Inheritors \u00b6 Name Summary BinaryOpException class BinaryOpException : PineScriptException BinaryOpNotSupportedPineScriptException class BinaryOpNotSupportedPineScriptException : PineScriptException","title":"PineScriptException - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-script-exception/#pinescriptexception","text":"open class PineScriptException : RuntimeException","title":"PineScriptException"},{"location":"latest/core/org.pinelang.core/-pine-script-exception/#constructors","text":"Name Summary <init> PineScriptException(msg: String , cause: Throwable ? = null)","title":"Constructors"},{"location":"latest/core/org.pinelang.core/-pine-script-exception/#inheritors","text":"Name Summary BinaryOpException class BinaryOpException : PineScriptException BinaryOpNotSupportedPineScriptException class BinaryOpNotSupportedPineScriptException : PineScriptException","title":"Inheritors"},{"location":"latest/core/org.pinelang.core/-pine-script-exception/-init-/","text":"core / org.pinelang.core / PineScriptException / <init> <init> \u00b6 PineScriptException(msg: String , cause: Throwable ? = null)","title":" init "},{"location":"latest/core/org.pinelang.core/-pine-script-exception/-init-/#init","text":"PineScriptException(msg: String , cause: Throwable ? = null)","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.core/-pine-script-parse-exception/","text":"core / org.pinelang.core / PineScriptParseException PineScriptParseException \u00b6 class PineScriptParseException : RuntimeException Constructors \u00b6 Name Summary <init> PineScriptParseException(startToken: Token, endToken: Token, message: String = \"\", cause: Throwable ? = null) PineScriptParseException(startLine: Int , startCol: Int , endLine: Int , endCol: Int , message: String = \"\", cause: Throwable ? = null) Properties \u00b6 Name Summary endCol val endCol: Int endLine val endLine: Int startCol val startCol: Int startLine val startLine: Int","title":"PineScriptParseException - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-script-parse-exception/#pinescriptparseexception","text":"class PineScriptParseException : RuntimeException","title":"PineScriptParseException"},{"location":"latest/core/org.pinelang.core/-pine-script-parse-exception/#constructors","text":"Name Summary <init> PineScriptParseException(startToken: Token, endToken: Token, message: String = \"\", cause: Throwable ? = null) PineScriptParseException(startLine: Int , startCol: Int , endLine: Int , endCol: Int , message: String = \"\", cause: Throwable ? = null)","title":"Constructors"},{"location":"latest/core/org.pinelang.core/-pine-script-parse-exception/#properties","text":"Name Summary endCol val endCol: Int endLine val endLine: Int startCol val startCol: Int startLine val startLine: Int","title":"Properties"},{"location":"latest/core/org.pinelang.core/-pine-script-parse-exception/-init-/","text":"core / org.pinelang.core / PineScriptParseException / <init> <init> \u00b6 PineScriptParseException(startToken: Token, endToken: Token, message: String = \"\", cause: Throwable ? = null) PineScriptParseException(startLine: Int , startCol: Int , endLine: Int , endCol: Int , message: String = \"\", cause: Throwable ? = null)","title":" init "},{"location":"latest/core/org.pinelang.core/-pine-script-parse-exception/-init-/#init","text":"PineScriptParseException(startToken: Token, endToken: Token, message: String = \"\", cause: Throwable ? = null) PineScriptParseException(startLine: Int , startCol: Int , endLine: Int , endCol: Int , message: String = \"\", cause: Throwable ? = null)","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.core/-pine-script-parse-exception/end-col/","text":"core / org.pinelang.core / PineScriptParseException / endCol endCol \u00b6 val endCol: Int","title":"endCol - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-script-parse-exception/end-col/#endcol","text":"val endCol: Int","title":"endCol"},{"location":"latest/core/org.pinelang.core/-pine-script-parse-exception/end-line/","text":"core / org.pinelang.core / PineScriptParseException / endLine endLine \u00b6 val endLine: Int","title":"endLine - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-script-parse-exception/end-line/#endline","text":"val endLine: Int","title":"endLine"},{"location":"latest/core/org.pinelang.core/-pine-script-parse-exception/start-col/","text":"core / org.pinelang.core / PineScriptParseException / startCol startCol \u00b6 val startCol: Int","title":"startCol - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-script-parse-exception/start-col/#startcol","text":"val startCol: Int","title":"startCol"},{"location":"latest/core/org.pinelang.core/-pine-script-parse-exception/start-line/","text":"core / org.pinelang.core / PineScriptParseException / startLine startLine \u00b6 val startLine: Int","title":"startLine - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-script-parse-exception/start-line/#startline","text":"val startLine: Int","title":"startLine"},{"location":"latest/core/org.pinelang.core/-pine-signal/","text":"core / org.pinelang.core / PineSignal PineSignal \u00b6 interface PineSignal Functions \u00b6 Name Summary connect Connect a Slot to a signal. Add a Slot to the ArrayList. open fun connect(slot: () -> Unit ): Boolean disconnect Disconnect a Slot from a signal. Remove a Slot from the ArrayList. open fun disconnect(slot: () -> Unit ): Boolean emit Execute all Slots. open fun emit(): Unit getPineObject abstract fun getPineObject(): PineObject getScriptName abstract fun getScriptName(): String Inheritors \u00b6 Name Summary BaseSignal class BaseSignal : PineSignal PineProp open class PineProp<T> : PineSignal , ReadWriteProperty < PineObject , T>","title":"PineSignal - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-signal/#pinesignal","text":"interface PineSignal","title":"PineSignal"},{"location":"latest/core/org.pinelang.core/-pine-signal/#functions","text":"Name Summary connect Connect a Slot to a signal. Add a Slot to the ArrayList. open fun connect(slot: () -> Unit ): Boolean disconnect Disconnect a Slot from a signal. Remove a Slot from the ArrayList. open fun disconnect(slot: () -> Unit ): Boolean emit Execute all Slots. open fun emit(): Unit getPineObject abstract fun getPineObject(): PineObject getScriptName abstract fun getScriptName(): String","title":"Functions"},{"location":"latest/core/org.pinelang.core/-pine-signal/#inheritors","text":"Name Summary BaseSignal class BaseSignal : PineSignal PineProp open class PineProp<T> : PineSignal , ReadWriteProperty < PineObject , T>","title":"Inheritors"},{"location":"latest/core/org.pinelang.core/-pine-signal/connect/","text":"core / org.pinelang.core / PineSignal / connect connect \u00b6 open fun connect(slot: () -> Unit ): Boolean Connect a Slot to a signal. Add a Slot to the ArrayList. Parameters \u00b6 slot - the Slot to be added","title":"connect - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-signal/connect/#connect","text":"open fun connect(slot: () -> Unit ): Boolean Connect a Slot to a signal. Add a Slot to the ArrayList.","title":"connect"},{"location":"latest/core/org.pinelang.core/-pine-signal/connect/#parameters","text":"slot - the Slot to be added","title":"Parameters"},{"location":"latest/core/org.pinelang.core/-pine-signal/disconnect/","text":"core / org.pinelang.core / PineSignal / disconnect disconnect \u00b6 open fun disconnect(slot: () -> Unit ): Boolean Disconnect a Slot from a signal. Remove a Slot from the ArrayList. Parameters \u00b6 slot - the Slot to be removed","title":"disconnect - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-signal/disconnect/#disconnect","text":"open fun disconnect(slot: () -> Unit ): Boolean Disconnect a Slot from a signal. Remove a Slot from the ArrayList.","title":"disconnect"},{"location":"latest/core/org.pinelang.core/-pine-signal/disconnect/#parameters","text":"slot - the Slot to be removed","title":"Parameters"},{"location":"latest/core/org.pinelang.core/-pine-signal/emit/","text":"core / org.pinelang.core / PineSignal / emit emit \u00b6 open fun emit(): Unit Execute all Slots.","title":"emit - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-signal/emit/#emit","text":"open fun emit(): Unit Execute all Slots.","title":"emit"},{"location":"latest/core/org.pinelang.core/-pine-signal/get-pine-object/","text":"core / org.pinelang.core / PineSignal / getPineObject getPineObject \u00b6 abstract fun getPineObject(): PineObject","title":"getPineObject - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-signal/get-pine-object/#getpineobject","text":"abstract fun getPineObject(): PineObject","title":"getPineObject"},{"location":"latest/core/org.pinelang.core/-pine-signal/get-script-name/","text":"core / org.pinelang.core / PineSignal / getScriptName getScriptName \u00b6 abstract fun getScriptName(): String","title":"getScriptName - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-signal/get-script-name/#getscriptname","text":"abstract fun getScriptName(): String","title":"getScriptName"},{"location":"latest/core/org.pinelang.core/-pine-string/","text":"core / org.pinelang.core / PineString PineString \u00b6 class PineString : PineExpr < String > Constructors \u00b6 Name Summary <init> PineString(value: String ) PineString(vararg refs: PineExpr <*>, calculation: () -> String ) Functions \u00b6 Name Summary plus operator fun plus(other: PineExpr <*>): PineString","title":"PineString - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-string/#pinestring","text":"class PineString : PineExpr < String >","title":"PineString"},{"location":"latest/core/org.pinelang.core/-pine-string/#constructors","text":"Name Summary <init> PineString(value: String ) PineString(vararg refs: PineExpr <*>, calculation: () -> String )","title":"Constructors"},{"location":"latest/core/org.pinelang.core/-pine-string/#functions","text":"Name Summary plus operator fun plus(other: PineExpr <*>): PineString","title":"Functions"},{"location":"latest/core/org.pinelang.core/-pine-string/-init-/","text":"core / org.pinelang.core / PineString / <init> <init> \u00b6 PineString(value: String ) PineString(vararg refs: PineExpr <*>, calculation: () -> String )","title":" init "},{"location":"latest/core/org.pinelang.core/-pine-string/-init-/#init","text":"PineString(value: String ) PineString(vararg refs: PineExpr <*>, calculation: () -> String )","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.core/-pine-string/plus/","text":"core / org.pinelang.core / PineString / plus plus \u00b6 operator fun plus(other: PineExpr <*>): PineString","title":"plus - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-string/plus/#plus","text":"operator fun plus(other: PineExpr <*>): PineString","title":"plus"},{"location":"latest/core/org.pinelang.core/-pine-type/","text":"core / org.pinelang.core / PineType PineType \u00b6 data class PineType Constructors \u00b6 Name Summary <init> PineType(typeName: String , type: UByte ) Properties \u00b6 Name Summary type val type: UByte typeName val typeName: String Companion Object Properties \u00b6 Name Summary BOOL val BOOL: PineType DOUBLE val DOUBLE: PineType INT val INT: PineType LIST val LIST: PineType OBJECT val OBJECT: PineType STRING val STRING: PineType VOID val VOID: PineType Companion Object Functions \u00b6 Name Summary fromUByte fun fromUByte(type: UByte ): PineType","title":"PineType - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-type/#pinetype","text":"data class PineType","title":"PineType"},{"location":"latest/core/org.pinelang.core/-pine-type/#constructors","text":"Name Summary <init> PineType(typeName: String , type: UByte )","title":"Constructors"},{"location":"latest/core/org.pinelang.core/-pine-type/#properties","text":"Name Summary type val type: UByte typeName val typeName: String","title":"Properties"},{"location":"latest/core/org.pinelang.core/-pine-type/#companion-object-properties","text":"Name Summary BOOL val BOOL: PineType DOUBLE val DOUBLE: PineType INT val INT: PineType LIST val LIST: PineType OBJECT val OBJECT: PineType STRING val STRING: PineType VOID val VOID: PineType","title":"Companion Object Properties"},{"location":"latest/core/org.pinelang.core/-pine-type/#companion-object-functions","text":"Name Summary fromUByte fun fromUByte(type: UByte ): PineType","title":"Companion Object Functions"},{"location":"latest/core/org.pinelang.core/-pine-type/-b-o-o-l/","text":"core / org.pinelang.core / PineType / BOOL BOOL \u00b6 val BOOL: PineType","title":"BOOL - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-type/-b-o-o-l/#bool","text":"val BOOL: PineType","title":"BOOL"},{"location":"latest/core/org.pinelang.core/-pine-type/-d-o-u-b-l-e/","text":"core / org.pinelang.core / PineType / DOUBLE DOUBLE \u00b6 val DOUBLE: PineType","title":"DOUBLE - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-type/-d-o-u-b-l-e/#double","text":"val DOUBLE: PineType","title":"DOUBLE"},{"location":"latest/core/org.pinelang.core/-pine-type/-i-n-t/","text":"core / org.pinelang.core / PineType / INT INT \u00b6 val INT: PineType","title":"INT - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-type/-i-n-t/#int","text":"val INT: PineType","title":"INT"},{"location":"latest/core/org.pinelang.core/-pine-type/-init-/","text":"core / org.pinelang.core / PineType / <init> <init> \u00b6 PineType(typeName: String , type: UByte )","title":" init "},{"location":"latest/core/org.pinelang.core/-pine-type/-init-/#init","text":"PineType(typeName: String , type: UByte )","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.core/-pine-type/-l-i-s-t/","text":"core / org.pinelang.core / PineType / LIST LIST \u00b6 val LIST: PineType","title":"LIST - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-type/-l-i-s-t/#list","text":"val LIST: PineType","title":"LIST"},{"location":"latest/core/org.pinelang.core/-pine-type/-o-b-j-e-c-t/","text":"core / org.pinelang.core / PineType / OBJECT OBJECT \u00b6 val OBJECT: PineType","title":"OBJECT - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-type/-o-b-j-e-c-t/#object","text":"val OBJECT: PineType","title":"OBJECT"},{"location":"latest/core/org.pinelang.core/-pine-type/-s-t-r-i-n-g/","text":"core / org.pinelang.core / PineType / STRING STRING \u00b6 val STRING: PineType","title":"STRING - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-type/-s-t-r-i-n-g/#string","text":"val STRING: PineType","title":"STRING"},{"location":"latest/core/org.pinelang.core/-pine-type/-v-o-i-d/","text":"core / org.pinelang.core / PineType / VOID VOID \u00b6 val VOID: PineType","title":"VOID - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-type/-v-o-i-d/#void","text":"val VOID: PineType","title":"VOID"},{"location":"latest/core/org.pinelang.core/-pine-type/from-u-byte/","text":"core / org.pinelang.core / PineType / fromUByte fromUByte \u00b6 fun fromUByte(type: UByte ): PineType","title":"fromUByte - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-type/from-u-byte/#fromubyte","text":"fun fromUByte(type: UByte ): PineType","title":"fromUByte"},{"location":"latest/core/org.pinelang.core/-pine-type/type-name/","text":"core / org.pinelang.core / PineType / typeName typeName \u00b6 val typeName: String","title":"typeName - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-type/type-name/#typename","text":"val typeName: String","title":"typeName"},{"location":"latest/core/org.pinelang.core/-pine-type/type/","text":"core / org.pinelang.core / PineType / type type \u00b6 val type: UByte","title":"type - Pinelang"},{"location":"latest/core/org.pinelang.core/-pine-type/type/#type","text":"val type: UByte","title":"type"},{"location":"latest/core/org.pinelang.core/kotlin.-u-byte/","text":"core / org.pinelang.core / kotlin.UByte Extensions for kotlin.UByte \u00b6 Name Summary isNumberOp fun UByte .isNumberOp(): Boolean","title":"Extensions for kotlin.UByte - Pinelang"},{"location":"latest/core/org.pinelang.core/kotlin.-u-byte/#extensions-for-kotlinubyte","text":"Name Summary isNumberOp fun UByte .isNumberOp(): Boolean","title":"Extensions for kotlin.UByte"},{"location":"latest/core/org.pinelang.core/kotlin.-u-byte/is-number-op/","text":"core / org.pinelang.core / kotlin.UByte / isNumberOp isNumberOp \u00b6 fun UByte .isNumberOp(): Boolean","title":"isNumberOp - Pinelang"},{"location":"latest/core/org.pinelang.core/kotlin.-u-byte/is-number-op/#isnumberop","text":"fun UByte .isNumberOp(): Boolean","title":"isNumberOp"},{"location":"latest/core/org.pinelang.main/","text":"core / org.pinelang.main Package org.pinelang.main \u00b6 Types \u00b6 Name Summary Item class Item : PineObject Functions \u00b6 Name Summary benchmark fun benchmark(script: String , engine: PineEngine ): Unit benchmarkWhole fun benchmarkWhole(script: String , engine: PineEngine ): Unit main fun main(): Unit walkProgram fun walkProgram(objectDefinition: ObjectDefinition ): Unit","title":"Package org.pinelang.main - Pinelang"},{"location":"latest/core/org.pinelang.main/#package-orgpinelangmain","text":"","title":"Package org.pinelang.main"},{"location":"latest/core/org.pinelang.main/#types","text":"Name Summary Item class Item : PineObject","title":"Types"},{"location":"latest/core/org.pinelang.main/#functions","text":"Name Summary benchmark fun benchmark(script: String , engine: PineEngine ): Unit benchmarkWhole fun benchmarkWhole(script: String , engine: PineEngine ): Unit main fun main(): Unit walkProgram fun walkProgram(objectDefinition: ObjectDefinition ): Unit","title":"Functions"},{"location":"latest/core/org.pinelang.main/benchmark-whole/","text":"core / org.pinelang.main / benchmarkWhole benchmarkWhole \u00b6 fun benchmarkWhole(script: String , engine: PineEngine ): Unit","title":"benchmarkWhole - Pinelang"},{"location":"latest/core/org.pinelang.main/benchmark-whole/#benchmarkwhole","text":"fun benchmarkWhole(script: String , engine: PineEngine ): Unit","title":"benchmarkWhole"},{"location":"latest/core/org.pinelang.main/benchmark/","text":"core / org.pinelang.main / benchmark benchmark \u00b6 fun benchmark(script: String , engine: PineEngine ): Unit","title":"benchmark - Pinelang"},{"location":"latest/core/org.pinelang.main/benchmark/#benchmark","text":"fun benchmark(script: String , engine: PineEngine ): Unit","title":"benchmark"},{"location":"latest/core/org.pinelang.main/main/","text":"core / org.pinelang.main / main main \u00b6 fun main(): Unit","title":"main - Pinelang"},{"location":"latest/core/org.pinelang.main/main/#main","text":"fun main(): Unit","title":"main"},{"location":"latest/core/org.pinelang.main/walk-program/","text":"core / org.pinelang.main / walkProgram walkProgram \u00b6 fun walkProgram(objectDefinition: ObjectDefinition ): Unit","title":"walkProgram - Pinelang"},{"location":"latest/core/org.pinelang.main/walk-program/#walkprogram","text":"fun walkProgram(objectDefinition: ObjectDefinition ): Unit","title":"walkProgram"},{"location":"latest/core/org.pinelang.main/-item/","text":"core / org.pinelang.main / Item Item \u00b6 class Item : PineObject Constructors \u00b6 Name Summary <init> Item(id: Int ) Properties \u00b6 Name Summary int1 val int1: Int int2 val int2: Int int3 val int3: Int int4 val int4: Int str1 val str1: String str2 val str2: String str3 val str3: String str4 val str4: String Functions \u00b6 Name Summary getMeta fun getMeta(): PineMetaObject Companion Object Properties \u00b6 Name Summary meta val meta: PineMetaObject Extension Functions \u00b6 Name Summary boolProp fun PineObject .boolProp(kProp: KProperty < Boolean >, initialValue: Boolean = false): PineProp < Boolean > doubleProp fun PineObject .doubleProp(kProp: KProperty < Double >, initialValue: Double = 0.0): PineProp < Double > intProp fun PineObject .intProp(kProp: KProperty < Int >, initialValue: Int = 0): PineProp < Int > registerProp fun <T> PineObject .registerProp(prop: PineProp <T>): PineProp <T> stringProp fun PineObject .stringProp(kProp: KProperty < String >, initialValue: String = \"\"): PineProp < String >","title":"Item - Pinelang"},{"location":"latest/core/org.pinelang.main/-item/#item","text":"class Item : PineObject","title":"Item"},{"location":"latest/core/org.pinelang.main/-item/#constructors","text":"Name Summary <init> Item(id: Int )","title":"Constructors"},{"location":"latest/core/org.pinelang.main/-item/#properties","text":"Name Summary int1 val int1: Int int2 val int2: Int int3 val int3: Int int4 val int4: Int str1 val str1: String str2 val str2: String str3 val str3: String str4 val str4: String","title":"Properties"},{"location":"latest/core/org.pinelang.main/-item/#functions","text":"Name Summary getMeta fun getMeta(): PineMetaObject","title":"Functions"},{"location":"latest/core/org.pinelang.main/-item/#companion-object-properties","text":"Name Summary meta val meta: PineMetaObject","title":"Companion Object Properties"},{"location":"latest/core/org.pinelang.main/-item/#extension-functions","text":"Name Summary boolProp fun PineObject .boolProp(kProp: KProperty < Boolean >, initialValue: Boolean = false): PineProp < Boolean > doubleProp fun PineObject .doubleProp(kProp: KProperty < Double >, initialValue: Double = 0.0): PineProp < Double > intProp fun PineObject .intProp(kProp: KProperty < Int >, initialValue: Int = 0): PineProp < Int > registerProp fun <T> PineObject .registerProp(prop: PineProp <T>): PineProp <T> stringProp fun PineObject .stringProp(kProp: KProperty < String >, initialValue: String = \"\"): PineProp < String >","title":"Extension Functions"},{"location":"latest/core/org.pinelang.main/-item/-init-/","text":"core / org.pinelang.main / Item / <init> <init> \u00b6 Item(id: Int )","title":" init "},{"location":"latest/core/org.pinelang.main/-item/-init-/#init","text":"Item(id: Int )","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.main/-item/get-meta/","text":"core / org.pinelang.main / Item / getMeta getMeta \u00b6 fun getMeta(): PineMetaObject","title":"getMeta - Pinelang"},{"location":"latest/core/org.pinelang.main/-item/get-meta/#getmeta","text":"fun getMeta(): PineMetaObject","title":"getMeta"},{"location":"latest/core/org.pinelang.main/-item/int1/","text":"core / org.pinelang.main / Item / int1 int1 \u00b6 val int1: Int","title":"int1 - Pinelang"},{"location":"latest/core/org.pinelang.main/-item/int1/#int1","text":"val int1: Int","title":"int1"},{"location":"latest/core/org.pinelang.main/-item/int2/","text":"core / org.pinelang.main / Item / int2 int2 \u00b6 val int2: Int","title":"int2 - Pinelang"},{"location":"latest/core/org.pinelang.main/-item/int2/#int2","text":"val int2: Int","title":"int2"},{"location":"latest/core/org.pinelang.main/-item/int3/","text":"core / org.pinelang.main / Item / int3 int3 \u00b6 val int3: Int","title":"int3 - Pinelang"},{"location":"latest/core/org.pinelang.main/-item/int3/#int3","text":"val int3: Int","title":"int3"},{"location":"latest/core/org.pinelang.main/-item/int4/","text":"core / org.pinelang.main / Item / int4 int4 \u00b6 val int4: Int","title":"int4 - Pinelang"},{"location":"latest/core/org.pinelang.main/-item/int4/#int4","text":"val int4: Int","title":"int4"},{"location":"latest/core/org.pinelang.main/-item/meta/","text":"core / org.pinelang.main / Item / meta meta \u00b6 val meta: PineMetaObject","title":"meta - Pinelang"},{"location":"latest/core/org.pinelang.main/-item/meta/#meta","text":"val meta: PineMetaObject","title":"meta"},{"location":"latest/core/org.pinelang.main/-item/str1/","text":"core / org.pinelang.main / Item / str1 str1 \u00b6 val str1: String","title":"str1 - Pinelang"},{"location":"latest/core/org.pinelang.main/-item/str1/#str1","text":"val str1: String","title":"str1"},{"location":"latest/core/org.pinelang.main/-item/str2/","text":"core / org.pinelang.main / Item / str2 str2 \u00b6 val str2: String","title":"str2 - Pinelang"},{"location":"latest/core/org.pinelang.main/-item/str2/#str2","text":"val str2: String","title":"str2"},{"location":"latest/core/org.pinelang.main/-item/str3/","text":"core / org.pinelang.main / Item / str3 str3 \u00b6 val str3: String","title":"str3 - Pinelang"},{"location":"latest/core/org.pinelang.main/-item/str3/#str3","text":"val str3: String","title":"str3"},{"location":"latest/core/org.pinelang.main/-item/str4/","text":"core / org.pinelang.main / Item / str4 str4 \u00b6 val str4: String","title":"str4 - Pinelang"},{"location":"latest/core/org.pinelang.main/-item/str4/#str4","text":"val str4: String","title":"str4"},{"location":"latest/core/org.pinelang.parser/","text":"core / org.pinelang.parser Package org.pinelang.parser \u00b6 Types \u00b6 Name Summary PineLexer open class PineLexer : Lexer PineScript open class PineScript : Parser PineScriptBaseListener This class provides an empty implementation of `[ PineScriptListener ](-pine-script-listener/index.md), which can be extended to create a listener which only needs to handle a subset of the available methods. open class PineScriptBaseListener : [ PineScriptListener`](-pine-script-listener/index.md) PineScriptBaseVisitor This class provides an empty implementation of `[ PineScriptVisitor ](-pine-script-visitor/index.md), which can be extended to create a visitor which only needs to handle a subset of the available methods. open class PineScriptBaseVisitor [ Any ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-any/index.html) !> : AbstractParseTreeVisitor , [ PineScriptVisitor ](-pine-script-visitor/index.md) ` PineScriptListener This interface defines a complete listener for a parse tree produced by `[ PineScript ](-pine-script/index.md). interface PineScriptListener : ParseTreeListener` PineScriptVisitor This interface defines a complete generic visitor for a parse tree produced by `[ PineScript ](-pine-script/index.md). interface PineScriptVisitor [ Any ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-any/index.html) !> : ParseTreeVisitor `","title":"Package org.pinelang.parser - Pinelang"},{"location":"latest/core/org.pinelang.parser/#package-orgpinelangparser","text":"","title":"Package org.pinelang.parser"},{"location":"latest/core/org.pinelang.parser/#types","text":"Name Summary PineLexer open class PineLexer : Lexer PineScript open class PineScript : Parser PineScriptBaseListener This class provides an empty implementation of `[ PineScriptListener ](-pine-script-listener/index.md), which can be extended to create a listener which only needs to handle a subset of the available methods. open class PineScriptBaseListener : [ PineScriptListener`](-pine-script-listener/index.md) PineScriptBaseVisitor This class provides an empty implementation of `[ PineScriptVisitor ](-pine-script-visitor/index.md), which can be extended to create a visitor which only needs to handle a subset of the available methods. open class PineScriptBaseVisitor [ Any ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-any/index.html) !> : AbstractParseTreeVisitor , [ PineScriptVisitor ](-pine-script-visitor/index.md) ` PineScriptListener This interface defines a complete listener for a parse tree produced by `[ PineScript ](-pine-script/index.md). interface PineScriptListener : ParseTreeListener` PineScriptVisitor This interface defines a complete generic visitor for a parse tree produced by `[ PineScript ](-pine-script/index.md). interface PineScriptVisitor [ Any ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-any/index.html) !> : ParseTreeVisitor `","title":"Types"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/","text":"core / org.pinelang.parser / PineLexer PineLexer \u00b6 open class PineLexer : Lexer Constructors \u00b6 Name Summary <init> PineLexer(input: CharStream!) Properties \u00b6 Name Summary _ATN static val _ATN: ATN! _decisionToDFA static val _decisionToDFA: Array <DFA!>! _serializedATN static val _serializedATN: String _sharedContextCache static val _sharedContextCache: PredictionContextCache! AND static val AND: Int AND_AND static val AND_AND: Int channelNames static var channelNames: Array < String !>! COLON static val COLON: Int COMMA static val COMMA: Int COMMENT static val COMMENT: Int DIV static val DIV: Int DOT static val DOT: Int DOUBLE_QUOTE_CLOSE static val DOUBLE_QUOTE_CLOSE: Int DOUBLE_QUOTE_OPEN static val DOUBLE_QUOTE_OPEN: Int EQ static val EQ: Int FALSE static val FALSE: Int FloatLiteral static val FloatLiteral: Int ID static val ID: Int Identifier static val Identifier: Int IMPORT static val IMPORT: Int IntegerLiteral static val IntegerLiteral: Int LBRACE static val LBRACE: Int LBRACKET static val LBRACKET: Int LINE_COMMENT static val LINE_COMMENT: Int LineString static val LineString: Int LineTerminator static val LineTerminator: Int LPAREN static val LPAREN: Int MINUS static val MINUS: Int modeNames static var modeNames: Array < String !>! MULTI static val MULTI: Int NULL static val NULL: Int ObjectType static val ObjectType: Int ON static val ON: Int OR static val OR: Int OR_OR static val OR_OR: Int PLUS static val PLUS: Int QUESTION static val QUESTION: Int RBRACE static val RBRACE: Int RBRACKET static val RBRACKET: Int REMAINDER static val REMAINDER: Int RETURN static val RETURN: Int RPAREN static val RPAREN: Int ruleNames static val ruleNames: Array < String !>! SEMICOLON static val SEMICOLON: Int STRING static val STRING: Int SUFFIX_DP static val SUFFIX_DP: Int SUFFIX_PX static val SUFFIX_PX: Int tokenNames static val tokenNames: Array < String !>! TRUE static val TRUE: Int VOCABULARY static val VOCABULARY: Vocabulary! WS static val WS: Int Functions \u00b6 Name Summary getATN open fun getATN(): ATN! getChannelNames open fun getChannelNames(): Array < String !>! getGrammarFileName open fun getGrammarFileName(): String ! getModeNames open fun getModeNames(): Array < String !>! getRuleNames open fun getRuleNames(): Array < String !>! getSerializedATN open fun getSerializedATN(): String ! getTokenNames open fun ~~getTokenNames~~(): Array < String !>! getVocabulary open fun getVocabulary(): Vocabulary!","title":"PineLexer - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/#pinelexer","text":"open class PineLexer : Lexer","title":"PineLexer"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/#constructors","text":"Name Summary <init> PineLexer(input: CharStream!)","title":"Constructors"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/#properties","text":"Name Summary _ATN static val _ATN: ATN! _decisionToDFA static val _decisionToDFA: Array <DFA!>! _serializedATN static val _serializedATN: String _sharedContextCache static val _sharedContextCache: PredictionContextCache! AND static val AND: Int AND_AND static val AND_AND: Int channelNames static var channelNames: Array < String !>! COLON static val COLON: Int COMMA static val COMMA: Int COMMENT static val COMMENT: Int DIV static val DIV: Int DOT static val DOT: Int DOUBLE_QUOTE_CLOSE static val DOUBLE_QUOTE_CLOSE: Int DOUBLE_QUOTE_OPEN static val DOUBLE_QUOTE_OPEN: Int EQ static val EQ: Int FALSE static val FALSE: Int FloatLiteral static val FloatLiteral: Int ID static val ID: Int Identifier static val Identifier: Int IMPORT static val IMPORT: Int IntegerLiteral static val IntegerLiteral: Int LBRACE static val LBRACE: Int LBRACKET static val LBRACKET: Int LINE_COMMENT static val LINE_COMMENT: Int LineString static val LineString: Int LineTerminator static val LineTerminator: Int LPAREN static val LPAREN: Int MINUS static val MINUS: Int modeNames static var modeNames: Array < String !>! MULTI static val MULTI: Int NULL static val NULL: Int ObjectType static val ObjectType: Int ON static val ON: Int OR static val OR: Int OR_OR static val OR_OR: Int PLUS static val PLUS: Int QUESTION static val QUESTION: Int RBRACE static val RBRACE: Int RBRACKET static val RBRACKET: Int REMAINDER static val REMAINDER: Int RETURN static val RETURN: Int RPAREN static val RPAREN: Int ruleNames static val ruleNames: Array < String !>! SEMICOLON static val SEMICOLON: Int STRING static val STRING: Int SUFFIX_DP static val SUFFIX_DP: Int SUFFIX_PX static val SUFFIX_PX: Int tokenNames static val tokenNames: Array < String !>! TRUE static val TRUE: Int VOCABULARY static val VOCABULARY: Vocabulary! WS static val WS: Int","title":"Properties"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/#functions","text":"Name Summary getATN open fun getATN(): ATN! getChannelNames open fun getChannelNames(): Array < String !>! getGrammarFileName open fun getGrammarFileName(): String ! getModeNames open fun getModeNames(): Array < String !>! getRuleNames open fun getRuleNames(): Array < String !>! getSerializedATN open fun getSerializedATN(): String ! getTokenNames open fun ~~getTokenNames~~(): Array < String !>! getVocabulary open fun getVocabulary(): Vocabulary!","title":"Functions"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-a-n-d/","text":"core / org.pinelang.parser / PineLexer / AND AND \u00b6 static val AND: Int","title":"AND - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-a-n-d/#and","text":"static val AND: Int","title":"AND"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-a-n-d_-a-n-d/","text":"core / org.pinelang.parser / PineLexer / AND_AND AND_AND \u00b6 static val AND_AND: Int","title":"AND_AND - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-a-n-d_-a-n-d/#and_and","text":"static val AND_AND: Int","title":"AND_AND"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-c-o-l-o-n/","text":"core / org.pinelang.parser / PineLexer / COLON COLON \u00b6 static val COLON: Int","title":"COLON - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-c-o-l-o-n/#colon","text":"static val COLON: Int","title":"COLON"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-c-o-m-m-a/","text":"core / org.pinelang.parser / PineLexer / COMMA COMMA \u00b6 static val COMMA: Int","title":"COMMA - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-c-o-m-m-a/#comma","text":"static val COMMA: Int","title":"COMMA"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-c-o-m-m-e-n-t/","text":"core / org.pinelang.parser / PineLexer / COMMENT COMMENT \u00b6 static val COMMENT: Int","title":"COMMENT - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-c-o-m-m-e-n-t/#comment","text":"static val COMMENT: Int","title":"COMMENT"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-d-i-v/","text":"core / org.pinelang.parser / PineLexer / DIV DIV \u00b6 static val DIV: Int","title":"DIV - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-d-i-v/#div","text":"static val DIV: Int","title":"DIV"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-d-o-t/","text":"core / org.pinelang.parser / PineLexer / DOT DOT \u00b6 static val DOT: Int","title":"DOT - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-d-o-t/#dot","text":"static val DOT: Int","title":"DOT"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-d-o-u-b-l-e_-q-u-o-t-e_-c-l-o-s-e/","text":"core / org.pinelang.parser / PineLexer / DOUBLE_QUOTE_CLOSE DOUBLE_QUOTE_CLOSE \u00b6 static val DOUBLE_QUOTE_CLOSE: Int","title":"DOUBLE_QUOTE_CLOSE - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-d-o-u-b-l-e_-q-u-o-t-e_-c-l-o-s-e/#double_quote_close","text":"static val DOUBLE_QUOTE_CLOSE: Int","title":"DOUBLE_QUOTE_CLOSE"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-d-o-u-b-l-e_-q-u-o-t-e_-o-p-e-n/","text":"core / org.pinelang.parser / PineLexer / DOUBLE_QUOTE_OPEN DOUBLE_QUOTE_OPEN \u00b6 static val DOUBLE_QUOTE_OPEN: Int","title":"DOUBLE_QUOTE_OPEN - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-d-o-u-b-l-e_-q-u-o-t-e_-o-p-e-n/#double_quote_open","text":"static val DOUBLE_QUOTE_OPEN: Int","title":"DOUBLE_QUOTE_OPEN"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-e-q/","text":"core / org.pinelang.parser / PineLexer / EQ EQ \u00b6 static val EQ: Int","title":"EQ - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-e-q/#eq","text":"static val EQ: Int","title":"EQ"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-f-a-l-s-e/","text":"core / org.pinelang.parser / PineLexer / FALSE FALSE \u00b6 static val FALSE: Int","title":"FALSE - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-f-a-l-s-e/#false","text":"static val FALSE: Int","title":"FALSE"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-float-literal/","text":"core / org.pinelang.parser / PineLexer / FloatLiteral FloatLiteral \u00b6 static val FloatLiteral: Int","title":"FloatLiteral - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-float-literal/#floatliteral","text":"static val FloatLiteral: Int","title":"FloatLiteral"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-i-d/","text":"core / org.pinelang.parser / PineLexer / ID ID \u00b6 static val ID: Int","title":"ID - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-i-d/#id","text":"static val ID: Int","title":"ID"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-i-m-p-o-r-t/","text":"core / org.pinelang.parser / PineLexer / IMPORT IMPORT \u00b6 static val IMPORT: Int","title":"IMPORT - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-i-m-p-o-r-t/#import","text":"static val IMPORT: Int","title":"IMPORT"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-identifier/","text":"core / org.pinelang.parser / PineLexer / Identifier Identifier \u00b6 static val Identifier: Int","title":"Identifier - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-identifier/#identifier","text":"static val Identifier: Int","title":"Identifier"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-init-/","text":"core / org.pinelang.parser / PineLexer / <init> <init> \u00b6 PineLexer(input: CharStream!)","title":" init "},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-init-/#init","text":"PineLexer(input: CharStream!)","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-integer-literal/","text":"core / org.pinelang.parser / PineLexer / IntegerLiteral IntegerLiteral \u00b6 static val IntegerLiteral: Int","title":"IntegerLiteral - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-integer-literal/#integerliteral","text":"static val IntegerLiteral: Int","title":"IntegerLiteral"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-l-b-r-a-c-e/","text":"core / org.pinelang.parser / PineLexer / LBRACE LBRACE \u00b6 static val LBRACE: Int","title":"LBRACE - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-l-b-r-a-c-e/#lbrace","text":"static val LBRACE: Int","title":"LBRACE"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-l-b-r-a-c-k-e-t/","text":"core / org.pinelang.parser / PineLexer / LBRACKET LBRACKET \u00b6 static val LBRACKET: Int","title":"LBRACKET - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-l-b-r-a-c-k-e-t/#lbracket","text":"static val LBRACKET: Int","title":"LBRACKET"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-l-i-n-e_-c-o-m-m-e-n-t/","text":"core / org.pinelang.parser / PineLexer / LINE_COMMENT LINE_COMMENT \u00b6 static val LINE_COMMENT: Int","title":"LINE_COMMENT - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-l-i-n-e_-c-o-m-m-e-n-t/#line_comment","text":"static val LINE_COMMENT: Int","title":"LINE_COMMENT"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-l-p-a-r-e-n/","text":"core / org.pinelang.parser / PineLexer / LPAREN LPAREN \u00b6 static val LPAREN: Int","title":"LPAREN - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-l-p-a-r-e-n/#lparen","text":"static val LPAREN: Int","title":"LPAREN"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-line-string/","text":"core / org.pinelang.parser / PineLexer / LineString LineString \u00b6 static val LineString: Int","title":"LineString - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-line-string/#linestring","text":"static val LineString: Int","title":"LineString"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-line-terminator/","text":"core / org.pinelang.parser / PineLexer / LineTerminator LineTerminator \u00b6 static val LineTerminator: Int","title":"LineTerminator - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-line-terminator/#lineterminator","text":"static val LineTerminator: Int","title":"LineTerminator"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-m-i-n-u-s/","text":"core / org.pinelang.parser / PineLexer / MINUS MINUS \u00b6 static val MINUS: Int","title":"MINUS - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-m-i-n-u-s/#minus","text":"static val MINUS: Int","title":"MINUS"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-m-u-l-t-i/","text":"core / org.pinelang.parser / PineLexer / MULTI MULTI \u00b6 static val MULTI: Int","title":"MULTI - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-m-u-l-t-i/#multi","text":"static val MULTI: Int","title":"MULTI"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-n-u-l-l/","text":"core / org.pinelang.parser / PineLexer / NULL NULL \u00b6 static val NULL: Int","title":"NULL - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-n-u-l-l/#null","text":"static val NULL: Int","title":"NULL"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-o-n/","text":"core / org.pinelang.parser / PineLexer / ON ON \u00b6 static val ON: Int","title":"ON - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-o-n/#on","text":"static val ON: Int","title":"ON"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-o-r/","text":"core / org.pinelang.parser / PineLexer / OR OR \u00b6 static val OR: Int","title":"OR - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-o-r/#or","text":"static val OR: Int","title":"OR"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-o-r_-o-r/","text":"core / org.pinelang.parser / PineLexer / OR_OR OR_OR \u00b6 static val OR_OR: Int","title":"OR_OR - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-o-r_-o-r/#or_or","text":"static val OR_OR: Int","title":"OR_OR"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-object-type/","text":"core / org.pinelang.parser / PineLexer / ObjectType ObjectType \u00b6 static val ObjectType: Int","title":"ObjectType - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-object-type/#objecttype","text":"static val ObjectType: Int","title":"ObjectType"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-p-l-u-s/","text":"core / org.pinelang.parser / PineLexer / PLUS PLUS \u00b6 static val PLUS: Int","title":"PLUS - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-p-l-u-s/#plus","text":"static val PLUS: Int","title":"PLUS"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-q-u-e-s-t-i-o-n/","text":"core / org.pinelang.parser / PineLexer / QUESTION QUESTION \u00b6 static val QUESTION: Int","title":"QUESTION - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-q-u-e-s-t-i-o-n/#question","text":"static val QUESTION: Int","title":"QUESTION"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-r-b-r-a-c-e/","text":"core / org.pinelang.parser / PineLexer / RBRACE RBRACE \u00b6 static val RBRACE: Int","title":"RBRACE - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-r-b-r-a-c-e/#rbrace","text":"static val RBRACE: Int","title":"RBRACE"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-r-b-r-a-c-k-e-t/","text":"core / org.pinelang.parser / PineLexer / RBRACKET RBRACKET \u00b6 static val RBRACKET: Int","title":"RBRACKET - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-r-b-r-a-c-k-e-t/#rbracket","text":"static val RBRACKET: Int","title":"RBRACKET"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-r-e-m-a-i-n-d-e-r/","text":"core / org.pinelang.parser / PineLexer / REMAINDER REMAINDER \u00b6 static val REMAINDER: Int","title":"REMAINDER - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-r-e-m-a-i-n-d-e-r/#remainder","text":"static val REMAINDER: Int","title":"REMAINDER"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-r-e-t-u-r-n/","text":"core / org.pinelang.parser / PineLexer / RETURN RETURN \u00b6 static val RETURN: Int","title":"RETURN - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-r-e-t-u-r-n/#return","text":"static val RETURN: Int","title":"RETURN"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-r-p-a-r-e-n/","text":"core / org.pinelang.parser / PineLexer / RPAREN RPAREN \u00b6 static val RPAREN: Int","title":"RPAREN - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-r-p-a-r-e-n/#rparen","text":"static val RPAREN: Int","title":"RPAREN"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-s-e-m-i-c-o-l-o-n/","text":"core / org.pinelang.parser / PineLexer / SEMICOLON SEMICOLON \u00b6 static val SEMICOLON: Int","title":"SEMICOLON - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-s-e-m-i-c-o-l-o-n/#semicolon","text":"static val SEMICOLON: Int","title":"SEMICOLON"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-s-t-r-i-n-g/","text":"core / org.pinelang.parser / PineLexer / STRING STRING \u00b6 static val STRING: Int","title":"STRING - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-s-t-r-i-n-g/#string","text":"static val STRING: Int","title":"STRING"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-s-u-f-f-i-x_-d-p/","text":"core / org.pinelang.parser / PineLexer / SUFFIX_DP SUFFIX_DP \u00b6 static val SUFFIX_DP: Int","title":"SUFFIX_DP - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-s-u-f-f-i-x_-d-p/#suffix_dp","text":"static val SUFFIX_DP: Int","title":"SUFFIX_DP"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-s-u-f-f-i-x_-p-x/","text":"core / org.pinelang.parser / PineLexer / SUFFIX_PX SUFFIX_PX \u00b6 static val SUFFIX_PX: Int","title":"SUFFIX_PX - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-s-u-f-f-i-x_-p-x/#suffix_px","text":"static val SUFFIX_PX: Int","title":"SUFFIX_PX"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-t-r-u-e/","text":"core / org.pinelang.parser / PineLexer / TRUE TRUE \u00b6 static val TRUE: Int","title":"TRUE - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-t-r-u-e/#true","text":"static val TRUE: Int","title":"TRUE"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-v-o-c-a-b-u-l-a-r-y/","text":"core / org.pinelang.parser / PineLexer / VOCABULARY VOCABULARY \u00b6 static val VOCABULARY: Vocabulary!","title":"VOCABULARY - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-v-o-c-a-b-u-l-a-r-y/#vocabulary","text":"static val VOCABULARY: Vocabulary!","title":"VOCABULARY"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-w-s/","text":"core / org.pinelang.parser / PineLexer / WS WS \u00b6 static val WS: Int","title":"WS - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/-w-s/#ws","text":"static val WS: Int","title":"WS"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/_-a-t-n/","text":"core / org.pinelang.parser / PineLexer / _ATN _ATN \u00b6 static val _ATN: ATN!","title":"_ATN - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/_-a-t-n/#_atn","text":"static val _ATN: ATN!","title":"_ATN"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/_decision-to-d-f-a/","text":"core / org.pinelang.parser / PineLexer / _decisionToDFA _decisionToDFA \u00b6 protected static val _decisionToDFA: Array <DFA!>!","title":"_decisionToDFA - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/_decision-to-d-f-a/#_decisiontodfa","text":"protected static val _decisionToDFA: Array <DFA!>!","title":"_decisionToDFA"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/_serialized-a-t-n/","text":"core / org.pinelang.parser / PineLexer / _serializedATN _serializedATN \u00b6 static val _serializedATN: String","title":"_serializedATN - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/_serialized-a-t-n/#_serializedatn","text":"static val _serializedATN: String","title":"_serializedATN"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/_shared-context-cache/","text":"core / org.pinelang.parser / PineLexer / _sharedContextCache _sharedContextCache \u00b6 protected static val _sharedContextCache: PredictionContextCache!","title":"_sharedContextCache - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/_shared-context-cache/#_sharedcontextcache","text":"protected static val _sharedContextCache: PredictionContextCache!","title":"_sharedContextCache"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/channel-names/","text":"core / org.pinelang.parser / PineLexer / channelNames channelNames \u00b6 static var channelNames: Array < String !>!","title":"channelNames - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/channel-names/#channelnames","text":"static var channelNames: Array < String !>!","title":"channelNames"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/get-a-t-n/","text":"core / org.pinelang.parser / PineLexer / getATN getATN \u00b6 open fun getATN(): ATN!","title":"getATN - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/get-a-t-n/#getatn","text":"open fun getATN(): ATN!","title":"getATN"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/get-channel-names/","text":"core / org.pinelang.parser / PineLexer / getChannelNames getChannelNames \u00b6 open fun getChannelNames(): Array < String !>!","title":"getChannelNames - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/get-channel-names/#getchannelnames","text":"open fun getChannelNames(): Array < String !>!","title":"getChannelNames"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/get-grammar-file-name/","text":"core / org.pinelang.parser / PineLexer / getGrammarFileName getGrammarFileName \u00b6 open fun getGrammarFileName(): String !","title":"getGrammarFileName - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/get-grammar-file-name/#getgrammarfilename","text":"open fun getGrammarFileName(): String !","title":"getGrammarFileName"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/get-mode-names/","text":"core / org.pinelang.parser / PineLexer / getModeNames getModeNames \u00b6 open fun getModeNames(): Array < String !>!","title":"getModeNames - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/get-mode-names/#getmodenames","text":"open fun getModeNames(): Array < String !>!","title":"getModeNames"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/get-rule-names/","text":"core / org.pinelang.parser / PineLexer / getRuleNames getRuleNames \u00b6 open fun getRuleNames(): Array < String !>!","title":"getRuleNames - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/get-rule-names/#getrulenames","text":"open fun getRuleNames(): Array < String !>!","title":"getRuleNames"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/get-serialized-a-t-n/","text":"core / org.pinelang.parser / PineLexer / getSerializedATN getSerializedATN \u00b6 open fun getSerializedATN(): String !","title":"getSerializedATN - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/get-serialized-a-t-n/#getserializedatn","text":"open fun getSerializedATN(): String !","title":"getSerializedATN"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/get-token-names/","text":"core / org.pinelang.parser / PineLexer / getTokenNames getTokenNames \u00b6 open fun ~~getTokenNames~~(): Array < String !>! Deprecated: Deprecated in Java","title":"getTokenNames - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/get-token-names/#gettokennames","text":"open fun ~~getTokenNames~~(): Array < String !>! Deprecated: Deprecated in Java","title":"getTokenNames"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/get-vocabulary/","text":"core / org.pinelang.parser / PineLexer / getVocabulary getVocabulary \u00b6 open fun getVocabulary(): Vocabulary!","title":"getVocabulary - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/get-vocabulary/#getvocabulary","text":"open fun getVocabulary(): Vocabulary!","title":"getVocabulary"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/mode-names/","text":"core / org.pinelang.parser / PineLexer / modeNames modeNames \u00b6 static var modeNames: Array < String !>!","title":"modeNames - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/mode-names/#modenames","text":"static var modeNames: Array < String !>!","title":"modeNames"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/rule-names/","text":"core / org.pinelang.parser / PineLexer / ruleNames ruleNames \u00b6 static val ruleNames: Array < String !>!","title":"ruleNames - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/rule-names/#rulenames","text":"static val ruleNames: Array < String !>!","title":"ruleNames"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/token-names/","text":"core / org.pinelang.parser / PineLexer / tokenNames tokenNames \u00b6 static val tokenNames: Array < String !>!","title":"tokenNames - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-lexer/token-names/#tokennames","text":"static val tokenNames: Array < String !>!","title":"tokenNames"},{"location":"latest/core/org.pinelang.parser/-pine-script/","text":"core / org.pinelang.parser / PineScript PineScript \u00b6 open class PineScript : Parser Types \u00b6 Name Summary ArgumentsContext open class ArgumentsContext : ParserRuleContext BinaryOperationContext open class BinaryOperationContext : ParserRuleContext CallableExpressionContext open class CallableExpressionContext : ParserRuleContext ExpressionContext open class ExpressionContext : ParserRuleContext IntegerSuffixContext open class IntegerSuffixContext : ParserRuleContext ObjectDefinitionContext open class ObjectDefinitionContext : ParserRuleContext ObjectIdentifierContext open class ObjectIdentifierContext : ParserRuleContext ObjectInitializerContext open class ObjectInitializerContext : ParserRuleContext ObjectPropertyExpressionContext open class ObjectPropertyExpressionContext : ParserRuleContext PrimitiveExpressionContext open class PrimitiveExpressionContext : ParserRuleContext ProgramContext open class ProgramContext : ParserRuleContext PropertyDefinitionContext open class PropertyDefinitionContext : ParserRuleContext RootMemberContext open class RootMemberContext : ParserRuleContext SignalAssignementContext open class SignalAssignementContext : ParserRuleContext StringLiteralContext open class StringLiteralContext : ParserRuleContext Constructors \u00b6 Name Summary <init> PineScript(input: TokenStream!) Properties \u00b6 Name Summary _ATN static val _ATN: ATN! _decisionToDFA static val _decisionToDFA: Array <DFA!>! _serializedATN static val _serializedATN: String _sharedContextCache static val _sharedContextCache: PredictionContextCache! AND static val AND: Int AND_AND static val AND_AND: Int COLON static val COLON: Int COMMA static val COMMA: Int COMMENT static val COMMENT: Int DIV static val DIV: Int DOT static val DOT: Int DOUBLE_QUOTE_CLOSE static val DOUBLE_QUOTE_CLOSE: Int DOUBLE_QUOTE_OPEN static val DOUBLE_QUOTE_OPEN: Int EQ static val EQ: Int FALSE static val FALSE: Int FloatLiteral static val FloatLiteral: Int ID static val ID: Int Identifier static val Identifier: Int IMPORT static val IMPORT: Int IntegerLiteral static val IntegerLiteral: Int LBRACE static val LBRACE: Int LBRACKET static val LBRACKET: Int LINE_COMMENT static val LINE_COMMENT: Int LineTerminator static val LineTerminator: Int LPAREN static val LPAREN: Int MINUS static val MINUS: Int MULTI static val MULTI: Int NULL static val NULL: Int ObjectType static val ObjectType: Int ON static val ON: Int OR static val OR: Int OR_OR static val OR_OR: Int PLUS static val PLUS: Int QUESTION static val QUESTION: Int RBRACE static val RBRACE: Int RBRACKET static val RBRACKET: Int REMAINDER static val REMAINDER: Int RETURN static val RETURN: Int RPAREN static val RPAREN: Int RULE_arguments static val RULE_arguments: Int RULE_binaryOperation static val RULE_binaryOperation: Int RULE_callableExpression static val RULE_callableExpression: Int RULE_expression static val RULE_expression: Int RULE_integerSuffix static val RULE_integerSuffix: Int RULE_objectDefinition static val RULE_objectDefinition: Int RULE_objectIdentifier static val RULE_objectIdentifier: Int RULE_objectInitializer static val RULE_objectInitializer: Int RULE_objectPropertyExpression static val RULE_objectPropertyExpression: Int RULE_primitiveExpression static val RULE_primitiveExpression: Int RULE_program static val RULE_program: Int RULE_propertyDefinition static val RULE_propertyDefinition: Int RULE_rootMember static val RULE_rootMember: Int RULE_signalAssignement static val RULE_signalAssignement: Int RULE_stringLiteral static val RULE_stringLiteral: Int ruleNames static val ruleNames: Array < String !>! SEMICOLON static val SEMICOLON: Int STRING static val STRING: Int SUFFIX_DP static val SUFFIX_DP: Int SUFFIX_PX static val SUFFIX_PX: Int tokenNames static val tokenNames: Array < String !>! TRUE static val TRUE: Int VOCABULARY static val VOCABULARY: Vocabulary! WS static val WS: Int Functions \u00b6 Name Summary arguments fun arguments(): ArgumentsContext! binaryOperation fun binaryOperation(): BinaryOperationContext! callableExpression fun callableExpression(): CallableExpressionContext! expression fun expression(): ExpressionContext! getATN open fun getATN(): ATN! getGrammarFileName open fun getGrammarFileName(): String ! getRuleNames open fun getRuleNames(): Array < String !>! getSerializedATN open fun getSerializedATN(): String ! getTokenNames open fun ~~getTokenNames~~(): Array < String !>! getVocabulary open fun getVocabulary(): Vocabulary! integerSuffix fun integerSuffix(): IntegerSuffixContext! objectDefinition fun objectDefinition(): ObjectDefinitionContext! objectIdentifier fun objectIdentifier(): ObjectIdentifierContext! objectInitializer fun objectInitializer(): ObjectInitializerContext! objectPropertyExpression fun objectPropertyExpression(): ObjectPropertyExpressionContext! primitiveExpression fun primitiveExpression(): PrimitiveExpressionContext! program fun program(): ProgramContext! propertyDefinition fun propertyDefinition(): PropertyDefinitionContext! rootMember fun rootMember(): RootMemberContext! sempred open fun sempred(_localctx: RuleContext!, ruleIndex: Int , predIndex: Int ): Boolean signalAssignement fun signalAssignement(): SignalAssignementContext! stringLiteral fun stringLiteral(): StringLiteralContext!","title":"PineScript - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/#pinescript","text":"open class PineScript : Parser","title":"PineScript"},{"location":"latest/core/org.pinelang.parser/-pine-script/#types","text":"Name Summary ArgumentsContext open class ArgumentsContext : ParserRuleContext BinaryOperationContext open class BinaryOperationContext : ParserRuleContext CallableExpressionContext open class CallableExpressionContext : ParserRuleContext ExpressionContext open class ExpressionContext : ParserRuleContext IntegerSuffixContext open class IntegerSuffixContext : ParserRuleContext ObjectDefinitionContext open class ObjectDefinitionContext : ParserRuleContext ObjectIdentifierContext open class ObjectIdentifierContext : ParserRuleContext ObjectInitializerContext open class ObjectInitializerContext : ParserRuleContext ObjectPropertyExpressionContext open class ObjectPropertyExpressionContext : ParserRuleContext PrimitiveExpressionContext open class PrimitiveExpressionContext : ParserRuleContext ProgramContext open class ProgramContext : ParserRuleContext PropertyDefinitionContext open class PropertyDefinitionContext : ParserRuleContext RootMemberContext open class RootMemberContext : ParserRuleContext SignalAssignementContext open class SignalAssignementContext : ParserRuleContext StringLiteralContext open class StringLiteralContext : ParserRuleContext","title":"Types"},{"location":"latest/core/org.pinelang.parser/-pine-script/#constructors","text":"Name Summary <init> PineScript(input: TokenStream!)","title":"Constructors"},{"location":"latest/core/org.pinelang.parser/-pine-script/#properties","text":"Name Summary _ATN static val _ATN: ATN! _decisionToDFA static val _decisionToDFA: Array <DFA!>! _serializedATN static val _serializedATN: String _sharedContextCache static val _sharedContextCache: PredictionContextCache! AND static val AND: Int AND_AND static val AND_AND: Int COLON static val COLON: Int COMMA static val COMMA: Int COMMENT static val COMMENT: Int DIV static val DIV: Int DOT static val DOT: Int DOUBLE_QUOTE_CLOSE static val DOUBLE_QUOTE_CLOSE: Int DOUBLE_QUOTE_OPEN static val DOUBLE_QUOTE_OPEN: Int EQ static val EQ: Int FALSE static val FALSE: Int FloatLiteral static val FloatLiteral: Int ID static val ID: Int Identifier static val Identifier: Int IMPORT static val IMPORT: Int IntegerLiteral static val IntegerLiteral: Int LBRACE static val LBRACE: Int LBRACKET static val LBRACKET: Int LINE_COMMENT static val LINE_COMMENT: Int LineTerminator static val LineTerminator: Int LPAREN static val LPAREN: Int MINUS static val MINUS: Int MULTI static val MULTI: Int NULL static val NULL: Int ObjectType static val ObjectType: Int ON static val ON: Int OR static val OR: Int OR_OR static val OR_OR: Int PLUS static val PLUS: Int QUESTION static val QUESTION: Int RBRACE static val RBRACE: Int RBRACKET static val RBRACKET: Int REMAINDER static val REMAINDER: Int RETURN static val RETURN: Int RPAREN static val RPAREN: Int RULE_arguments static val RULE_arguments: Int RULE_binaryOperation static val RULE_binaryOperation: Int RULE_callableExpression static val RULE_callableExpression: Int RULE_expression static val RULE_expression: Int RULE_integerSuffix static val RULE_integerSuffix: Int RULE_objectDefinition static val RULE_objectDefinition: Int RULE_objectIdentifier static val RULE_objectIdentifier: Int RULE_objectInitializer static val RULE_objectInitializer: Int RULE_objectPropertyExpression static val RULE_objectPropertyExpression: Int RULE_primitiveExpression static val RULE_primitiveExpression: Int RULE_program static val RULE_program: Int RULE_propertyDefinition static val RULE_propertyDefinition: Int RULE_rootMember static val RULE_rootMember: Int RULE_signalAssignement static val RULE_signalAssignement: Int RULE_stringLiteral static val RULE_stringLiteral: Int ruleNames static val ruleNames: Array < String !>! SEMICOLON static val SEMICOLON: Int STRING static val STRING: Int SUFFIX_DP static val SUFFIX_DP: Int SUFFIX_PX static val SUFFIX_PX: Int tokenNames static val tokenNames: Array < String !>! TRUE static val TRUE: Int VOCABULARY static val VOCABULARY: Vocabulary! WS static val WS: Int","title":"Properties"},{"location":"latest/core/org.pinelang.parser/-pine-script/#functions","text":"Name Summary arguments fun arguments(): ArgumentsContext! binaryOperation fun binaryOperation(): BinaryOperationContext! callableExpression fun callableExpression(): CallableExpressionContext! expression fun expression(): ExpressionContext! getATN open fun getATN(): ATN! getGrammarFileName open fun getGrammarFileName(): String ! getRuleNames open fun getRuleNames(): Array < String !>! getSerializedATN open fun getSerializedATN(): String ! getTokenNames open fun ~~getTokenNames~~(): Array < String !>! getVocabulary open fun getVocabulary(): Vocabulary! integerSuffix fun integerSuffix(): IntegerSuffixContext! objectDefinition fun objectDefinition(): ObjectDefinitionContext! objectIdentifier fun objectIdentifier(): ObjectIdentifierContext! objectInitializer fun objectInitializer(): ObjectInitializerContext! objectPropertyExpression fun objectPropertyExpression(): ObjectPropertyExpressionContext! primitiveExpression fun primitiveExpression(): PrimitiveExpressionContext! program fun program(): ProgramContext! propertyDefinition fun propertyDefinition(): PropertyDefinitionContext! rootMember fun rootMember(): RootMemberContext! sempred open fun sempred(_localctx: RuleContext!, ruleIndex: Int , predIndex: Int ): Boolean signalAssignement fun signalAssignement(): SignalAssignementContext! stringLiteral fun stringLiteral(): StringLiteralContext!","title":"Functions"},{"location":"latest/core/org.pinelang.parser/-pine-script/-a-n-d/","text":"core / org.pinelang.parser / PineScript / AND AND \u00b6 static val AND: Int","title":"AND - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-a-n-d/#and","text":"static val AND: Int","title":"AND"},{"location":"latest/core/org.pinelang.parser/-pine-script/-a-n-d_-a-n-d/","text":"core / org.pinelang.parser / PineScript / AND_AND AND_AND \u00b6 static val AND_AND: Int","title":"AND_AND - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-a-n-d_-a-n-d/#and_and","text":"static val AND_AND: Int","title":"AND_AND"},{"location":"latest/core/org.pinelang.parser/-pine-script/-c-o-l-o-n/","text":"core / org.pinelang.parser / PineScript / COLON COLON \u00b6 static val COLON: Int","title":"COLON - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-c-o-l-o-n/#colon","text":"static val COLON: Int","title":"COLON"},{"location":"latest/core/org.pinelang.parser/-pine-script/-c-o-m-m-a/","text":"core / org.pinelang.parser / PineScript / COMMA COMMA \u00b6 static val COMMA: Int","title":"COMMA - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-c-o-m-m-a/#comma","text":"static val COMMA: Int","title":"COMMA"},{"location":"latest/core/org.pinelang.parser/-pine-script/-c-o-m-m-e-n-t/","text":"core / org.pinelang.parser / PineScript / COMMENT COMMENT \u00b6 static val COMMENT: Int","title":"COMMENT - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-c-o-m-m-e-n-t/#comment","text":"static val COMMENT: Int","title":"COMMENT"},{"location":"latest/core/org.pinelang.parser/-pine-script/-d-i-v/","text":"core / org.pinelang.parser / PineScript / DIV DIV \u00b6 static val DIV: Int","title":"DIV - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-d-i-v/#div","text":"static val DIV: Int","title":"DIV"},{"location":"latest/core/org.pinelang.parser/-pine-script/-d-o-t/","text":"core / org.pinelang.parser / PineScript / DOT DOT \u00b6 static val DOT: Int","title":"DOT - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-d-o-t/#dot","text":"static val DOT: Int","title":"DOT"},{"location":"latest/core/org.pinelang.parser/-pine-script/-d-o-u-b-l-e_-q-u-o-t-e_-c-l-o-s-e/","text":"core / org.pinelang.parser / PineScript / DOUBLE_QUOTE_CLOSE DOUBLE_QUOTE_CLOSE \u00b6 static val DOUBLE_QUOTE_CLOSE: Int","title":"DOUBLE_QUOTE_CLOSE - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-d-o-u-b-l-e_-q-u-o-t-e_-c-l-o-s-e/#double_quote_close","text":"static val DOUBLE_QUOTE_CLOSE: Int","title":"DOUBLE_QUOTE_CLOSE"},{"location":"latest/core/org.pinelang.parser/-pine-script/-d-o-u-b-l-e_-q-u-o-t-e_-o-p-e-n/","text":"core / org.pinelang.parser / PineScript / DOUBLE_QUOTE_OPEN DOUBLE_QUOTE_OPEN \u00b6 static val DOUBLE_QUOTE_OPEN: Int","title":"DOUBLE_QUOTE_OPEN - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-d-o-u-b-l-e_-q-u-o-t-e_-o-p-e-n/#double_quote_open","text":"static val DOUBLE_QUOTE_OPEN: Int","title":"DOUBLE_QUOTE_OPEN"},{"location":"latest/core/org.pinelang.parser/-pine-script/-e-q/","text":"core / org.pinelang.parser / PineScript / EQ EQ \u00b6 static val EQ: Int","title":"EQ - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-e-q/#eq","text":"static val EQ: Int","title":"EQ"},{"location":"latest/core/org.pinelang.parser/-pine-script/-f-a-l-s-e/","text":"core / org.pinelang.parser / PineScript / FALSE FALSE \u00b6 static val FALSE: Int","title":"FALSE - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-f-a-l-s-e/#false","text":"static val FALSE: Int","title":"FALSE"},{"location":"latest/core/org.pinelang.parser/-pine-script/-float-literal/","text":"core / org.pinelang.parser / PineScript / FloatLiteral FloatLiteral \u00b6 static val FloatLiteral: Int","title":"FloatLiteral - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-float-literal/#floatliteral","text":"static val FloatLiteral: Int","title":"FloatLiteral"},{"location":"latest/core/org.pinelang.parser/-pine-script/-i-d/","text":"core / org.pinelang.parser / PineScript / ID ID \u00b6 static val ID: Int","title":"ID - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-i-d/#id","text":"static val ID: Int","title":"ID"},{"location":"latest/core/org.pinelang.parser/-pine-script/-i-m-p-o-r-t/","text":"core / org.pinelang.parser / PineScript / IMPORT IMPORT \u00b6 static val IMPORT: Int","title":"IMPORT - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-i-m-p-o-r-t/#import","text":"static val IMPORT: Int","title":"IMPORT"},{"location":"latest/core/org.pinelang.parser/-pine-script/-identifier/","text":"core / org.pinelang.parser / PineScript / Identifier Identifier \u00b6 static val Identifier: Int","title":"Identifier - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-identifier/#identifier","text":"static val Identifier: Int","title":"Identifier"},{"location":"latest/core/org.pinelang.parser/-pine-script/-init-/","text":"core / org.pinelang.parser / PineScript / <init> <init> \u00b6 PineScript(input: TokenStream!)","title":" init "},{"location":"latest/core/org.pinelang.parser/-pine-script/-init-/#init","text":"PineScript(input: TokenStream!)","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.parser/-pine-script/-integer-literal/","text":"core / org.pinelang.parser / PineScript / IntegerLiteral IntegerLiteral \u00b6 static val IntegerLiteral: Int","title":"IntegerLiteral - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-integer-literal/#integerliteral","text":"static val IntegerLiteral: Int","title":"IntegerLiteral"},{"location":"latest/core/org.pinelang.parser/-pine-script/-l-b-r-a-c-e/","text":"core / org.pinelang.parser / PineScript / LBRACE LBRACE \u00b6 static val LBRACE: Int","title":"LBRACE - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-l-b-r-a-c-e/#lbrace","text":"static val LBRACE: Int","title":"LBRACE"},{"location":"latest/core/org.pinelang.parser/-pine-script/-l-b-r-a-c-k-e-t/","text":"core / org.pinelang.parser / PineScript / LBRACKET LBRACKET \u00b6 static val LBRACKET: Int","title":"LBRACKET - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-l-b-r-a-c-k-e-t/#lbracket","text":"static val LBRACKET: Int","title":"LBRACKET"},{"location":"latest/core/org.pinelang.parser/-pine-script/-l-i-n-e_-c-o-m-m-e-n-t/","text":"core / org.pinelang.parser / PineScript / LINE_COMMENT LINE_COMMENT \u00b6 static val LINE_COMMENT: Int","title":"LINE_COMMENT - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-l-i-n-e_-c-o-m-m-e-n-t/#line_comment","text":"static val LINE_COMMENT: Int","title":"LINE_COMMENT"},{"location":"latest/core/org.pinelang.parser/-pine-script/-l-p-a-r-e-n/","text":"core / org.pinelang.parser / PineScript / LPAREN LPAREN \u00b6 static val LPAREN: Int","title":"LPAREN - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-l-p-a-r-e-n/#lparen","text":"static val LPAREN: Int","title":"LPAREN"},{"location":"latest/core/org.pinelang.parser/-pine-script/-line-terminator/","text":"core / org.pinelang.parser / PineScript / LineTerminator LineTerminator \u00b6 static val LineTerminator: Int","title":"LineTerminator - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-line-terminator/#lineterminator","text":"static val LineTerminator: Int","title":"LineTerminator"},{"location":"latest/core/org.pinelang.parser/-pine-script/-m-i-n-u-s/","text":"core / org.pinelang.parser / PineScript / MINUS MINUS \u00b6 static val MINUS: Int","title":"MINUS - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-m-i-n-u-s/#minus","text":"static val MINUS: Int","title":"MINUS"},{"location":"latest/core/org.pinelang.parser/-pine-script/-m-u-l-t-i/","text":"core / org.pinelang.parser / PineScript / MULTI MULTI \u00b6 static val MULTI: Int","title":"MULTI - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-m-u-l-t-i/#multi","text":"static val MULTI: Int","title":"MULTI"},{"location":"latest/core/org.pinelang.parser/-pine-script/-n-u-l-l/","text":"core / org.pinelang.parser / PineScript / NULL NULL \u00b6 static val NULL: Int","title":"NULL - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-n-u-l-l/#null","text":"static val NULL: Int","title":"NULL"},{"location":"latest/core/org.pinelang.parser/-pine-script/-o-n/","text":"core / org.pinelang.parser / PineScript / ON ON \u00b6 static val ON: Int","title":"ON - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-o-n/#on","text":"static val ON: Int","title":"ON"},{"location":"latest/core/org.pinelang.parser/-pine-script/-o-r/","text":"core / org.pinelang.parser / PineScript / OR OR \u00b6 static val OR: Int","title":"OR - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-o-r/#or","text":"static val OR: Int","title":"OR"},{"location":"latest/core/org.pinelang.parser/-pine-script/-o-r_-o-r/","text":"core / org.pinelang.parser / PineScript / OR_OR OR_OR \u00b6 static val OR_OR: Int","title":"OR_OR - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-o-r_-o-r/#or_or","text":"static val OR_OR: Int","title":"OR_OR"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-type/","text":"core / org.pinelang.parser / PineScript / ObjectType ObjectType \u00b6 static val ObjectType: Int","title":"ObjectType - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-type/#objecttype","text":"static val ObjectType: Int","title":"ObjectType"},{"location":"latest/core/org.pinelang.parser/-pine-script/-p-l-u-s/","text":"core / org.pinelang.parser / PineScript / PLUS PLUS \u00b6 static val PLUS: Int","title":"PLUS - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-p-l-u-s/#plus","text":"static val PLUS: Int","title":"PLUS"},{"location":"latest/core/org.pinelang.parser/-pine-script/-q-u-e-s-t-i-o-n/","text":"core / org.pinelang.parser / PineScript / QUESTION QUESTION \u00b6 static val QUESTION: Int","title":"QUESTION - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-q-u-e-s-t-i-o-n/#question","text":"static val QUESTION: Int","title":"QUESTION"},{"location":"latest/core/org.pinelang.parser/-pine-script/-r-b-r-a-c-e/","text":"core / org.pinelang.parser / PineScript / RBRACE RBRACE \u00b6 static val RBRACE: Int","title":"RBRACE - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-r-b-r-a-c-e/#rbrace","text":"static val RBRACE: Int","title":"RBRACE"},{"location":"latest/core/org.pinelang.parser/-pine-script/-r-b-r-a-c-k-e-t/","text":"core / org.pinelang.parser / PineScript / RBRACKET RBRACKET \u00b6 static val RBRACKET: Int","title":"RBRACKET - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-r-b-r-a-c-k-e-t/#rbracket","text":"static val RBRACKET: Int","title":"RBRACKET"},{"location":"latest/core/org.pinelang.parser/-pine-script/-r-e-m-a-i-n-d-e-r/","text":"core / org.pinelang.parser / PineScript / REMAINDER REMAINDER \u00b6 static val REMAINDER: Int","title":"REMAINDER - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-r-e-m-a-i-n-d-e-r/#remainder","text":"static val REMAINDER: Int","title":"REMAINDER"},{"location":"latest/core/org.pinelang.parser/-pine-script/-r-e-t-u-r-n/","text":"core / org.pinelang.parser / PineScript / RETURN RETURN \u00b6 static val RETURN: Int","title":"RETURN - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-r-e-t-u-r-n/#return","text":"static val RETURN: Int","title":"RETURN"},{"location":"latest/core/org.pinelang.parser/-pine-script/-r-p-a-r-e-n/","text":"core / org.pinelang.parser / PineScript / RPAREN RPAREN \u00b6 static val RPAREN: Int","title":"RPAREN - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-r-p-a-r-e-n/#rparen","text":"static val RPAREN: Int","title":"RPAREN"},{"location":"latest/core/org.pinelang.parser/-pine-script/-r-u-l-e_arguments/","text":"core / org.pinelang.parser / PineScript / RULE_arguments RULE_arguments \u00b6 static val RULE_arguments: Int","title":"RULE_arguments - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-r-u-l-e_arguments/#rule_arguments","text":"static val RULE_arguments: Int","title":"RULE_arguments"},{"location":"latest/core/org.pinelang.parser/-pine-script/-r-u-l-e_binary-operation/","text":"core / org.pinelang.parser / PineScript / RULE_binaryOperation RULE_binaryOperation \u00b6 static val RULE_binaryOperation: Int","title":"RULE_binaryOperation - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-r-u-l-e_binary-operation/#rule_binaryoperation","text":"static val RULE_binaryOperation: Int","title":"RULE_binaryOperation"},{"location":"latest/core/org.pinelang.parser/-pine-script/-r-u-l-e_callable-expression/","text":"core / org.pinelang.parser / PineScript / RULE_callableExpression RULE_callableExpression \u00b6 static val RULE_callableExpression: Int","title":"RULE_callableExpression - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-r-u-l-e_callable-expression/#rule_callableexpression","text":"static val RULE_callableExpression: Int","title":"RULE_callableExpression"},{"location":"latest/core/org.pinelang.parser/-pine-script/-r-u-l-e_expression/","text":"core / org.pinelang.parser / PineScript / RULE_expression RULE_expression \u00b6 static val RULE_expression: Int","title":"RULE_expression - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-r-u-l-e_expression/#rule_expression","text":"static val RULE_expression: Int","title":"RULE_expression"},{"location":"latest/core/org.pinelang.parser/-pine-script/-r-u-l-e_integer-suffix/","text":"core / org.pinelang.parser / PineScript / RULE_integerSuffix RULE_integerSuffix \u00b6 static val RULE_integerSuffix: Int","title":"RULE_integerSuffix - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-r-u-l-e_integer-suffix/#rule_integersuffix","text":"static val RULE_integerSuffix: Int","title":"RULE_integerSuffix"},{"location":"latest/core/org.pinelang.parser/-pine-script/-r-u-l-e_object-definition/","text":"core / org.pinelang.parser / PineScript / RULE_objectDefinition RULE_objectDefinition \u00b6 static val RULE_objectDefinition: Int","title":"RULE_objectDefinition - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-r-u-l-e_object-definition/#rule_objectdefinition","text":"static val RULE_objectDefinition: Int","title":"RULE_objectDefinition"},{"location":"latest/core/org.pinelang.parser/-pine-script/-r-u-l-e_object-identifier/","text":"core / org.pinelang.parser / PineScript / RULE_objectIdentifier RULE_objectIdentifier \u00b6 static val RULE_objectIdentifier: Int","title":"RULE_objectIdentifier - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-r-u-l-e_object-identifier/#rule_objectidentifier","text":"static val RULE_objectIdentifier: Int","title":"RULE_objectIdentifier"},{"location":"latest/core/org.pinelang.parser/-pine-script/-r-u-l-e_object-initializer/","text":"core / org.pinelang.parser / PineScript / RULE_objectInitializer RULE_objectInitializer \u00b6 static val RULE_objectInitializer: Int","title":"RULE_objectInitializer - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-r-u-l-e_object-initializer/#rule_objectinitializer","text":"static val RULE_objectInitializer: Int","title":"RULE_objectInitializer"},{"location":"latest/core/org.pinelang.parser/-pine-script/-r-u-l-e_object-property-expression/","text":"core / org.pinelang.parser / PineScript / RULE_objectPropertyExpression RULE_objectPropertyExpression \u00b6 static val RULE_objectPropertyExpression: Int","title":"RULE_objectPropertyExpression - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-r-u-l-e_object-property-expression/#rule_objectpropertyexpression","text":"static val RULE_objectPropertyExpression: Int","title":"RULE_objectPropertyExpression"},{"location":"latest/core/org.pinelang.parser/-pine-script/-r-u-l-e_primitive-expression/","text":"core / org.pinelang.parser / PineScript / RULE_primitiveExpression RULE_primitiveExpression \u00b6 static val RULE_primitiveExpression: Int","title":"RULE_primitiveExpression - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-r-u-l-e_primitive-expression/#rule_primitiveexpression","text":"static val RULE_primitiveExpression: Int","title":"RULE_primitiveExpression"},{"location":"latest/core/org.pinelang.parser/-pine-script/-r-u-l-e_program/","text":"core / org.pinelang.parser / PineScript / RULE_program RULE_program \u00b6 static val RULE_program: Int","title":"RULE_program - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-r-u-l-e_program/#rule_program","text":"static val RULE_program: Int","title":"RULE_program"},{"location":"latest/core/org.pinelang.parser/-pine-script/-r-u-l-e_property-definition/","text":"core / org.pinelang.parser / PineScript / RULE_propertyDefinition RULE_propertyDefinition \u00b6 static val RULE_propertyDefinition: Int","title":"RULE_propertyDefinition - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-r-u-l-e_property-definition/#rule_propertydefinition","text":"static val RULE_propertyDefinition: Int","title":"RULE_propertyDefinition"},{"location":"latest/core/org.pinelang.parser/-pine-script/-r-u-l-e_root-member/","text":"core / org.pinelang.parser / PineScript / RULE_rootMember RULE_rootMember \u00b6 static val RULE_rootMember: Int","title":"RULE_rootMember - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-r-u-l-e_root-member/#rule_rootmember","text":"static val RULE_rootMember: Int","title":"RULE_rootMember"},{"location":"latest/core/org.pinelang.parser/-pine-script/-r-u-l-e_signal-assignement/","text":"core / org.pinelang.parser / PineScript / RULE_signalAssignement RULE_signalAssignement \u00b6 static val RULE_signalAssignement: Int","title":"RULE_signalAssignement - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-r-u-l-e_signal-assignement/#rule_signalassignement","text":"static val RULE_signalAssignement: Int","title":"RULE_signalAssignement"},{"location":"latest/core/org.pinelang.parser/-pine-script/-r-u-l-e_string-literal/","text":"core / org.pinelang.parser / PineScript / RULE_stringLiteral RULE_stringLiteral \u00b6 static val RULE_stringLiteral: Int","title":"RULE_stringLiteral - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-r-u-l-e_string-literal/#rule_stringliteral","text":"static val RULE_stringLiteral: Int","title":"RULE_stringLiteral"},{"location":"latest/core/org.pinelang.parser/-pine-script/-s-e-m-i-c-o-l-o-n/","text":"core / org.pinelang.parser / PineScript / SEMICOLON SEMICOLON \u00b6 static val SEMICOLON: Int","title":"SEMICOLON - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-s-e-m-i-c-o-l-o-n/#semicolon","text":"static val SEMICOLON: Int","title":"SEMICOLON"},{"location":"latest/core/org.pinelang.parser/-pine-script/-s-t-r-i-n-g/","text":"core / org.pinelang.parser / PineScript / STRING STRING \u00b6 static val STRING: Int","title":"STRING - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-s-t-r-i-n-g/#string","text":"static val STRING: Int","title":"STRING"},{"location":"latest/core/org.pinelang.parser/-pine-script/-s-u-f-f-i-x_-d-p/","text":"core / org.pinelang.parser / PineScript / SUFFIX_DP SUFFIX_DP \u00b6 static val SUFFIX_DP: Int","title":"SUFFIX_DP - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-s-u-f-f-i-x_-d-p/#suffix_dp","text":"static val SUFFIX_DP: Int","title":"SUFFIX_DP"},{"location":"latest/core/org.pinelang.parser/-pine-script/-s-u-f-f-i-x_-p-x/","text":"core / org.pinelang.parser / PineScript / SUFFIX_PX SUFFIX_PX \u00b6 static val SUFFIX_PX: Int","title":"SUFFIX_PX - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-s-u-f-f-i-x_-p-x/#suffix_px","text":"static val SUFFIX_PX: Int","title":"SUFFIX_PX"},{"location":"latest/core/org.pinelang.parser/-pine-script/-t-r-u-e/","text":"core / org.pinelang.parser / PineScript / TRUE TRUE \u00b6 static val TRUE: Int","title":"TRUE - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-t-r-u-e/#true","text":"static val TRUE: Int","title":"TRUE"},{"location":"latest/core/org.pinelang.parser/-pine-script/-v-o-c-a-b-u-l-a-r-y/","text":"core / org.pinelang.parser / PineScript / VOCABULARY VOCABULARY \u00b6 static val VOCABULARY: Vocabulary!","title":"VOCABULARY - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-v-o-c-a-b-u-l-a-r-y/#vocabulary","text":"static val VOCABULARY: Vocabulary!","title":"VOCABULARY"},{"location":"latest/core/org.pinelang.parser/-pine-script/-w-s/","text":"core / org.pinelang.parser / PineScript / WS WS \u00b6 static val WS: Int","title":"WS - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-w-s/#ws","text":"static val WS: Int","title":"WS"},{"location":"latest/core/org.pinelang.parser/-pine-script/_-a-t-n/","text":"core / org.pinelang.parser / PineScript / _ATN _ATN \u00b6 static val _ATN: ATN!","title":"_ATN - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/_-a-t-n/#_atn","text":"static val _ATN: ATN!","title":"_ATN"},{"location":"latest/core/org.pinelang.parser/-pine-script/_decision-to-d-f-a/","text":"core / org.pinelang.parser / PineScript / _decisionToDFA _decisionToDFA \u00b6 protected static val _decisionToDFA: Array <DFA!>!","title":"_decisionToDFA - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/_decision-to-d-f-a/#_decisiontodfa","text":"protected static val _decisionToDFA: Array <DFA!>!","title":"_decisionToDFA"},{"location":"latest/core/org.pinelang.parser/-pine-script/_serialized-a-t-n/","text":"core / org.pinelang.parser / PineScript / _serializedATN _serializedATN \u00b6 static val _serializedATN: String","title":"_serializedATN - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/_serialized-a-t-n/#_serializedatn","text":"static val _serializedATN: String","title":"_serializedATN"},{"location":"latest/core/org.pinelang.parser/-pine-script/_shared-context-cache/","text":"core / org.pinelang.parser / PineScript / _sharedContextCache _sharedContextCache \u00b6 protected static val _sharedContextCache: PredictionContextCache!","title":"_sharedContextCache - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/_shared-context-cache/#_sharedcontextcache","text":"protected static val _sharedContextCache: PredictionContextCache!","title":"_sharedContextCache"},{"location":"latest/core/org.pinelang.parser/-pine-script/arguments/","text":"core / org.pinelang.parser / PineScript / arguments arguments \u00b6 fun arguments(): ArgumentsContext!","title":"arguments - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/arguments/#arguments","text":"fun arguments(): ArgumentsContext!","title":"arguments"},{"location":"latest/core/org.pinelang.parser/-pine-script/binary-operation/","text":"core / org.pinelang.parser / PineScript / binaryOperation binaryOperation \u00b6 fun binaryOperation(): BinaryOperationContext!","title":"binaryOperation - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/binary-operation/#binaryoperation","text":"fun binaryOperation(): BinaryOperationContext!","title":"binaryOperation"},{"location":"latest/core/org.pinelang.parser/-pine-script/callable-expression/","text":"core / org.pinelang.parser / PineScript / callableExpression callableExpression \u00b6 fun callableExpression(): CallableExpressionContext!","title":"callableExpression - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/callable-expression/#callableexpression","text":"fun callableExpression(): CallableExpressionContext!","title":"callableExpression"},{"location":"latest/core/org.pinelang.parser/-pine-script/expression/","text":"core / org.pinelang.parser / PineScript / expression expression \u00b6 fun expression(): ExpressionContext!","title":"expression - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/expression/#expression","text":"fun expression(): ExpressionContext!","title":"expression"},{"location":"latest/core/org.pinelang.parser/-pine-script/get-a-t-n/","text":"core / org.pinelang.parser / PineScript / getATN getATN \u00b6 open fun getATN(): ATN!","title":"getATN - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/get-a-t-n/#getatn","text":"open fun getATN(): ATN!","title":"getATN"},{"location":"latest/core/org.pinelang.parser/-pine-script/get-grammar-file-name/","text":"core / org.pinelang.parser / PineScript / getGrammarFileName getGrammarFileName \u00b6 open fun getGrammarFileName(): String !","title":"getGrammarFileName - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/get-grammar-file-name/#getgrammarfilename","text":"open fun getGrammarFileName(): String !","title":"getGrammarFileName"},{"location":"latest/core/org.pinelang.parser/-pine-script/get-rule-names/","text":"core / org.pinelang.parser / PineScript / getRuleNames getRuleNames \u00b6 open fun getRuleNames(): Array < String !>!","title":"getRuleNames - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/get-rule-names/#getrulenames","text":"open fun getRuleNames(): Array < String !>!","title":"getRuleNames"},{"location":"latest/core/org.pinelang.parser/-pine-script/get-serialized-a-t-n/","text":"core / org.pinelang.parser / PineScript / getSerializedATN getSerializedATN \u00b6 open fun getSerializedATN(): String !","title":"getSerializedATN - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/get-serialized-a-t-n/#getserializedatn","text":"open fun getSerializedATN(): String !","title":"getSerializedATN"},{"location":"latest/core/org.pinelang.parser/-pine-script/get-token-names/","text":"core / org.pinelang.parser / PineScript / getTokenNames getTokenNames \u00b6 open fun ~~getTokenNames~~(): Array < String !>! Deprecated: Deprecated in Java","title":"getTokenNames - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/get-token-names/#gettokennames","text":"open fun ~~getTokenNames~~(): Array < String !>! Deprecated: Deprecated in Java","title":"getTokenNames"},{"location":"latest/core/org.pinelang.parser/-pine-script/get-vocabulary/","text":"core / org.pinelang.parser / PineScript / getVocabulary getVocabulary \u00b6 open fun getVocabulary(): Vocabulary!","title":"getVocabulary - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/get-vocabulary/#getvocabulary","text":"open fun getVocabulary(): Vocabulary!","title":"getVocabulary"},{"location":"latest/core/org.pinelang.parser/-pine-script/integer-suffix/","text":"core / org.pinelang.parser / PineScript / integerSuffix integerSuffix \u00b6 fun integerSuffix(): IntegerSuffixContext!","title":"integerSuffix - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/integer-suffix/#integersuffix","text":"fun integerSuffix(): IntegerSuffixContext!","title":"integerSuffix"},{"location":"latest/core/org.pinelang.parser/-pine-script/object-definition/","text":"core / org.pinelang.parser / PineScript / objectDefinition objectDefinition \u00b6 fun objectDefinition(): ObjectDefinitionContext!","title":"objectDefinition - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/object-definition/#objectdefinition","text":"fun objectDefinition(): ObjectDefinitionContext!","title":"objectDefinition"},{"location":"latest/core/org.pinelang.parser/-pine-script/object-identifier/","text":"core / org.pinelang.parser / PineScript / objectIdentifier objectIdentifier \u00b6 fun objectIdentifier(): ObjectIdentifierContext!","title":"objectIdentifier - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/object-identifier/#objectidentifier","text":"fun objectIdentifier(): ObjectIdentifierContext!","title":"objectIdentifier"},{"location":"latest/core/org.pinelang.parser/-pine-script/object-initializer/","text":"core / org.pinelang.parser / PineScript / objectInitializer objectInitializer \u00b6 fun objectInitializer(): ObjectInitializerContext!","title":"objectInitializer - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/object-initializer/#objectinitializer","text":"fun objectInitializer(): ObjectInitializerContext!","title":"objectInitializer"},{"location":"latest/core/org.pinelang.parser/-pine-script/object-property-expression/","text":"core / org.pinelang.parser / PineScript / objectPropertyExpression objectPropertyExpression \u00b6 fun objectPropertyExpression(): ObjectPropertyExpressionContext!","title":"objectPropertyExpression - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/object-property-expression/#objectpropertyexpression","text":"fun objectPropertyExpression(): ObjectPropertyExpressionContext!","title":"objectPropertyExpression"},{"location":"latest/core/org.pinelang.parser/-pine-script/primitive-expression/","text":"core / org.pinelang.parser / PineScript / primitiveExpression primitiveExpression \u00b6 fun primitiveExpression(): PrimitiveExpressionContext!","title":"primitiveExpression - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/primitive-expression/#primitiveexpression","text":"fun primitiveExpression(): PrimitiveExpressionContext!","title":"primitiveExpression"},{"location":"latest/core/org.pinelang.parser/-pine-script/program/","text":"core / org.pinelang.parser / PineScript / program program \u00b6 fun program(): ProgramContext!","title":"program - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/program/#program","text":"fun program(): ProgramContext!","title":"program"},{"location":"latest/core/org.pinelang.parser/-pine-script/property-definition/","text":"core / org.pinelang.parser / PineScript / propertyDefinition propertyDefinition \u00b6 fun propertyDefinition(): PropertyDefinitionContext!","title":"propertyDefinition - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/property-definition/#propertydefinition","text":"fun propertyDefinition(): PropertyDefinitionContext!","title":"propertyDefinition"},{"location":"latest/core/org.pinelang.parser/-pine-script/root-member/","text":"core / org.pinelang.parser / PineScript / rootMember rootMember \u00b6 fun rootMember(): RootMemberContext!","title":"rootMember - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/root-member/#rootmember","text":"fun rootMember(): RootMemberContext!","title":"rootMember"},{"location":"latest/core/org.pinelang.parser/-pine-script/rule-names/","text":"core / org.pinelang.parser / PineScript / ruleNames ruleNames \u00b6 static val ruleNames: Array < String !>!","title":"ruleNames - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/rule-names/#rulenames","text":"static val ruleNames: Array < String !>!","title":"ruleNames"},{"location":"latest/core/org.pinelang.parser/-pine-script/sempred/","text":"core / org.pinelang.parser / PineScript / sempred sempred \u00b6 open fun sempred(_localctx: RuleContext!, ruleIndex: Int , predIndex: Int ): Boolean","title":"sempred - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/sempred/#sempred","text":"open fun sempred(_localctx: RuleContext!, ruleIndex: Int , predIndex: Int ): Boolean","title":"sempred"},{"location":"latest/core/org.pinelang.parser/-pine-script/signal-assignement/","text":"core / org.pinelang.parser / PineScript / signalAssignement signalAssignement \u00b6 fun signalAssignement(): SignalAssignementContext!","title":"signalAssignement - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/signal-assignement/#signalassignement","text":"fun signalAssignement(): SignalAssignementContext!","title":"signalAssignement"},{"location":"latest/core/org.pinelang.parser/-pine-script/string-literal/","text":"core / org.pinelang.parser / PineScript / stringLiteral stringLiteral \u00b6 fun stringLiteral(): StringLiteralContext!","title":"stringLiteral - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/string-literal/#stringliteral","text":"fun stringLiteral(): StringLiteralContext!","title":"stringLiteral"},{"location":"latest/core/org.pinelang.parser/-pine-script/token-names/","text":"core / org.pinelang.parser / PineScript / tokenNames tokenNames \u00b6 static val tokenNames: Array < String !>!","title":"tokenNames - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/token-names/#tokennames","text":"static val tokenNames: Array < String !>!","title":"tokenNames"},{"location":"latest/core/org.pinelang.parser/-pine-script/-arguments-context/","text":"core / org.pinelang.parser / PineScript / ArgumentsContext ArgumentsContext \u00b6 open class ArgumentsContext : ParserRuleContext Constructors \u00b6 Name Summary <init> ArgumentsContext(parent: ParserRuleContext!, invokingState: Int ) Functions \u00b6 Name Summary accept open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T COMMA open fun COMMA(): MutableList <TerminalNode!>! open fun COMMA(i: Int ): TerminalNode! enterRule open fun enterRule(listener: ParseTreeListener!): Unit exitRule open fun exitRule(listener: ParseTreeListener!): Unit expression open fun expression(): MutableList <ExpressionContext!>! open fun expression(i: Int ): ExpressionContext! getRuleIndex open fun getRuleIndex(): Int","title":"ArgumentsContext - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-arguments-context/#argumentscontext","text":"open class ArgumentsContext : ParserRuleContext","title":"ArgumentsContext"},{"location":"latest/core/org.pinelang.parser/-pine-script/-arguments-context/#constructors","text":"Name Summary <init> ArgumentsContext(parent: ParserRuleContext!, invokingState: Int )","title":"Constructors"},{"location":"latest/core/org.pinelang.parser/-pine-script/-arguments-context/#functions","text":"Name Summary accept open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T COMMA open fun COMMA(): MutableList <TerminalNode!>! open fun COMMA(i: Int ): TerminalNode! enterRule open fun enterRule(listener: ParseTreeListener!): Unit exitRule open fun exitRule(listener: ParseTreeListener!): Unit expression open fun expression(): MutableList <ExpressionContext!>! open fun expression(i: Int ): ExpressionContext! getRuleIndex open fun getRuleIndex(): Int","title":"Functions"},{"location":"latest/core/org.pinelang.parser/-pine-script/-arguments-context/-c-o-m-m-a/","text":"core / org.pinelang.parser / PineScript / ArgumentsContext / COMMA COMMA \u00b6 open fun COMMA(): MutableList <TerminalNode!>! open fun COMMA(i: Int ): TerminalNode!","title":"COMMA - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-arguments-context/-c-o-m-m-a/#comma","text":"open fun COMMA(): MutableList <TerminalNode!>! open fun COMMA(i: Int ): TerminalNode!","title":"COMMA"},{"location":"latest/core/org.pinelang.parser/-pine-script/-arguments-context/-init-/","text":"core / org.pinelang.parser / PineScript / ArgumentsContext / <init> <init> \u00b6 ArgumentsContext(parent: ParserRuleContext!, invokingState: Int )","title":" init "},{"location":"latest/core/org.pinelang.parser/-pine-script/-arguments-context/-init-/#init","text":"ArgumentsContext(parent: ParserRuleContext!, invokingState: Int )","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.parser/-pine-script/-arguments-context/accept/","text":"core / org.pinelang.parser / PineScript / ArgumentsContext / accept accept \u00b6 open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T","title":"accept - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-arguments-context/accept/#accept","text":"open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T","title":"accept"},{"location":"latest/core/org.pinelang.parser/-pine-script/-arguments-context/enter-rule/","text":"core / org.pinelang.parser / PineScript / ArgumentsContext / enterRule enterRule \u00b6 open fun enterRule(listener: ParseTreeListener!): Unit","title":"enterRule - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-arguments-context/enter-rule/#enterrule","text":"open fun enterRule(listener: ParseTreeListener!): Unit","title":"enterRule"},{"location":"latest/core/org.pinelang.parser/-pine-script/-arguments-context/exit-rule/","text":"core / org.pinelang.parser / PineScript / ArgumentsContext / exitRule exitRule \u00b6 open fun exitRule(listener: ParseTreeListener!): Unit","title":"exitRule - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-arguments-context/exit-rule/#exitrule","text":"open fun exitRule(listener: ParseTreeListener!): Unit","title":"exitRule"},{"location":"latest/core/org.pinelang.parser/-pine-script/-arguments-context/expression/","text":"core / org.pinelang.parser / PineScript / ArgumentsContext / expression expression \u00b6 open fun expression(): MutableList <ExpressionContext!>! open fun expression(i: Int ): ExpressionContext!","title":"expression - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-arguments-context/expression/#expression","text":"open fun expression(): MutableList <ExpressionContext!>! open fun expression(i: Int ): ExpressionContext!","title":"expression"},{"location":"latest/core/org.pinelang.parser/-pine-script/-arguments-context/get-rule-index/","text":"core / org.pinelang.parser / PineScript / ArgumentsContext / getRuleIndex getRuleIndex \u00b6 open fun getRuleIndex(): Int","title":"getRuleIndex - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-arguments-context/get-rule-index/#getruleindex","text":"open fun getRuleIndex(): Int","title":"getRuleIndex"},{"location":"latest/core/org.pinelang.parser/-pine-script/-binary-operation-context/","text":"core / org.pinelang.parser / PineScript / BinaryOperationContext BinaryOperationContext \u00b6 open class BinaryOperationContext : ParserRuleContext Constructors \u00b6 Name Summary <init> BinaryOperationContext(parent: ParserRuleContext!, invokingState: Int ) Functions \u00b6 Name Summary accept open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T AND open fun AND(): TerminalNode! DIV open fun DIV(): TerminalNode! enterRule open fun enterRule(listener: ParseTreeListener!): Unit EQ open fun EQ(): TerminalNode! exitRule open fun exitRule(listener: ParseTreeListener!): Unit getRuleIndex open fun getRuleIndex(): Int MINUS open fun MINUS(): TerminalNode! MULTI open fun MULTI(): TerminalNode! OR open fun OR(): TerminalNode! PLUS open fun PLUS(): TerminalNode! REMAINDER open fun REMAINDER(): TerminalNode!","title":"BinaryOperationContext - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-binary-operation-context/#binaryoperationcontext","text":"open class BinaryOperationContext : ParserRuleContext","title":"BinaryOperationContext"},{"location":"latest/core/org.pinelang.parser/-pine-script/-binary-operation-context/#constructors","text":"Name Summary <init> BinaryOperationContext(parent: ParserRuleContext!, invokingState: Int )","title":"Constructors"},{"location":"latest/core/org.pinelang.parser/-pine-script/-binary-operation-context/#functions","text":"Name Summary accept open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T AND open fun AND(): TerminalNode! DIV open fun DIV(): TerminalNode! enterRule open fun enterRule(listener: ParseTreeListener!): Unit EQ open fun EQ(): TerminalNode! exitRule open fun exitRule(listener: ParseTreeListener!): Unit getRuleIndex open fun getRuleIndex(): Int MINUS open fun MINUS(): TerminalNode! MULTI open fun MULTI(): TerminalNode! OR open fun OR(): TerminalNode! PLUS open fun PLUS(): TerminalNode! REMAINDER open fun REMAINDER(): TerminalNode!","title":"Functions"},{"location":"latest/core/org.pinelang.parser/-pine-script/-binary-operation-context/-a-n-d/","text":"core / org.pinelang.parser / PineScript / BinaryOperationContext / AND AND \u00b6 open fun AND(): TerminalNode!","title":"AND - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-binary-operation-context/-a-n-d/#and","text":"open fun AND(): TerminalNode!","title":"AND"},{"location":"latest/core/org.pinelang.parser/-pine-script/-binary-operation-context/-d-i-v/","text":"core / org.pinelang.parser / PineScript / BinaryOperationContext / DIV DIV \u00b6 open fun DIV(): TerminalNode!","title":"DIV - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-binary-operation-context/-d-i-v/#div","text":"open fun DIV(): TerminalNode!","title":"DIV"},{"location":"latest/core/org.pinelang.parser/-pine-script/-binary-operation-context/-e-q/","text":"core / org.pinelang.parser / PineScript / BinaryOperationContext / EQ EQ \u00b6 open fun EQ(): TerminalNode!","title":"EQ - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-binary-operation-context/-e-q/#eq","text":"open fun EQ(): TerminalNode!","title":"EQ"},{"location":"latest/core/org.pinelang.parser/-pine-script/-binary-operation-context/-init-/","text":"core / org.pinelang.parser / PineScript / BinaryOperationContext / <init> <init> \u00b6 BinaryOperationContext(parent: ParserRuleContext!, invokingState: Int )","title":" init "},{"location":"latest/core/org.pinelang.parser/-pine-script/-binary-operation-context/-init-/#init","text":"BinaryOperationContext(parent: ParserRuleContext!, invokingState: Int )","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.parser/-pine-script/-binary-operation-context/-m-i-n-u-s/","text":"core / org.pinelang.parser / PineScript / BinaryOperationContext / MINUS MINUS \u00b6 open fun MINUS(): TerminalNode!","title":"MINUS - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-binary-operation-context/-m-i-n-u-s/#minus","text":"open fun MINUS(): TerminalNode!","title":"MINUS"},{"location":"latest/core/org.pinelang.parser/-pine-script/-binary-operation-context/-m-u-l-t-i/","text":"core / org.pinelang.parser / PineScript / BinaryOperationContext / MULTI MULTI \u00b6 open fun MULTI(): TerminalNode!","title":"MULTI - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-binary-operation-context/-m-u-l-t-i/#multi","text":"open fun MULTI(): TerminalNode!","title":"MULTI"},{"location":"latest/core/org.pinelang.parser/-pine-script/-binary-operation-context/-o-r/","text":"core / org.pinelang.parser / PineScript / BinaryOperationContext / OR OR \u00b6 open fun OR(): TerminalNode!","title":"OR - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-binary-operation-context/-o-r/#or","text":"open fun OR(): TerminalNode!","title":"OR"},{"location":"latest/core/org.pinelang.parser/-pine-script/-binary-operation-context/-p-l-u-s/","text":"core / org.pinelang.parser / PineScript / BinaryOperationContext / PLUS PLUS \u00b6 open fun PLUS(): TerminalNode!","title":"PLUS - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-binary-operation-context/-p-l-u-s/#plus","text":"open fun PLUS(): TerminalNode!","title":"PLUS"},{"location":"latest/core/org.pinelang.parser/-pine-script/-binary-operation-context/-r-e-m-a-i-n-d-e-r/","text":"core / org.pinelang.parser / PineScript / BinaryOperationContext / REMAINDER REMAINDER \u00b6 open fun REMAINDER(): TerminalNode!","title":"REMAINDER - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-binary-operation-context/-r-e-m-a-i-n-d-e-r/#remainder","text":"open fun REMAINDER(): TerminalNode!","title":"REMAINDER"},{"location":"latest/core/org.pinelang.parser/-pine-script/-binary-operation-context/accept/","text":"core / org.pinelang.parser / PineScript / BinaryOperationContext / accept accept \u00b6 open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T","title":"accept - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-binary-operation-context/accept/#accept","text":"open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T","title":"accept"},{"location":"latest/core/org.pinelang.parser/-pine-script/-binary-operation-context/enter-rule/","text":"core / org.pinelang.parser / PineScript / BinaryOperationContext / enterRule enterRule \u00b6 open fun enterRule(listener: ParseTreeListener!): Unit","title":"enterRule - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-binary-operation-context/enter-rule/#enterrule","text":"open fun enterRule(listener: ParseTreeListener!): Unit","title":"enterRule"},{"location":"latest/core/org.pinelang.parser/-pine-script/-binary-operation-context/exit-rule/","text":"core / org.pinelang.parser / PineScript / BinaryOperationContext / exitRule exitRule \u00b6 open fun exitRule(listener: ParseTreeListener!): Unit","title":"exitRule - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-binary-operation-context/exit-rule/#exitrule","text":"open fun exitRule(listener: ParseTreeListener!): Unit","title":"exitRule"},{"location":"latest/core/org.pinelang.parser/-pine-script/-binary-operation-context/get-rule-index/","text":"core / org.pinelang.parser / PineScript / BinaryOperationContext / getRuleIndex getRuleIndex \u00b6 open fun getRuleIndex(): Int","title":"getRuleIndex - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-binary-operation-context/get-rule-index/#getruleindex","text":"open fun getRuleIndex(): Int","title":"getRuleIndex"},{"location":"latest/core/org.pinelang.parser/-pine-script/-callable-expression-context/","text":"core / org.pinelang.parser / PineScript / CallableExpressionContext CallableExpressionContext \u00b6 open class CallableExpressionContext : ParserRuleContext Constructors \u00b6 Name Summary <init> CallableExpressionContext(parent: ParserRuleContext!, invokingState: Int ) Functions \u00b6 Name Summary accept open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T enterRule open fun enterRule(listener: ParseTreeListener!): Unit exitRule open fun exitRule(listener: ParseTreeListener!): Unit getRuleIndex open fun getRuleIndex(): Int Identifier open fun Identifier(): TerminalNode! LPAREN open fun LPAREN(): TerminalNode! RPAREN open fun RPAREN(): TerminalNode!","title":"CallableExpressionContext - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-callable-expression-context/#callableexpressioncontext","text":"open class CallableExpressionContext : ParserRuleContext","title":"CallableExpressionContext"},{"location":"latest/core/org.pinelang.parser/-pine-script/-callable-expression-context/#constructors","text":"Name Summary <init> CallableExpressionContext(parent: ParserRuleContext!, invokingState: Int )","title":"Constructors"},{"location":"latest/core/org.pinelang.parser/-pine-script/-callable-expression-context/#functions","text":"Name Summary accept open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T enterRule open fun enterRule(listener: ParseTreeListener!): Unit exitRule open fun exitRule(listener: ParseTreeListener!): Unit getRuleIndex open fun getRuleIndex(): Int Identifier open fun Identifier(): TerminalNode! LPAREN open fun LPAREN(): TerminalNode! RPAREN open fun RPAREN(): TerminalNode!","title":"Functions"},{"location":"latest/core/org.pinelang.parser/-pine-script/-callable-expression-context/-identifier/","text":"core / org.pinelang.parser / PineScript / CallableExpressionContext / Identifier Identifier \u00b6 open fun Identifier(): TerminalNode!","title":"Identifier - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-callable-expression-context/-identifier/#identifier","text":"open fun Identifier(): TerminalNode!","title":"Identifier"},{"location":"latest/core/org.pinelang.parser/-pine-script/-callable-expression-context/-init-/","text":"core / org.pinelang.parser / PineScript / CallableExpressionContext / <init> <init> \u00b6 CallableExpressionContext(parent: ParserRuleContext!, invokingState: Int )","title":" init "},{"location":"latest/core/org.pinelang.parser/-pine-script/-callable-expression-context/-init-/#init","text":"CallableExpressionContext(parent: ParserRuleContext!, invokingState: Int )","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.parser/-pine-script/-callable-expression-context/-l-p-a-r-e-n/","text":"core / org.pinelang.parser / PineScript / CallableExpressionContext / LPAREN LPAREN \u00b6 open fun LPAREN(): TerminalNode!","title":"LPAREN - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-callable-expression-context/-l-p-a-r-e-n/#lparen","text":"open fun LPAREN(): TerminalNode!","title":"LPAREN"},{"location":"latest/core/org.pinelang.parser/-pine-script/-callable-expression-context/-r-p-a-r-e-n/","text":"core / org.pinelang.parser / PineScript / CallableExpressionContext / RPAREN RPAREN \u00b6 open fun RPAREN(): TerminalNode!","title":"RPAREN - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-callable-expression-context/-r-p-a-r-e-n/#rparen","text":"open fun RPAREN(): TerminalNode!","title":"RPAREN"},{"location":"latest/core/org.pinelang.parser/-pine-script/-callable-expression-context/accept/","text":"core / org.pinelang.parser / PineScript / CallableExpressionContext / accept accept \u00b6 open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T","title":"accept - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-callable-expression-context/accept/#accept","text":"open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T","title":"accept"},{"location":"latest/core/org.pinelang.parser/-pine-script/-callable-expression-context/enter-rule/","text":"core / org.pinelang.parser / PineScript / CallableExpressionContext / enterRule enterRule \u00b6 open fun enterRule(listener: ParseTreeListener!): Unit","title":"enterRule - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-callable-expression-context/enter-rule/#enterrule","text":"open fun enterRule(listener: ParseTreeListener!): Unit","title":"enterRule"},{"location":"latest/core/org.pinelang.parser/-pine-script/-callable-expression-context/exit-rule/","text":"core / org.pinelang.parser / PineScript / CallableExpressionContext / exitRule exitRule \u00b6 open fun exitRule(listener: ParseTreeListener!): Unit","title":"exitRule - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-callable-expression-context/exit-rule/#exitrule","text":"open fun exitRule(listener: ParseTreeListener!): Unit","title":"exitRule"},{"location":"latest/core/org.pinelang.parser/-pine-script/-callable-expression-context/get-rule-index/","text":"core / org.pinelang.parser / PineScript / CallableExpressionContext / getRuleIndex getRuleIndex \u00b6 open fun getRuleIndex(): Int","title":"getRuleIndex - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-callable-expression-context/get-rule-index/#getruleindex","text":"open fun getRuleIndex(): Int","title":"getRuleIndex"},{"location":"latest/core/org.pinelang.parser/-pine-script/-expression-context/","text":"core / org.pinelang.parser / PineScript / ExpressionContext ExpressionContext \u00b6 open class ExpressionContext : ParserRuleContext Constructors \u00b6 Name Summary <init> ExpressionContext(parent: ParserRuleContext!, invokingState: Int ) Functions \u00b6 Name Summary accept open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T binaryOperation open fun binaryOperation(): BinaryOperationContext! callableExpression open fun callableExpression(): CallableExpressionContext! enterRule open fun enterRule(listener: ParseTreeListener!): Unit exitRule open fun exitRule(listener: ParseTreeListener!): Unit expression open fun expression(): MutableList <ExpressionContext!>! open fun expression(i: Int ): ExpressionContext! getRuleIndex open fun getRuleIndex(): Int objectPropertyExpression open fun objectPropertyExpression(): ObjectPropertyExpressionContext! primitiveExpression open fun primitiveExpression(): PrimitiveExpressionContext!","title":"ExpressionContext - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-expression-context/#expressioncontext","text":"open class ExpressionContext : ParserRuleContext","title":"ExpressionContext"},{"location":"latest/core/org.pinelang.parser/-pine-script/-expression-context/#constructors","text":"Name Summary <init> ExpressionContext(parent: ParserRuleContext!, invokingState: Int )","title":"Constructors"},{"location":"latest/core/org.pinelang.parser/-pine-script/-expression-context/#functions","text":"Name Summary accept open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T binaryOperation open fun binaryOperation(): BinaryOperationContext! callableExpression open fun callableExpression(): CallableExpressionContext! enterRule open fun enterRule(listener: ParseTreeListener!): Unit exitRule open fun exitRule(listener: ParseTreeListener!): Unit expression open fun expression(): MutableList <ExpressionContext!>! open fun expression(i: Int ): ExpressionContext! getRuleIndex open fun getRuleIndex(): Int objectPropertyExpression open fun objectPropertyExpression(): ObjectPropertyExpressionContext! primitiveExpression open fun primitiveExpression(): PrimitiveExpressionContext!","title":"Functions"},{"location":"latest/core/org.pinelang.parser/-pine-script/-expression-context/-init-/","text":"core / org.pinelang.parser / PineScript / ExpressionContext / <init> <init> \u00b6 ExpressionContext(parent: ParserRuleContext!, invokingState: Int )","title":" init "},{"location":"latest/core/org.pinelang.parser/-pine-script/-expression-context/-init-/#init","text":"ExpressionContext(parent: ParserRuleContext!, invokingState: Int )","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.parser/-pine-script/-expression-context/accept/","text":"core / org.pinelang.parser / PineScript / ExpressionContext / accept accept \u00b6 open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T","title":"accept - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-expression-context/accept/#accept","text":"open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T","title":"accept"},{"location":"latest/core/org.pinelang.parser/-pine-script/-expression-context/binary-operation/","text":"core / org.pinelang.parser / PineScript / ExpressionContext / binaryOperation binaryOperation \u00b6 open fun binaryOperation(): BinaryOperationContext!","title":"binaryOperation - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-expression-context/binary-operation/#binaryoperation","text":"open fun binaryOperation(): BinaryOperationContext!","title":"binaryOperation"},{"location":"latest/core/org.pinelang.parser/-pine-script/-expression-context/callable-expression/","text":"core / org.pinelang.parser / PineScript / ExpressionContext / callableExpression callableExpression \u00b6 open fun callableExpression(): CallableExpressionContext!","title":"callableExpression - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-expression-context/callable-expression/#callableexpression","text":"open fun callableExpression(): CallableExpressionContext!","title":"callableExpression"},{"location":"latest/core/org.pinelang.parser/-pine-script/-expression-context/enter-rule/","text":"core / org.pinelang.parser / PineScript / ExpressionContext / enterRule enterRule \u00b6 open fun enterRule(listener: ParseTreeListener!): Unit","title":"enterRule - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-expression-context/enter-rule/#enterrule","text":"open fun enterRule(listener: ParseTreeListener!): Unit","title":"enterRule"},{"location":"latest/core/org.pinelang.parser/-pine-script/-expression-context/exit-rule/","text":"core / org.pinelang.parser / PineScript / ExpressionContext / exitRule exitRule \u00b6 open fun exitRule(listener: ParseTreeListener!): Unit","title":"exitRule - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-expression-context/exit-rule/#exitrule","text":"open fun exitRule(listener: ParseTreeListener!): Unit","title":"exitRule"},{"location":"latest/core/org.pinelang.parser/-pine-script/-expression-context/expression/","text":"core / org.pinelang.parser / PineScript / ExpressionContext / expression expression \u00b6 open fun expression(): MutableList <ExpressionContext!>! open fun expression(i: Int ): ExpressionContext!","title":"expression - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-expression-context/expression/#expression","text":"open fun expression(): MutableList <ExpressionContext!>! open fun expression(i: Int ): ExpressionContext!","title":"expression"},{"location":"latest/core/org.pinelang.parser/-pine-script/-expression-context/get-rule-index/","text":"core / org.pinelang.parser / PineScript / ExpressionContext / getRuleIndex getRuleIndex \u00b6 open fun getRuleIndex(): Int","title":"getRuleIndex - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-expression-context/get-rule-index/#getruleindex","text":"open fun getRuleIndex(): Int","title":"getRuleIndex"},{"location":"latest/core/org.pinelang.parser/-pine-script/-expression-context/object-property-expression/","text":"core / org.pinelang.parser / PineScript / ExpressionContext / objectPropertyExpression objectPropertyExpression \u00b6 open fun objectPropertyExpression(): ObjectPropertyExpressionContext!","title":"objectPropertyExpression - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-expression-context/object-property-expression/#objectpropertyexpression","text":"open fun objectPropertyExpression(): ObjectPropertyExpressionContext!","title":"objectPropertyExpression"},{"location":"latest/core/org.pinelang.parser/-pine-script/-expression-context/primitive-expression/","text":"core / org.pinelang.parser / PineScript / ExpressionContext / primitiveExpression primitiveExpression \u00b6 open fun primitiveExpression(): PrimitiveExpressionContext!","title":"primitiveExpression - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-expression-context/primitive-expression/#primitiveexpression","text":"open fun primitiveExpression(): PrimitiveExpressionContext!","title":"primitiveExpression"},{"location":"latest/core/org.pinelang.parser/-pine-script/-integer-suffix-context/","text":"core / org.pinelang.parser / PineScript / IntegerSuffixContext IntegerSuffixContext \u00b6 open class IntegerSuffixContext : ParserRuleContext Constructors \u00b6 Name Summary <init> IntegerSuffixContext(parent: ParserRuleContext!, invokingState: Int ) Functions \u00b6 Name Summary accept open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T enterRule open fun enterRule(listener: ParseTreeListener!): Unit exitRule open fun exitRule(listener: ParseTreeListener!): Unit getRuleIndex open fun getRuleIndex(): Int SUFFIX_DP open fun SUFFIX_DP(): TerminalNode! SUFFIX_PX open fun SUFFIX_PX(): TerminalNode!","title":"IntegerSuffixContext - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-integer-suffix-context/#integersuffixcontext","text":"open class IntegerSuffixContext : ParserRuleContext","title":"IntegerSuffixContext"},{"location":"latest/core/org.pinelang.parser/-pine-script/-integer-suffix-context/#constructors","text":"Name Summary <init> IntegerSuffixContext(parent: ParserRuleContext!, invokingState: Int )","title":"Constructors"},{"location":"latest/core/org.pinelang.parser/-pine-script/-integer-suffix-context/#functions","text":"Name Summary accept open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T enterRule open fun enterRule(listener: ParseTreeListener!): Unit exitRule open fun exitRule(listener: ParseTreeListener!): Unit getRuleIndex open fun getRuleIndex(): Int SUFFIX_DP open fun SUFFIX_DP(): TerminalNode! SUFFIX_PX open fun SUFFIX_PX(): TerminalNode!","title":"Functions"},{"location":"latest/core/org.pinelang.parser/-pine-script/-integer-suffix-context/-init-/","text":"core / org.pinelang.parser / PineScript / IntegerSuffixContext / <init> <init> \u00b6 IntegerSuffixContext(parent: ParserRuleContext!, invokingState: Int )","title":" init "},{"location":"latest/core/org.pinelang.parser/-pine-script/-integer-suffix-context/-init-/#init","text":"IntegerSuffixContext(parent: ParserRuleContext!, invokingState: Int )","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.parser/-pine-script/-integer-suffix-context/-s-u-f-f-i-x_-d-p/","text":"core / org.pinelang.parser / PineScript / IntegerSuffixContext / SUFFIX_DP SUFFIX_DP \u00b6 open fun SUFFIX_DP(): TerminalNode!","title":"SUFFIX_DP - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-integer-suffix-context/-s-u-f-f-i-x_-d-p/#suffix_dp","text":"open fun SUFFIX_DP(): TerminalNode!","title":"SUFFIX_DP"},{"location":"latest/core/org.pinelang.parser/-pine-script/-integer-suffix-context/-s-u-f-f-i-x_-p-x/","text":"core / org.pinelang.parser / PineScript / IntegerSuffixContext / SUFFIX_PX SUFFIX_PX \u00b6 open fun SUFFIX_PX(): TerminalNode!","title":"SUFFIX_PX - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-integer-suffix-context/-s-u-f-f-i-x_-p-x/#suffix_px","text":"open fun SUFFIX_PX(): TerminalNode!","title":"SUFFIX_PX"},{"location":"latest/core/org.pinelang.parser/-pine-script/-integer-suffix-context/accept/","text":"core / org.pinelang.parser / PineScript / IntegerSuffixContext / accept accept \u00b6 open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T","title":"accept - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-integer-suffix-context/accept/#accept","text":"open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T","title":"accept"},{"location":"latest/core/org.pinelang.parser/-pine-script/-integer-suffix-context/enter-rule/","text":"core / org.pinelang.parser / PineScript / IntegerSuffixContext / enterRule enterRule \u00b6 open fun enterRule(listener: ParseTreeListener!): Unit","title":"enterRule - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-integer-suffix-context/enter-rule/#enterrule","text":"open fun enterRule(listener: ParseTreeListener!): Unit","title":"enterRule"},{"location":"latest/core/org.pinelang.parser/-pine-script/-integer-suffix-context/exit-rule/","text":"core / org.pinelang.parser / PineScript / IntegerSuffixContext / exitRule exitRule \u00b6 open fun exitRule(listener: ParseTreeListener!): Unit","title":"exitRule - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-integer-suffix-context/exit-rule/#exitrule","text":"open fun exitRule(listener: ParseTreeListener!): Unit","title":"exitRule"},{"location":"latest/core/org.pinelang.parser/-pine-script/-integer-suffix-context/get-rule-index/","text":"core / org.pinelang.parser / PineScript / IntegerSuffixContext / getRuleIndex getRuleIndex \u00b6 open fun getRuleIndex(): Int","title":"getRuleIndex - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-integer-suffix-context/get-rule-index/#getruleindex","text":"open fun getRuleIndex(): Int","title":"getRuleIndex"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-definition-context/","text":"core / org.pinelang.parser / PineScript / ObjectDefinitionContext ObjectDefinitionContext \u00b6 open class ObjectDefinitionContext : ParserRuleContext Constructors \u00b6 Name Summary <init> ObjectDefinitionContext(parent: ParserRuleContext!, invokingState: Int ) Functions \u00b6 Name Summary accept open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T enterRule open fun enterRule(listener: ParseTreeListener!): Unit exitRule open fun exitRule(listener: ParseTreeListener!): Unit getRuleIndex open fun getRuleIndex(): Int objectInitializer open fun objectInitializer(): ObjectInitializerContext! ObjectType open fun ObjectType(): TerminalNode! SEMICOLON open fun SEMICOLON(): TerminalNode!","title":"ObjectDefinitionContext - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-definition-context/#objectdefinitioncontext","text":"open class ObjectDefinitionContext : ParserRuleContext","title":"ObjectDefinitionContext"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-definition-context/#constructors","text":"Name Summary <init> ObjectDefinitionContext(parent: ParserRuleContext!, invokingState: Int )","title":"Constructors"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-definition-context/#functions","text":"Name Summary accept open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T enterRule open fun enterRule(listener: ParseTreeListener!): Unit exitRule open fun exitRule(listener: ParseTreeListener!): Unit getRuleIndex open fun getRuleIndex(): Int objectInitializer open fun objectInitializer(): ObjectInitializerContext! ObjectType open fun ObjectType(): TerminalNode! SEMICOLON open fun SEMICOLON(): TerminalNode!","title":"Functions"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-definition-context/-init-/","text":"core / org.pinelang.parser / PineScript / ObjectDefinitionContext / <init> <init> \u00b6 ObjectDefinitionContext(parent: ParserRuleContext!, invokingState: Int )","title":" init "},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-definition-context/-init-/#init","text":"ObjectDefinitionContext(parent: ParserRuleContext!, invokingState: Int )","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-definition-context/-object-type/","text":"core / org.pinelang.parser / PineScript / ObjectDefinitionContext / ObjectType ObjectType \u00b6 open fun ObjectType(): TerminalNode!","title":"ObjectType - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-definition-context/-object-type/#objecttype","text":"open fun ObjectType(): TerminalNode!","title":"ObjectType"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-definition-context/-s-e-m-i-c-o-l-o-n/","text":"core / org.pinelang.parser / PineScript / ObjectDefinitionContext / SEMICOLON SEMICOLON \u00b6 open fun SEMICOLON(): TerminalNode!","title":"SEMICOLON - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-definition-context/-s-e-m-i-c-o-l-o-n/#semicolon","text":"open fun SEMICOLON(): TerminalNode!","title":"SEMICOLON"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-definition-context/accept/","text":"core / org.pinelang.parser / PineScript / ObjectDefinitionContext / accept accept \u00b6 open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T","title":"accept - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-definition-context/accept/#accept","text":"open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T","title":"accept"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-definition-context/enter-rule/","text":"core / org.pinelang.parser / PineScript / ObjectDefinitionContext / enterRule enterRule \u00b6 open fun enterRule(listener: ParseTreeListener!): Unit","title":"enterRule - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-definition-context/enter-rule/#enterrule","text":"open fun enterRule(listener: ParseTreeListener!): Unit","title":"enterRule"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-definition-context/exit-rule/","text":"core / org.pinelang.parser / PineScript / ObjectDefinitionContext / exitRule exitRule \u00b6 open fun exitRule(listener: ParseTreeListener!): Unit","title":"exitRule - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-definition-context/exit-rule/#exitrule","text":"open fun exitRule(listener: ParseTreeListener!): Unit","title":"exitRule"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-definition-context/get-rule-index/","text":"core / org.pinelang.parser / PineScript / ObjectDefinitionContext / getRuleIndex getRuleIndex \u00b6 open fun getRuleIndex(): Int","title":"getRuleIndex - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-definition-context/get-rule-index/#getruleindex","text":"open fun getRuleIndex(): Int","title":"getRuleIndex"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-definition-context/object-initializer/","text":"core / org.pinelang.parser / PineScript / ObjectDefinitionContext / objectInitializer objectInitializer \u00b6 open fun objectInitializer(): ObjectInitializerContext!","title":"objectInitializer - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-definition-context/object-initializer/#objectinitializer","text":"open fun objectInitializer(): ObjectInitializerContext!","title":"objectInitializer"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-identifier-context/","text":"core / org.pinelang.parser / PineScript / ObjectIdentifierContext ObjectIdentifierContext \u00b6 open class ObjectIdentifierContext : ParserRuleContext Constructors \u00b6 Name Summary <init> ObjectIdentifierContext(parent: ParserRuleContext!, invokingState: Int ) Functions \u00b6 Name Summary accept open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T COLON open fun COLON(): TerminalNode! enterRule open fun enterRule(listener: ParseTreeListener!): Unit exitRule open fun exitRule(listener: ParseTreeListener!): Unit getRuleIndex open fun getRuleIndex(): Int ID open fun ID(): TerminalNode! Identifier open fun Identifier(): TerminalNode! SEMICOLON open fun SEMICOLON(): TerminalNode!","title":"ObjectIdentifierContext - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-identifier-context/#objectidentifiercontext","text":"open class ObjectIdentifierContext : ParserRuleContext","title":"ObjectIdentifierContext"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-identifier-context/#constructors","text":"Name Summary <init> ObjectIdentifierContext(parent: ParserRuleContext!, invokingState: Int )","title":"Constructors"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-identifier-context/#functions","text":"Name Summary accept open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T COLON open fun COLON(): TerminalNode! enterRule open fun enterRule(listener: ParseTreeListener!): Unit exitRule open fun exitRule(listener: ParseTreeListener!): Unit getRuleIndex open fun getRuleIndex(): Int ID open fun ID(): TerminalNode! Identifier open fun Identifier(): TerminalNode! SEMICOLON open fun SEMICOLON(): TerminalNode!","title":"Functions"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-identifier-context/-c-o-l-o-n/","text":"core / org.pinelang.parser / PineScript / ObjectIdentifierContext / COLON COLON \u00b6 open fun COLON(): TerminalNode!","title":"COLON - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-identifier-context/-c-o-l-o-n/#colon","text":"open fun COLON(): TerminalNode!","title":"COLON"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-identifier-context/-i-d/","text":"core / org.pinelang.parser / PineScript / ObjectIdentifierContext / ID ID \u00b6 open fun ID(): TerminalNode!","title":"ID - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-identifier-context/-i-d/#id","text":"open fun ID(): TerminalNode!","title":"ID"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-identifier-context/-identifier/","text":"core / org.pinelang.parser / PineScript / ObjectIdentifierContext / Identifier Identifier \u00b6 open fun Identifier(): TerminalNode!","title":"Identifier - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-identifier-context/-identifier/#identifier","text":"open fun Identifier(): TerminalNode!","title":"Identifier"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-identifier-context/-init-/","text":"core / org.pinelang.parser / PineScript / ObjectIdentifierContext / <init> <init> \u00b6 ObjectIdentifierContext(parent: ParserRuleContext!, invokingState: Int )","title":" init "},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-identifier-context/-init-/#init","text":"ObjectIdentifierContext(parent: ParserRuleContext!, invokingState: Int )","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-identifier-context/-s-e-m-i-c-o-l-o-n/","text":"core / org.pinelang.parser / PineScript / ObjectIdentifierContext / SEMICOLON SEMICOLON \u00b6 open fun SEMICOLON(): TerminalNode!","title":"SEMICOLON - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-identifier-context/-s-e-m-i-c-o-l-o-n/#semicolon","text":"open fun SEMICOLON(): TerminalNode!","title":"SEMICOLON"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-identifier-context/accept/","text":"core / org.pinelang.parser / PineScript / ObjectIdentifierContext / accept accept \u00b6 open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T","title":"accept - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-identifier-context/accept/#accept","text":"open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T","title":"accept"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-identifier-context/enter-rule/","text":"core / org.pinelang.parser / PineScript / ObjectIdentifierContext / enterRule enterRule \u00b6 open fun enterRule(listener: ParseTreeListener!): Unit","title":"enterRule - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-identifier-context/enter-rule/#enterrule","text":"open fun enterRule(listener: ParseTreeListener!): Unit","title":"enterRule"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-identifier-context/exit-rule/","text":"core / org.pinelang.parser / PineScript / ObjectIdentifierContext / exitRule exitRule \u00b6 open fun exitRule(listener: ParseTreeListener!): Unit","title":"exitRule - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-identifier-context/exit-rule/#exitrule","text":"open fun exitRule(listener: ParseTreeListener!): Unit","title":"exitRule"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-identifier-context/get-rule-index/","text":"core / org.pinelang.parser / PineScript / ObjectIdentifierContext / getRuleIndex getRuleIndex \u00b6 open fun getRuleIndex(): Int","title":"getRuleIndex - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-identifier-context/get-rule-index/#getruleindex","text":"open fun getRuleIndex(): Int","title":"getRuleIndex"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-initializer-context/","text":"core / org.pinelang.parser / PineScript / ObjectInitializerContext ObjectInitializerContext \u00b6 open class ObjectInitializerContext : ParserRuleContext Constructors \u00b6 Name Summary <init> ObjectInitializerContext(parent: ParserRuleContext!, invokingState: Int ) Functions \u00b6 Name Summary accept open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T enterRule open fun enterRule(listener: ParseTreeListener!): Unit exitRule open fun exitRule(listener: ParseTreeListener!): Unit getRuleIndex open fun getRuleIndex(): Int LBRACE open fun LBRACE(): TerminalNode! objectDefinition open fun objectDefinition(): MutableList <ObjectDefinitionContext!>! open fun objectDefinition(i: Int ): ObjectDefinitionContext! objectIdentifier open fun objectIdentifier(): ObjectIdentifierContext! propertyDefinition open fun propertyDefinition(): MutableList <PropertyDefinitionContext!>! open fun propertyDefinition(i: Int ): PropertyDefinitionContext! RBRACE open fun RBRACE(): TerminalNode! signalAssignement open fun signalAssignement(): MutableList <SignalAssignementContext!>! open fun signalAssignement(i: Int ): SignalAssignementContext!","title":"ObjectInitializerContext - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-initializer-context/#objectinitializercontext","text":"open class ObjectInitializerContext : ParserRuleContext","title":"ObjectInitializerContext"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-initializer-context/#constructors","text":"Name Summary <init> ObjectInitializerContext(parent: ParserRuleContext!, invokingState: Int )","title":"Constructors"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-initializer-context/#functions","text":"Name Summary accept open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T enterRule open fun enterRule(listener: ParseTreeListener!): Unit exitRule open fun exitRule(listener: ParseTreeListener!): Unit getRuleIndex open fun getRuleIndex(): Int LBRACE open fun LBRACE(): TerminalNode! objectDefinition open fun objectDefinition(): MutableList <ObjectDefinitionContext!>! open fun objectDefinition(i: Int ): ObjectDefinitionContext! objectIdentifier open fun objectIdentifier(): ObjectIdentifierContext! propertyDefinition open fun propertyDefinition(): MutableList <PropertyDefinitionContext!>! open fun propertyDefinition(i: Int ): PropertyDefinitionContext! RBRACE open fun RBRACE(): TerminalNode! signalAssignement open fun signalAssignement(): MutableList <SignalAssignementContext!>! open fun signalAssignement(i: Int ): SignalAssignementContext!","title":"Functions"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-initializer-context/-init-/","text":"core / org.pinelang.parser / PineScript / ObjectInitializerContext / <init> <init> \u00b6 ObjectInitializerContext(parent: ParserRuleContext!, invokingState: Int )","title":" init "},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-initializer-context/-init-/#init","text":"ObjectInitializerContext(parent: ParserRuleContext!, invokingState: Int )","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-initializer-context/-l-b-r-a-c-e/","text":"core / org.pinelang.parser / PineScript / ObjectInitializerContext / LBRACE LBRACE \u00b6 open fun LBRACE(): TerminalNode!","title":"LBRACE - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-initializer-context/-l-b-r-a-c-e/#lbrace","text":"open fun LBRACE(): TerminalNode!","title":"LBRACE"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-initializer-context/-r-b-r-a-c-e/","text":"core / org.pinelang.parser / PineScript / ObjectInitializerContext / RBRACE RBRACE \u00b6 open fun RBRACE(): TerminalNode!","title":"RBRACE - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-initializer-context/-r-b-r-a-c-e/#rbrace","text":"open fun RBRACE(): TerminalNode!","title":"RBRACE"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-initializer-context/accept/","text":"core / org.pinelang.parser / PineScript / ObjectInitializerContext / accept accept \u00b6 open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T","title":"accept - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-initializer-context/accept/#accept","text":"open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T","title":"accept"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-initializer-context/enter-rule/","text":"core / org.pinelang.parser / PineScript / ObjectInitializerContext / enterRule enterRule \u00b6 open fun enterRule(listener: ParseTreeListener!): Unit","title":"enterRule - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-initializer-context/enter-rule/#enterrule","text":"open fun enterRule(listener: ParseTreeListener!): Unit","title":"enterRule"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-initializer-context/exit-rule/","text":"core / org.pinelang.parser / PineScript / ObjectInitializerContext / exitRule exitRule \u00b6 open fun exitRule(listener: ParseTreeListener!): Unit","title":"exitRule - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-initializer-context/exit-rule/#exitrule","text":"open fun exitRule(listener: ParseTreeListener!): Unit","title":"exitRule"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-initializer-context/get-rule-index/","text":"core / org.pinelang.parser / PineScript / ObjectInitializerContext / getRuleIndex getRuleIndex \u00b6 open fun getRuleIndex(): Int","title":"getRuleIndex - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-initializer-context/get-rule-index/#getruleindex","text":"open fun getRuleIndex(): Int","title":"getRuleIndex"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-initializer-context/object-definition/","text":"core / org.pinelang.parser / PineScript / ObjectInitializerContext / objectDefinition objectDefinition \u00b6 open fun objectDefinition(): MutableList <ObjectDefinitionContext!>! open fun objectDefinition(i: Int ): ObjectDefinitionContext!","title":"objectDefinition - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-initializer-context/object-definition/#objectdefinition","text":"open fun objectDefinition(): MutableList <ObjectDefinitionContext!>! open fun objectDefinition(i: Int ): ObjectDefinitionContext!","title":"objectDefinition"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-initializer-context/object-identifier/","text":"core / org.pinelang.parser / PineScript / ObjectInitializerContext / objectIdentifier objectIdentifier \u00b6 open fun objectIdentifier(): ObjectIdentifierContext!","title":"objectIdentifier - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-initializer-context/object-identifier/#objectidentifier","text":"open fun objectIdentifier(): ObjectIdentifierContext!","title":"objectIdentifier"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-initializer-context/property-definition/","text":"core / org.pinelang.parser / PineScript / ObjectInitializerContext / propertyDefinition propertyDefinition \u00b6 open fun propertyDefinition(): MutableList <PropertyDefinitionContext!>! open fun propertyDefinition(i: Int ): PropertyDefinitionContext!","title":"propertyDefinition - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-initializer-context/property-definition/#propertydefinition","text":"open fun propertyDefinition(): MutableList <PropertyDefinitionContext!>! open fun propertyDefinition(i: Int ): PropertyDefinitionContext!","title":"propertyDefinition"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-initializer-context/signal-assignement/","text":"core / org.pinelang.parser / PineScript / ObjectInitializerContext / signalAssignement signalAssignement \u00b6 open fun signalAssignement(): MutableList <SignalAssignementContext!>! open fun signalAssignement(i: Int ): SignalAssignementContext!","title":"signalAssignement - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-initializer-context/signal-assignement/#signalassignement","text":"open fun signalAssignement(): MutableList <SignalAssignementContext!>! open fun signalAssignement(i: Int ): SignalAssignementContext!","title":"signalAssignement"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-property-expression-context/","text":"core / org.pinelang.parser / PineScript / ObjectPropertyExpressionContext ObjectPropertyExpressionContext \u00b6 open class ObjectPropertyExpressionContext : ParserRuleContext Constructors \u00b6 Name Summary <init> ObjectPropertyExpressionContext(parent: ParserRuleContext!, invokingState: Int ) Functions \u00b6 Name Summary accept open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T DOT open fun DOT(): TerminalNode! enterRule open fun enterRule(listener: ParseTreeListener!): Unit exitRule open fun exitRule(listener: ParseTreeListener!): Unit getRuleIndex open fun getRuleIndex(): Int Identifier open fun Identifier(): MutableList <TerminalNode!>! open fun Identifier(i: Int ): TerminalNode!","title":"ObjectPropertyExpressionContext - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-property-expression-context/#objectpropertyexpressioncontext","text":"open class ObjectPropertyExpressionContext : ParserRuleContext","title":"ObjectPropertyExpressionContext"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-property-expression-context/#constructors","text":"Name Summary <init> ObjectPropertyExpressionContext(parent: ParserRuleContext!, invokingState: Int )","title":"Constructors"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-property-expression-context/#functions","text":"Name Summary accept open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T DOT open fun DOT(): TerminalNode! enterRule open fun enterRule(listener: ParseTreeListener!): Unit exitRule open fun exitRule(listener: ParseTreeListener!): Unit getRuleIndex open fun getRuleIndex(): Int Identifier open fun Identifier(): MutableList <TerminalNode!>! open fun Identifier(i: Int ): TerminalNode!","title":"Functions"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-property-expression-context/-d-o-t/","text":"core / org.pinelang.parser / PineScript / ObjectPropertyExpressionContext / DOT DOT \u00b6 open fun DOT(): TerminalNode!","title":"DOT - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-property-expression-context/-d-o-t/#dot","text":"open fun DOT(): TerminalNode!","title":"DOT"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-property-expression-context/-identifier/","text":"core / org.pinelang.parser / PineScript / ObjectPropertyExpressionContext / Identifier Identifier \u00b6 open fun Identifier(): MutableList <TerminalNode!>! open fun Identifier(i: Int ): TerminalNode!","title":"Identifier - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-property-expression-context/-identifier/#identifier","text":"open fun Identifier(): MutableList <TerminalNode!>! open fun Identifier(i: Int ): TerminalNode!","title":"Identifier"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-property-expression-context/-init-/","text":"core / org.pinelang.parser / PineScript / ObjectPropertyExpressionContext / <init> <init> \u00b6 ObjectPropertyExpressionContext(parent: ParserRuleContext!, invokingState: Int )","title":" init "},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-property-expression-context/-init-/#init","text":"ObjectPropertyExpressionContext(parent: ParserRuleContext!, invokingState: Int )","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-property-expression-context/accept/","text":"core / org.pinelang.parser / PineScript / ObjectPropertyExpressionContext / accept accept \u00b6 open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T","title":"accept - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-property-expression-context/accept/#accept","text":"open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T","title":"accept"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-property-expression-context/enter-rule/","text":"core / org.pinelang.parser / PineScript / ObjectPropertyExpressionContext / enterRule enterRule \u00b6 open fun enterRule(listener: ParseTreeListener!): Unit","title":"enterRule - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-property-expression-context/enter-rule/#enterrule","text":"open fun enterRule(listener: ParseTreeListener!): Unit","title":"enterRule"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-property-expression-context/exit-rule/","text":"core / org.pinelang.parser / PineScript / ObjectPropertyExpressionContext / exitRule exitRule \u00b6 open fun exitRule(listener: ParseTreeListener!): Unit","title":"exitRule - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-property-expression-context/exit-rule/#exitrule","text":"open fun exitRule(listener: ParseTreeListener!): Unit","title":"exitRule"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-property-expression-context/get-rule-index/","text":"core / org.pinelang.parser / PineScript / ObjectPropertyExpressionContext / getRuleIndex getRuleIndex \u00b6 open fun getRuleIndex(): Int","title":"getRuleIndex - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-object-property-expression-context/get-rule-index/#getruleindex","text":"open fun getRuleIndex(): Int","title":"getRuleIndex"},{"location":"latest/core/org.pinelang.parser/-pine-script/-primitive-expression-context/","text":"core / org.pinelang.parser / PineScript / PrimitiveExpressionContext PrimitiveExpressionContext \u00b6 open class PrimitiveExpressionContext : ParserRuleContext Constructors \u00b6 Name Summary <init> PrimitiveExpressionContext(parent: ParserRuleContext!, invokingState: Int ) Functions \u00b6 Name Summary accept open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T enterRule open fun enterRule(listener: ParseTreeListener!): Unit exitRule open fun exitRule(listener: ParseTreeListener!): Unit FALSE open fun FALSE(): TerminalNode! FloatLiteral open fun FloatLiteral(): TerminalNode! getRuleIndex open fun getRuleIndex(): Int IntegerLiteral open fun IntegerLiteral(): TerminalNode! integerSuffix open fun integerSuffix(): IntegerSuffixContext! stringLiteral open fun stringLiteral(): StringLiteralContext! TRUE open fun TRUE(): TerminalNode!","title":"PrimitiveExpressionContext - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-primitive-expression-context/#primitiveexpressioncontext","text":"open class PrimitiveExpressionContext : ParserRuleContext","title":"PrimitiveExpressionContext"},{"location":"latest/core/org.pinelang.parser/-pine-script/-primitive-expression-context/#constructors","text":"Name Summary <init> PrimitiveExpressionContext(parent: ParserRuleContext!, invokingState: Int )","title":"Constructors"},{"location":"latest/core/org.pinelang.parser/-pine-script/-primitive-expression-context/#functions","text":"Name Summary accept open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T enterRule open fun enterRule(listener: ParseTreeListener!): Unit exitRule open fun exitRule(listener: ParseTreeListener!): Unit FALSE open fun FALSE(): TerminalNode! FloatLiteral open fun FloatLiteral(): TerminalNode! getRuleIndex open fun getRuleIndex(): Int IntegerLiteral open fun IntegerLiteral(): TerminalNode! integerSuffix open fun integerSuffix(): IntegerSuffixContext! stringLiteral open fun stringLiteral(): StringLiteralContext! TRUE open fun TRUE(): TerminalNode!","title":"Functions"},{"location":"latest/core/org.pinelang.parser/-pine-script/-primitive-expression-context/-f-a-l-s-e/","text":"core / org.pinelang.parser / PineScript / PrimitiveExpressionContext / FALSE FALSE \u00b6 open fun FALSE(): TerminalNode!","title":"FALSE - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-primitive-expression-context/-f-a-l-s-e/#false","text":"open fun FALSE(): TerminalNode!","title":"FALSE"},{"location":"latest/core/org.pinelang.parser/-pine-script/-primitive-expression-context/-float-literal/","text":"core / org.pinelang.parser / PineScript / PrimitiveExpressionContext / FloatLiteral FloatLiteral \u00b6 open fun FloatLiteral(): TerminalNode!","title":"FloatLiteral - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-primitive-expression-context/-float-literal/#floatliteral","text":"open fun FloatLiteral(): TerminalNode!","title":"FloatLiteral"},{"location":"latest/core/org.pinelang.parser/-pine-script/-primitive-expression-context/-init-/","text":"core / org.pinelang.parser / PineScript / PrimitiveExpressionContext / <init> <init> \u00b6 PrimitiveExpressionContext(parent: ParserRuleContext!, invokingState: Int )","title":" init "},{"location":"latest/core/org.pinelang.parser/-pine-script/-primitive-expression-context/-init-/#init","text":"PrimitiveExpressionContext(parent: ParserRuleContext!, invokingState: Int )","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.parser/-pine-script/-primitive-expression-context/-integer-literal/","text":"core / org.pinelang.parser / PineScript / PrimitiveExpressionContext / IntegerLiteral IntegerLiteral \u00b6 open fun IntegerLiteral(): TerminalNode!","title":"IntegerLiteral - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-primitive-expression-context/-integer-literal/#integerliteral","text":"open fun IntegerLiteral(): TerminalNode!","title":"IntegerLiteral"},{"location":"latest/core/org.pinelang.parser/-pine-script/-primitive-expression-context/-t-r-u-e/","text":"core / org.pinelang.parser / PineScript / PrimitiveExpressionContext / TRUE TRUE \u00b6 open fun TRUE(): TerminalNode!","title":"TRUE - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-primitive-expression-context/-t-r-u-e/#true","text":"open fun TRUE(): TerminalNode!","title":"TRUE"},{"location":"latest/core/org.pinelang.parser/-pine-script/-primitive-expression-context/accept/","text":"core / org.pinelang.parser / PineScript / PrimitiveExpressionContext / accept accept \u00b6 open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T","title":"accept - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-primitive-expression-context/accept/#accept","text":"open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T","title":"accept"},{"location":"latest/core/org.pinelang.parser/-pine-script/-primitive-expression-context/enter-rule/","text":"core / org.pinelang.parser / PineScript / PrimitiveExpressionContext / enterRule enterRule \u00b6 open fun enterRule(listener: ParseTreeListener!): Unit","title":"enterRule - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-primitive-expression-context/enter-rule/#enterrule","text":"open fun enterRule(listener: ParseTreeListener!): Unit","title":"enterRule"},{"location":"latest/core/org.pinelang.parser/-pine-script/-primitive-expression-context/exit-rule/","text":"core / org.pinelang.parser / PineScript / PrimitiveExpressionContext / exitRule exitRule \u00b6 open fun exitRule(listener: ParseTreeListener!): Unit","title":"exitRule - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-primitive-expression-context/exit-rule/#exitrule","text":"open fun exitRule(listener: ParseTreeListener!): Unit","title":"exitRule"},{"location":"latest/core/org.pinelang.parser/-pine-script/-primitive-expression-context/get-rule-index/","text":"core / org.pinelang.parser / PineScript / PrimitiveExpressionContext / getRuleIndex getRuleIndex \u00b6 open fun getRuleIndex(): Int","title":"getRuleIndex - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-primitive-expression-context/get-rule-index/#getruleindex","text":"open fun getRuleIndex(): Int","title":"getRuleIndex"},{"location":"latest/core/org.pinelang.parser/-pine-script/-primitive-expression-context/integer-suffix/","text":"core / org.pinelang.parser / PineScript / PrimitiveExpressionContext / integerSuffix integerSuffix \u00b6 open fun integerSuffix(): IntegerSuffixContext!","title":"integerSuffix - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-primitive-expression-context/integer-suffix/#integersuffix","text":"open fun integerSuffix(): IntegerSuffixContext!","title":"integerSuffix"},{"location":"latest/core/org.pinelang.parser/-pine-script/-primitive-expression-context/string-literal/","text":"core / org.pinelang.parser / PineScript / PrimitiveExpressionContext / stringLiteral stringLiteral \u00b6 open fun stringLiteral(): StringLiteralContext!","title":"stringLiteral - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-primitive-expression-context/string-literal/#stringliteral","text":"open fun stringLiteral(): StringLiteralContext!","title":"stringLiteral"},{"location":"latest/core/org.pinelang.parser/-pine-script/-program-context/","text":"core / org.pinelang.parser / PineScript / ProgramContext ProgramContext \u00b6 open class ProgramContext : ParserRuleContext Constructors \u00b6 Name Summary <init> ProgramContext(parent: ParserRuleContext!, invokingState: Int ) Functions \u00b6 Name Summary accept open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T enterRule open fun enterRule(listener: ParseTreeListener!): Unit EOF open fun EOF(): TerminalNode! exitRule open fun exitRule(listener: ParseTreeListener!): Unit getRuleIndex open fun getRuleIndex(): Int rootMember open fun rootMember(): RootMemberContext!","title":"ProgramContext - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-program-context/#programcontext","text":"open class ProgramContext : ParserRuleContext","title":"ProgramContext"},{"location":"latest/core/org.pinelang.parser/-pine-script/-program-context/#constructors","text":"Name Summary <init> ProgramContext(parent: ParserRuleContext!, invokingState: Int )","title":"Constructors"},{"location":"latest/core/org.pinelang.parser/-pine-script/-program-context/#functions","text":"Name Summary accept open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T enterRule open fun enterRule(listener: ParseTreeListener!): Unit EOF open fun EOF(): TerminalNode! exitRule open fun exitRule(listener: ParseTreeListener!): Unit getRuleIndex open fun getRuleIndex(): Int rootMember open fun rootMember(): RootMemberContext!","title":"Functions"},{"location":"latest/core/org.pinelang.parser/-pine-script/-program-context/-e-o-f/","text":"core / org.pinelang.parser / PineScript / ProgramContext / EOF EOF \u00b6 open fun EOF(): TerminalNode!","title":"EOF - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-program-context/-e-o-f/#eof","text":"open fun EOF(): TerminalNode!","title":"EOF"},{"location":"latest/core/org.pinelang.parser/-pine-script/-program-context/-init-/","text":"core / org.pinelang.parser / PineScript / ProgramContext / <init> <init> \u00b6 ProgramContext(parent: ParserRuleContext!, invokingState: Int )","title":" init "},{"location":"latest/core/org.pinelang.parser/-pine-script/-program-context/-init-/#init","text":"ProgramContext(parent: ParserRuleContext!, invokingState: Int )","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.parser/-pine-script/-program-context/accept/","text":"core / org.pinelang.parser / PineScript / ProgramContext / accept accept \u00b6 open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T","title":"accept - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-program-context/accept/#accept","text":"open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T","title":"accept"},{"location":"latest/core/org.pinelang.parser/-pine-script/-program-context/enter-rule/","text":"core / org.pinelang.parser / PineScript / ProgramContext / enterRule enterRule \u00b6 open fun enterRule(listener: ParseTreeListener!): Unit","title":"enterRule - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-program-context/enter-rule/#enterrule","text":"open fun enterRule(listener: ParseTreeListener!): Unit","title":"enterRule"},{"location":"latest/core/org.pinelang.parser/-pine-script/-program-context/exit-rule/","text":"core / org.pinelang.parser / PineScript / ProgramContext / exitRule exitRule \u00b6 open fun exitRule(listener: ParseTreeListener!): Unit","title":"exitRule - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-program-context/exit-rule/#exitrule","text":"open fun exitRule(listener: ParseTreeListener!): Unit","title":"exitRule"},{"location":"latest/core/org.pinelang.parser/-pine-script/-program-context/get-rule-index/","text":"core / org.pinelang.parser / PineScript / ProgramContext / getRuleIndex getRuleIndex \u00b6 open fun getRuleIndex(): Int","title":"getRuleIndex - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-program-context/get-rule-index/#getruleindex","text":"open fun getRuleIndex(): Int","title":"getRuleIndex"},{"location":"latest/core/org.pinelang.parser/-pine-script/-program-context/root-member/","text":"core / org.pinelang.parser / PineScript / ProgramContext / rootMember rootMember \u00b6 open fun rootMember(): RootMemberContext!","title":"rootMember - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-program-context/root-member/#rootmember","text":"open fun rootMember(): RootMemberContext!","title":"rootMember"},{"location":"latest/core/org.pinelang.parser/-pine-script/-property-definition-context/","text":"core / org.pinelang.parser / PineScript / PropertyDefinitionContext PropertyDefinitionContext \u00b6 open class PropertyDefinitionContext : ParserRuleContext Constructors \u00b6 Name Summary <init> PropertyDefinitionContext(parent: ParserRuleContext!, invokingState: Int ) Functions \u00b6 Name Summary accept open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T COLON open fun COLON(): TerminalNode! enterRule open fun enterRule(listener: ParseTreeListener!): Unit exitRule open fun exitRule(listener: ParseTreeListener!): Unit expression open fun expression(): ExpressionContext! getRuleIndex open fun getRuleIndex(): Int Identifier open fun Identifier(): TerminalNode! SEMICOLON open fun SEMICOLON(): TerminalNode!","title":"PropertyDefinitionContext - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-property-definition-context/#propertydefinitioncontext","text":"open class PropertyDefinitionContext : ParserRuleContext","title":"PropertyDefinitionContext"},{"location":"latest/core/org.pinelang.parser/-pine-script/-property-definition-context/#constructors","text":"Name Summary <init> PropertyDefinitionContext(parent: ParserRuleContext!, invokingState: Int )","title":"Constructors"},{"location":"latest/core/org.pinelang.parser/-pine-script/-property-definition-context/#functions","text":"Name Summary accept open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T COLON open fun COLON(): TerminalNode! enterRule open fun enterRule(listener: ParseTreeListener!): Unit exitRule open fun exitRule(listener: ParseTreeListener!): Unit expression open fun expression(): ExpressionContext! getRuleIndex open fun getRuleIndex(): Int Identifier open fun Identifier(): TerminalNode! SEMICOLON open fun SEMICOLON(): TerminalNode!","title":"Functions"},{"location":"latest/core/org.pinelang.parser/-pine-script/-property-definition-context/-c-o-l-o-n/","text":"core / org.pinelang.parser / PineScript / PropertyDefinitionContext / COLON COLON \u00b6 open fun COLON(): TerminalNode!","title":"COLON - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-property-definition-context/-c-o-l-o-n/#colon","text":"open fun COLON(): TerminalNode!","title":"COLON"},{"location":"latest/core/org.pinelang.parser/-pine-script/-property-definition-context/-identifier/","text":"core / org.pinelang.parser / PineScript / PropertyDefinitionContext / Identifier Identifier \u00b6 open fun Identifier(): TerminalNode!","title":"Identifier - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-property-definition-context/-identifier/#identifier","text":"open fun Identifier(): TerminalNode!","title":"Identifier"},{"location":"latest/core/org.pinelang.parser/-pine-script/-property-definition-context/-init-/","text":"core / org.pinelang.parser / PineScript / PropertyDefinitionContext / <init> <init> \u00b6 PropertyDefinitionContext(parent: ParserRuleContext!, invokingState: Int )","title":" init "},{"location":"latest/core/org.pinelang.parser/-pine-script/-property-definition-context/-init-/#init","text":"PropertyDefinitionContext(parent: ParserRuleContext!, invokingState: Int )","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.parser/-pine-script/-property-definition-context/-s-e-m-i-c-o-l-o-n/","text":"core / org.pinelang.parser / PineScript / PropertyDefinitionContext / SEMICOLON SEMICOLON \u00b6 open fun SEMICOLON(): TerminalNode!","title":"SEMICOLON - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-property-definition-context/-s-e-m-i-c-o-l-o-n/#semicolon","text":"open fun SEMICOLON(): TerminalNode!","title":"SEMICOLON"},{"location":"latest/core/org.pinelang.parser/-pine-script/-property-definition-context/accept/","text":"core / org.pinelang.parser / PineScript / PropertyDefinitionContext / accept accept \u00b6 open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T","title":"accept - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-property-definition-context/accept/#accept","text":"open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T","title":"accept"},{"location":"latest/core/org.pinelang.parser/-pine-script/-property-definition-context/enter-rule/","text":"core / org.pinelang.parser / PineScript / PropertyDefinitionContext / enterRule enterRule \u00b6 open fun enterRule(listener: ParseTreeListener!): Unit","title":"enterRule - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-property-definition-context/enter-rule/#enterrule","text":"open fun enterRule(listener: ParseTreeListener!): Unit","title":"enterRule"},{"location":"latest/core/org.pinelang.parser/-pine-script/-property-definition-context/exit-rule/","text":"core / org.pinelang.parser / PineScript / PropertyDefinitionContext / exitRule exitRule \u00b6 open fun exitRule(listener: ParseTreeListener!): Unit","title":"exitRule - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-property-definition-context/exit-rule/#exitrule","text":"open fun exitRule(listener: ParseTreeListener!): Unit","title":"exitRule"},{"location":"latest/core/org.pinelang.parser/-pine-script/-property-definition-context/expression/","text":"core / org.pinelang.parser / PineScript / PropertyDefinitionContext / expression expression \u00b6 open fun expression(): ExpressionContext!","title":"expression - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-property-definition-context/expression/#expression","text":"open fun expression(): ExpressionContext!","title":"expression"},{"location":"latest/core/org.pinelang.parser/-pine-script/-property-definition-context/get-rule-index/","text":"core / org.pinelang.parser / PineScript / PropertyDefinitionContext / getRuleIndex getRuleIndex \u00b6 open fun getRuleIndex(): Int","title":"getRuleIndex - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-property-definition-context/get-rule-index/#getruleindex","text":"open fun getRuleIndex(): Int","title":"getRuleIndex"},{"location":"latest/core/org.pinelang.parser/-pine-script/-root-member-context/","text":"core / org.pinelang.parser / PineScript / RootMemberContext RootMemberContext \u00b6 open class RootMemberContext : ParserRuleContext Constructors \u00b6 Name Summary <init> RootMemberContext(parent: ParserRuleContext!, invokingState: Int ) Functions \u00b6 Name Summary accept open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T enterRule open fun enterRule(listener: ParseTreeListener!): Unit exitRule open fun exitRule(listener: ParseTreeListener!): Unit getRuleIndex open fun getRuleIndex(): Int objectDefinition open fun objectDefinition(): ObjectDefinitionContext!","title":"RootMemberContext - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-root-member-context/#rootmembercontext","text":"open class RootMemberContext : ParserRuleContext","title":"RootMemberContext"},{"location":"latest/core/org.pinelang.parser/-pine-script/-root-member-context/#constructors","text":"Name Summary <init> RootMemberContext(parent: ParserRuleContext!, invokingState: Int )","title":"Constructors"},{"location":"latest/core/org.pinelang.parser/-pine-script/-root-member-context/#functions","text":"Name Summary accept open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T enterRule open fun enterRule(listener: ParseTreeListener!): Unit exitRule open fun exitRule(listener: ParseTreeListener!): Unit getRuleIndex open fun getRuleIndex(): Int objectDefinition open fun objectDefinition(): ObjectDefinitionContext!","title":"Functions"},{"location":"latest/core/org.pinelang.parser/-pine-script/-root-member-context/-init-/","text":"core / org.pinelang.parser / PineScript / RootMemberContext / <init> <init> \u00b6 RootMemberContext(parent: ParserRuleContext!, invokingState: Int )","title":" init "},{"location":"latest/core/org.pinelang.parser/-pine-script/-root-member-context/-init-/#init","text":"RootMemberContext(parent: ParserRuleContext!, invokingState: Int )","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.parser/-pine-script/-root-member-context/accept/","text":"core / org.pinelang.parser / PineScript / RootMemberContext / accept accept \u00b6 open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T","title":"accept - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-root-member-context/accept/#accept","text":"open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T","title":"accept"},{"location":"latest/core/org.pinelang.parser/-pine-script/-root-member-context/enter-rule/","text":"core / org.pinelang.parser / PineScript / RootMemberContext / enterRule enterRule \u00b6 open fun enterRule(listener: ParseTreeListener!): Unit","title":"enterRule - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-root-member-context/enter-rule/#enterrule","text":"open fun enterRule(listener: ParseTreeListener!): Unit","title":"enterRule"},{"location":"latest/core/org.pinelang.parser/-pine-script/-root-member-context/exit-rule/","text":"core / org.pinelang.parser / PineScript / RootMemberContext / exitRule exitRule \u00b6 open fun exitRule(listener: ParseTreeListener!): Unit","title":"exitRule - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-root-member-context/exit-rule/#exitrule","text":"open fun exitRule(listener: ParseTreeListener!): Unit","title":"exitRule"},{"location":"latest/core/org.pinelang.parser/-pine-script/-root-member-context/get-rule-index/","text":"core / org.pinelang.parser / PineScript / RootMemberContext / getRuleIndex getRuleIndex \u00b6 open fun getRuleIndex(): Int","title":"getRuleIndex - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-root-member-context/get-rule-index/#getruleindex","text":"open fun getRuleIndex(): Int","title":"getRuleIndex"},{"location":"latest/core/org.pinelang.parser/-pine-script/-root-member-context/object-definition/","text":"core / org.pinelang.parser / PineScript / RootMemberContext / objectDefinition objectDefinition \u00b6 open fun objectDefinition(): ObjectDefinitionContext!","title":"objectDefinition - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-root-member-context/object-definition/#objectdefinition","text":"open fun objectDefinition(): ObjectDefinitionContext!","title":"objectDefinition"},{"location":"latest/core/org.pinelang.parser/-pine-script/-signal-assignement-context/","text":"core / org.pinelang.parser / PineScript / SignalAssignementContext SignalAssignementContext \u00b6 open class SignalAssignementContext : ParserRuleContext Constructors \u00b6 Name Summary <init> SignalAssignementContext(parent: ParserRuleContext!, invokingState: Int ) Functions \u00b6 Name Summary accept open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T callableExpression open fun callableExpression(): CallableExpressionContext! COLON open fun COLON(): TerminalNode! enterRule open fun enterRule(listener: ParseTreeListener!): Unit exitRule open fun exitRule(listener: ParseTreeListener!): Unit getRuleIndex open fun getRuleIndex(): Int Identifier open fun Identifier(): TerminalNode! ON open fun ON(): TerminalNode! SEMICOLON open fun SEMICOLON(): TerminalNode!","title":"SignalAssignementContext - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-signal-assignement-context/#signalassignementcontext","text":"open class SignalAssignementContext : ParserRuleContext","title":"SignalAssignementContext"},{"location":"latest/core/org.pinelang.parser/-pine-script/-signal-assignement-context/#constructors","text":"Name Summary <init> SignalAssignementContext(parent: ParserRuleContext!, invokingState: Int )","title":"Constructors"},{"location":"latest/core/org.pinelang.parser/-pine-script/-signal-assignement-context/#functions","text":"Name Summary accept open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T callableExpression open fun callableExpression(): CallableExpressionContext! COLON open fun COLON(): TerminalNode! enterRule open fun enterRule(listener: ParseTreeListener!): Unit exitRule open fun exitRule(listener: ParseTreeListener!): Unit getRuleIndex open fun getRuleIndex(): Int Identifier open fun Identifier(): TerminalNode! ON open fun ON(): TerminalNode! SEMICOLON open fun SEMICOLON(): TerminalNode!","title":"Functions"},{"location":"latest/core/org.pinelang.parser/-pine-script/-signal-assignement-context/-c-o-l-o-n/","text":"core / org.pinelang.parser / PineScript / SignalAssignementContext / COLON COLON \u00b6 open fun COLON(): TerminalNode!","title":"COLON - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-signal-assignement-context/-c-o-l-o-n/#colon","text":"open fun COLON(): TerminalNode!","title":"COLON"},{"location":"latest/core/org.pinelang.parser/-pine-script/-signal-assignement-context/-identifier/","text":"core / org.pinelang.parser / PineScript / SignalAssignementContext / Identifier Identifier \u00b6 open fun Identifier(): TerminalNode!","title":"Identifier - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-signal-assignement-context/-identifier/#identifier","text":"open fun Identifier(): TerminalNode!","title":"Identifier"},{"location":"latest/core/org.pinelang.parser/-pine-script/-signal-assignement-context/-init-/","text":"core / org.pinelang.parser / PineScript / SignalAssignementContext / <init> <init> \u00b6 SignalAssignementContext(parent: ParserRuleContext!, invokingState: Int )","title":" init "},{"location":"latest/core/org.pinelang.parser/-pine-script/-signal-assignement-context/-init-/#init","text":"SignalAssignementContext(parent: ParserRuleContext!, invokingState: Int )","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.parser/-pine-script/-signal-assignement-context/-o-n/","text":"core / org.pinelang.parser / PineScript / SignalAssignementContext / ON ON \u00b6 open fun ON(): TerminalNode!","title":"ON - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-signal-assignement-context/-o-n/#on","text":"open fun ON(): TerminalNode!","title":"ON"},{"location":"latest/core/org.pinelang.parser/-pine-script/-signal-assignement-context/-s-e-m-i-c-o-l-o-n/","text":"core / org.pinelang.parser / PineScript / SignalAssignementContext / SEMICOLON SEMICOLON \u00b6 open fun SEMICOLON(): TerminalNode!","title":"SEMICOLON - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-signal-assignement-context/-s-e-m-i-c-o-l-o-n/#semicolon","text":"open fun SEMICOLON(): TerminalNode!","title":"SEMICOLON"},{"location":"latest/core/org.pinelang.parser/-pine-script/-signal-assignement-context/accept/","text":"core / org.pinelang.parser / PineScript / SignalAssignementContext / accept accept \u00b6 open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T","title":"accept - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-signal-assignement-context/accept/#accept","text":"open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T","title":"accept"},{"location":"latest/core/org.pinelang.parser/-pine-script/-signal-assignement-context/callable-expression/","text":"core / org.pinelang.parser / PineScript / SignalAssignementContext / callableExpression callableExpression \u00b6 open fun callableExpression(): CallableExpressionContext!","title":"callableExpression - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-signal-assignement-context/callable-expression/#callableexpression","text":"open fun callableExpression(): CallableExpressionContext!","title":"callableExpression"},{"location":"latest/core/org.pinelang.parser/-pine-script/-signal-assignement-context/enter-rule/","text":"core / org.pinelang.parser / PineScript / SignalAssignementContext / enterRule enterRule \u00b6 open fun enterRule(listener: ParseTreeListener!): Unit","title":"enterRule - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-signal-assignement-context/enter-rule/#enterrule","text":"open fun enterRule(listener: ParseTreeListener!): Unit","title":"enterRule"},{"location":"latest/core/org.pinelang.parser/-pine-script/-signal-assignement-context/exit-rule/","text":"core / org.pinelang.parser / PineScript / SignalAssignementContext / exitRule exitRule \u00b6 open fun exitRule(listener: ParseTreeListener!): Unit","title":"exitRule - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-signal-assignement-context/exit-rule/#exitrule","text":"open fun exitRule(listener: ParseTreeListener!): Unit","title":"exitRule"},{"location":"latest/core/org.pinelang.parser/-pine-script/-signal-assignement-context/get-rule-index/","text":"core / org.pinelang.parser / PineScript / SignalAssignementContext / getRuleIndex getRuleIndex \u00b6 open fun getRuleIndex(): Int","title":"getRuleIndex - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-signal-assignement-context/get-rule-index/#getruleindex","text":"open fun getRuleIndex(): Int","title":"getRuleIndex"},{"location":"latest/core/org.pinelang.parser/-pine-script/-string-literal-context/","text":"core / org.pinelang.parser / PineScript / StringLiteralContext StringLiteralContext \u00b6 open class StringLiteralContext : ParserRuleContext Constructors \u00b6 Name Summary <init> StringLiteralContext(parent: ParserRuleContext!, invokingState: Int ) Functions \u00b6 Name Summary accept open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T DOUBLE_QUOTE_CLOSE open fun DOUBLE_QUOTE_CLOSE(): TerminalNode! DOUBLE_QUOTE_OPEN open fun DOUBLE_QUOTE_OPEN(): TerminalNode! enterRule open fun enterRule(listener: ParseTreeListener!): Unit exitRule open fun exitRule(listener: ParseTreeListener!): Unit getRuleIndex open fun getRuleIndex(): Int STRING open fun STRING(): TerminalNode!","title":"StringLiteralContext - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-string-literal-context/#stringliteralcontext","text":"open class StringLiteralContext : ParserRuleContext","title":"StringLiteralContext"},{"location":"latest/core/org.pinelang.parser/-pine-script/-string-literal-context/#constructors","text":"Name Summary <init> StringLiteralContext(parent: ParserRuleContext!, invokingState: Int )","title":"Constructors"},{"location":"latest/core/org.pinelang.parser/-pine-script/-string-literal-context/#functions","text":"Name Summary accept open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T DOUBLE_QUOTE_CLOSE open fun DOUBLE_QUOTE_CLOSE(): TerminalNode! DOUBLE_QUOTE_OPEN open fun DOUBLE_QUOTE_OPEN(): TerminalNode! enterRule open fun enterRule(listener: ParseTreeListener!): Unit exitRule open fun exitRule(listener: ParseTreeListener!): Unit getRuleIndex open fun getRuleIndex(): Int STRING open fun STRING(): TerminalNode!","title":"Functions"},{"location":"latest/core/org.pinelang.parser/-pine-script/-string-literal-context/-d-o-u-b-l-e_-q-u-o-t-e_-c-l-o-s-e/","text":"core / org.pinelang.parser / PineScript / StringLiteralContext / DOUBLE_QUOTE_CLOSE DOUBLE_QUOTE_CLOSE \u00b6 open fun DOUBLE_QUOTE_CLOSE(): TerminalNode!","title":"DOUBLE_QUOTE_CLOSE - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-string-literal-context/-d-o-u-b-l-e_-q-u-o-t-e_-c-l-o-s-e/#double_quote_close","text":"open fun DOUBLE_QUOTE_CLOSE(): TerminalNode!","title":"DOUBLE_QUOTE_CLOSE"},{"location":"latest/core/org.pinelang.parser/-pine-script/-string-literal-context/-d-o-u-b-l-e_-q-u-o-t-e_-o-p-e-n/","text":"core / org.pinelang.parser / PineScript / StringLiteralContext / DOUBLE_QUOTE_OPEN DOUBLE_QUOTE_OPEN \u00b6 open fun DOUBLE_QUOTE_OPEN(): TerminalNode!","title":"DOUBLE_QUOTE_OPEN - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-string-literal-context/-d-o-u-b-l-e_-q-u-o-t-e_-o-p-e-n/#double_quote_open","text":"open fun DOUBLE_QUOTE_OPEN(): TerminalNode!","title":"DOUBLE_QUOTE_OPEN"},{"location":"latest/core/org.pinelang.parser/-pine-script/-string-literal-context/-init-/","text":"core / org.pinelang.parser / PineScript / StringLiteralContext / <init> <init> \u00b6 StringLiteralContext(parent: ParserRuleContext!, invokingState: Int )","title":" init "},{"location":"latest/core/org.pinelang.parser/-pine-script/-string-literal-context/-init-/#init","text":"StringLiteralContext(parent: ParserRuleContext!, invokingState: Int )","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.parser/-pine-script/-string-literal-context/-s-t-r-i-n-g/","text":"core / org.pinelang.parser / PineScript / StringLiteralContext / STRING STRING \u00b6 open fun STRING(): TerminalNode!","title":"STRING - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-string-literal-context/-s-t-r-i-n-g/#string","text":"open fun STRING(): TerminalNode!","title":"STRING"},{"location":"latest/core/org.pinelang.parser/-pine-script/-string-literal-context/accept/","text":"core / org.pinelang.parser / PineScript / StringLiteralContext / accept accept \u00b6 open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T","title":"accept - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-string-literal-context/accept/#accept","text":"open fun <T : Any !> accept(visitor: ParseTreeVisitor<out T>!): T","title":"accept"},{"location":"latest/core/org.pinelang.parser/-pine-script/-string-literal-context/enter-rule/","text":"core / org.pinelang.parser / PineScript / StringLiteralContext / enterRule enterRule \u00b6 open fun enterRule(listener: ParseTreeListener!): Unit","title":"enterRule - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-string-literal-context/enter-rule/#enterrule","text":"open fun enterRule(listener: ParseTreeListener!): Unit","title":"enterRule"},{"location":"latest/core/org.pinelang.parser/-pine-script/-string-literal-context/exit-rule/","text":"core / org.pinelang.parser / PineScript / StringLiteralContext / exitRule exitRule \u00b6 open fun exitRule(listener: ParseTreeListener!): Unit","title":"exitRule - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-string-literal-context/exit-rule/#exitrule","text":"open fun exitRule(listener: ParseTreeListener!): Unit","title":"exitRule"},{"location":"latest/core/org.pinelang.parser/-pine-script/-string-literal-context/get-rule-index/","text":"core / org.pinelang.parser / PineScript / StringLiteralContext / getRuleIndex getRuleIndex \u00b6 open fun getRuleIndex(): Int","title":"getRuleIndex - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script/-string-literal-context/get-rule-index/#getruleindex","text":"open fun getRuleIndex(): Int","title":"getRuleIndex"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/","text":"core / org.pinelang.parser / PineScriptBaseListener PineScriptBaseListener \u00b6 open class PineScriptBaseListener : PineScriptListener This class provides an empty implementation of `[ PineScriptListener`](../-pine-script-listener/index.md), which can be extended to create a listener which only needs to handle a subset of the available methods. Constructors \u00b6 Name Summary <init> This class provides an empty implementation of `[ PineScriptListener ](../-pine-script-listener/index.md), which can be extended to create a listener which only needs to handle a subset of the available methods. PineScriptBaseListener()` Functions \u00b6 Name Summary enterArguments Enter a parse tree produced by `[ PineScript#arguments ](../-pine-script/arguments.md). open fun enterArguments(ctx: ArgumentsContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterBinaryOperation Enter a parse tree produced by `[ PineScript#binaryOperation ](../-pine-script/binary-operation.md). open fun enterBinaryOperation(ctx: BinaryOperationContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterCallableExpression Enter a parse tree produced by `[ PineScript#callableExpression ](../-pine-script/callable-expression.md). open fun enterCallableExpression(ctx: CallableExpressionContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterEveryRule The default implementation does nothing. open fun enterEveryRule(ctx: ParserRuleContext!): Unit enterExpression Enter a parse tree produced by PineScript#expression. open fun enterExpression(ctx: ExpressionContext!): Unit enterIntegerSuffix Enter a parse tree produced by `[ PineScript#integerSuffix ](../-pine-script/integer-suffix.md). open fun enterIntegerSuffix(ctx: IntegerSuffixContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterObjectDefinition Enter a parse tree produced by `[ PineScript#objectDefinition ](../-pine-script/object-definition.md). open fun enterObjectDefinition(ctx: ObjectDefinitionContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterObjectIdentifier Enter a parse tree produced by `[ PineScript#objectIdentifier ](../-pine-script/object-identifier.md). open fun enterObjectIdentifier(ctx: ObjectIdentifierContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterObjectInitializer Enter a parse tree produced by `[ PineScript#objectInitializer ](../-pine-script/object-initializer.md). open fun enterObjectInitializer(ctx: ObjectInitializerContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterObjectPropertyExpression Enter a parse tree produced by `[ PineScript#objectPropertyExpression ](../-pine-script/object-property-expression.md). open fun enterObjectPropertyExpression(ctx: ObjectPropertyExpressionContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterPrimitiveExpression Enter a parse tree produced by `[ PineScript#primitiveExpression ](../-pine-script/primitive-expression.md). open fun enterPrimitiveExpression(ctx: PrimitiveExpressionContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterProgram Enter a parse tree produced by `[ PineScript#program ](../-pine-script/program.md). open fun enterProgram(ctx: ProgramContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterPropertyDefinition Enter a parse tree produced by `[ PineScript#propertyDefinition ](../-pine-script/property-definition.md). open fun enterPropertyDefinition(ctx: PropertyDefinitionContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterRootMember Enter a parse tree produced by `[ PineScript#rootMember ](../-pine-script/root-member.md). open fun enterRootMember(ctx: RootMemberContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterSignalAssignement Enter a parse tree produced by `[ PineScript#signalAssignement ](../-pine-script/signal-assignement.md). open fun enterSignalAssignement(ctx: SignalAssignementContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterStringLiteral Enter a parse tree produced by `[ PineScript#stringLiteral ](../-pine-script/string-literal.md). open fun enterStringLiteral(ctx: StringLiteralContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitArguments Exit a parse tree produced by `[ PineScript#arguments ](../-pine-script/arguments.md). open fun exitArguments(ctx: ArgumentsContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitBinaryOperation Exit a parse tree produced by `[ PineScript#binaryOperation ](../-pine-script/binary-operation.md). open fun exitBinaryOperation(ctx: BinaryOperationContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitCallableExpression Exit a parse tree produced by `[ PineScript#callableExpression ](../-pine-script/callable-expression.md). open fun exitCallableExpression(ctx: CallableExpressionContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitEveryRule The default implementation does nothing. open fun exitEveryRule(ctx: ParserRuleContext!): Unit exitExpression Exit a parse tree produced by PineScript#expression. open fun exitExpression(ctx: ExpressionContext!): Unit exitIntegerSuffix Exit a parse tree produced by `[ PineScript#integerSuffix ](../-pine-script/integer-suffix.md). open fun exitIntegerSuffix(ctx: IntegerSuffixContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitObjectDefinition Exit a parse tree produced by `[ PineScript#objectDefinition ](../-pine-script/object-definition.md). open fun exitObjectDefinition(ctx: ObjectDefinitionContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitObjectIdentifier Exit a parse tree produced by `[ PineScript#objectIdentifier ](../-pine-script/object-identifier.md). open fun exitObjectIdentifier(ctx: ObjectIdentifierContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitObjectInitializer Exit a parse tree produced by `[ PineScript#objectInitializer ](../-pine-script/object-initializer.md). open fun exitObjectInitializer(ctx: ObjectInitializerContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitObjectPropertyExpression Exit a parse tree produced by `[ PineScript#objectPropertyExpression ](../-pine-script/object-property-expression.md). open fun exitObjectPropertyExpression(ctx: ObjectPropertyExpressionContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitPrimitiveExpression Exit a parse tree produced by `[ PineScript#primitiveExpression ](../-pine-script/primitive-expression.md). open fun exitPrimitiveExpression(ctx: PrimitiveExpressionContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitProgram Exit a parse tree produced by `[ PineScript#program ](../-pine-script/program.md). open fun exitProgram(ctx: ProgramContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitPropertyDefinition Exit a parse tree produced by `[ PineScript#propertyDefinition ](../-pine-script/property-definition.md). open fun exitPropertyDefinition(ctx: PropertyDefinitionContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitRootMember Exit a parse tree produced by `[ PineScript#rootMember ](../-pine-script/root-member.md). open fun exitRootMember(ctx: RootMemberContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitSignalAssignement Exit a parse tree produced by `[ PineScript#signalAssignement ](../-pine-script/signal-assignement.md). open fun exitSignalAssignement(ctx: SignalAssignementContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitStringLiteral Exit a parse tree produced by `[ PineScript#stringLiteral ](../-pine-script/string-literal.md). open fun exitStringLiteral(ctx: StringLiteralContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) visitErrorNode The default implementation does nothing. open fun visitErrorNode(node: ErrorNode!): Unit visitTerminal The default implementation does nothing. open fun visitTerminal(node: TerminalNode!): Unit","title":"PineScriptBaseListener - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/#pinescriptbaselistener","text":"open class PineScriptBaseListener : PineScriptListener This class provides an empty implementation of `[ PineScriptListener`](../-pine-script-listener/index.md), which can be extended to create a listener which only needs to handle a subset of the available methods.","title":"PineScriptBaseListener"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/#constructors","text":"Name Summary <init> This class provides an empty implementation of `[ PineScriptListener ](../-pine-script-listener/index.md), which can be extended to create a listener which only needs to handle a subset of the available methods. PineScriptBaseListener()`","title":"Constructors"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/#functions","text":"Name Summary enterArguments Enter a parse tree produced by `[ PineScript#arguments ](../-pine-script/arguments.md). open fun enterArguments(ctx: ArgumentsContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterBinaryOperation Enter a parse tree produced by `[ PineScript#binaryOperation ](../-pine-script/binary-operation.md). open fun enterBinaryOperation(ctx: BinaryOperationContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterCallableExpression Enter a parse tree produced by `[ PineScript#callableExpression ](../-pine-script/callable-expression.md). open fun enterCallableExpression(ctx: CallableExpressionContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterEveryRule The default implementation does nothing. open fun enterEveryRule(ctx: ParserRuleContext!): Unit enterExpression Enter a parse tree produced by PineScript#expression. open fun enterExpression(ctx: ExpressionContext!): Unit enterIntegerSuffix Enter a parse tree produced by `[ PineScript#integerSuffix ](../-pine-script/integer-suffix.md). open fun enterIntegerSuffix(ctx: IntegerSuffixContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterObjectDefinition Enter a parse tree produced by `[ PineScript#objectDefinition ](../-pine-script/object-definition.md). open fun enterObjectDefinition(ctx: ObjectDefinitionContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterObjectIdentifier Enter a parse tree produced by `[ PineScript#objectIdentifier ](../-pine-script/object-identifier.md). open fun enterObjectIdentifier(ctx: ObjectIdentifierContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterObjectInitializer Enter a parse tree produced by `[ PineScript#objectInitializer ](../-pine-script/object-initializer.md). open fun enterObjectInitializer(ctx: ObjectInitializerContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterObjectPropertyExpression Enter a parse tree produced by `[ PineScript#objectPropertyExpression ](../-pine-script/object-property-expression.md). open fun enterObjectPropertyExpression(ctx: ObjectPropertyExpressionContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterPrimitiveExpression Enter a parse tree produced by `[ PineScript#primitiveExpression ](../-pine-script/primitive-expression.md). open fun enterPrimitiveExpression(ctx: PrimitiveExpressionContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterProgram Enter a parse tree produced by `[ PineScript#program ](../-pine-script/program.md). open fun enterProgram(ctx: ProgramContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterPropertyDefinition Enter a parse tree produced by `[ PineScript#propertyDefinition ](../-pine-script/property-definition.md). open fun enterPropertyDefinition(ctx: PropertyDefinitionContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterRootMember Enter a parse tree produced by `[ PineScript#rootMember ](../-pine-script/root-member.md). open fun enterRootMember(ctx: RootMemberContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterSignalAssignement Enter a parse tree produced by `[ PineScript#signalAssignement ](../-pine-script/signal-assignement.md). open fun enterSignalAssignement(ctx: SignalAssignementContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterStringLiteral Enter a parse tree produced by `[ PineScript#stringLiteral ](../-pine-script/string-literal.md). open fun enterStringLiteral(ctx: StringLiteralContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitArguments Exit a parse tree produced by `[ PineScript#arguments ](../-pine-script/arguments.md). open fun exitArguments(ctx: ArgumentsContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitBinaryOperation Exit a parse tree produced by `[ PineScript#binaryOperation ](../-pine-script/binary-operation.md). open fun exitBinaryOperation(ctx: BinaryOperationContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitCallableExpression Exit a parse tree produced by `[ PineScript#callableExpression ](../-pine-script/callable-expression.md). open fun exitCallableExpression(ctx: CallableExpressionContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitEveryRule The default implementation does nothing. open fun exitEveryRule(ctx: ParserRuleContext!): Unit exitExpression Exit a parse tree produced by PineScript#expression. open fun exitExpression(ctx: ExpressionContext!): Unit exitIntegerSuffix Exit a parse tree produced by `[ PineScript#integerSuffix ](../-pine-script/integer-suffix.md). open fun exitIntegerSuffix(ctx: IntegerSuffixContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitObjectDefinition Exit a parse tree produced by `[ PineScript#objectDefinition ](../-pine-script/object-definition.md). open fun exitObjectDefinition(ctx: ObjectDefinitionContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitObjectIdentifier Exit a parse tree produced by `[ PineScript#objectIdentifier ](../-pine-script/object-identifier.md). open fun exitObjectIdentifier(ctx: ObjectIdentifierContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitObjectInitializer Exit a parse tree produced by `[ PineScript#objectInitializer ](../-pine-script/object-initializer.md). open fun exitObjectInitializer(ctx: ObjectInitializerContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitObjectPropertyExpression Exit a parse tree produced by `[ PineScript#objectPropertyExpression ](../-pine-script/object-property-expression.md). open fun exitObjectPropertyExpression(ctx: ObjectPropertyExpressionContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitPrimitiveExpression Exit a parse tree produced by `[ PineScript#primitiveExpression ](../-pine-script/primitive-expression.md). open fun exitPrimitiveExpression(ctx: PrimitiveExpressionContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitProgram Exit a parse tree produced by `[ PineScript#program ](../-pine-script/program.md). open fun exitProgram(ctx: ProgramContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitPropertyDefinition Exit a parse tree produced by `[ PineScript#propertyDefinition ](../-pine-script/property-definition.md). open fun exitPropertyDefinition(ctx: PropertyDefinitionContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitRootMember Exit a parse tree produced by `[ PineScript#rootMember ](../-pine-script/root-member.md). open fun exitRootMember(ctx: RootMemberContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitSignalAssignement Exit a parse tree produced by `[ PineScript#signalAssignement ](../-pine-script/signal-assignement.md). open fun exitSignalAssignement(ctx: SignalAssignementContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitStringLiteral Exit a parse tree produced by `[ PineScript#stringLiteral ](../-pine-script/string-literal.md). open fun exitStringLiteral(ctx: StringLiteralContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) visitErrorNode The default implementation does nothing. open fun visitErrorNode(node: ErrorNode!): Unit visitTerminal The default implementation does nothing. open fun visitTerminal(node: TerminalNode!): Unit","title":"Functions"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/-init-/","text":"core / org.pinelang.parser / PineScriptBaseListener / <init> <init> \u00b6 PineScriptBaseListener() This class provides an empty implementation of `[ PineScriptListener`](../-pine-script-listener/index.md), which can be extended to create a listener which only needs to handle a subset of the available methods.","title":" init "},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/-init-/#init","text":"PineScriptBaseListener() This class provides an empty implementation of `[ PineScriptListener`](../-pine-script-listener/index.md), which can be extended to create a listener which only needs to handle a subset of the available methods.","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-arguments/","text":"core / org.pinelang.parser / PineScriptBaseListener / enterArguments enterArguments \u00b6 open fun enterArguments(ctx: ArgumentsContext!): Unit Enter a parse tree produced by `[ PineScript#arguments`](../-pine-script/arguments.md). The default implementation does nothing. Parameters \u00b6 ctx - ArgumentsContext!: the parse tree","title":"enterArguments - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-arguments/#enterarguments","text":"open fun enterArguments(ctx: ArgumentsContext!): Unit Enter a parse tree produced by `[ PineScript#arguments`](../-pine-script/arguments.md). The default implementation does nothing.","title":"enterArguments"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-arguments/#parameters","text":"ctx - ArgumentsContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-binary-operation/","text":"core / org.pinelang.parser / PineScriptBaseListener / enterBinaryOperation enterBinaryOperation \u00b6 open fun enterBinaryOperation(ctx: BinaryOperationContext!): Unit Enter a parse tree produced by `[ PineScript#binaryOperation`](../-pine-script/binary-operation.md). The default implementation does nothing. Parameters \u00b6 ctx - BinaryOperationContext!: the parse tree","title":"enterBinaryOperation - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-binary-operation/#enterbinaryoperation","text":"open fun enterBinaryOperation(ctx: BinaryOperationContext!): Unit Enter a parse tree produced by `[ PineScript#binaryOperation`](../-pine-script/binary-operation.md). The default implementation does nothing.","title":"enterBinaryOperation"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-binary-operation/#parameters","text":"ctx - BinaryOperationContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-callable-expression/","text":"core / org.pinelang.parser / PineScriptBaseListener / enterCallableExpression enterCallableExpression \u00b6 open fun enterCallableExpression(ctx: CallableExpressionContext!): Unit Enter a parse tree produced by `[ PineScript#callableExpression`](../-pine-script/callable-expression.md). The default implementation does nothing. Parameters \u00b6 ctx - CallableExpressionContext!: the parse tree","title":"enterCallableExpression - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-callable-expression/#entercallableexpression","text":"open fun enterCallableExpression(ctx: CallableExpressionContext!): Unit Enter a parse tree produced by `[ PineScript#callableExpression`](../-pine-script/callable-expression.md). The default implementation does nothing.","title":"enterCallableExpression"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-callable-expression/#parameters","text":"ctx - CallableExpressionContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-every-rule/","text":"core / org.pinelang.parser / PineScriptBaseListener / enterEveryRule enterEveryRule \u00b6 open fun enterEveryRule(ctx: ParserRuleContext!): Unit The default implementation does nothing.","title":"enterEveryRule - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-every-rule/#entereveryrule","text":"open fun enterEveryRule(ctx: ParserRuleContext!): Unit The default implementation does nothing.","title":"enterEveryRule"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-expression/","text":"core / org.pinelang.parser / PineScriptBaseListener / enterExpression enterExpression \u00b6 open fun enterExpression(ctx: ExpressionContext!): Unit Enter a parse tree produced by PineScript#expression. The default implementation does nothing. Parameters \u00b6 ctx - ExpressionContext!: the parse tree","title":"enterExpression - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-expression/#enterexpression","text":"open fun enterExpression(ctx: ExpressionContext!): Unit Enter a parse tree produced by PineScript#expression. The default implementation does nothing.","title":"enterExpression"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-expression/#parameters","text":"ctx - ExpressionContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-integer-suffix/","text":"core / org.pinelang.parser / PineScriptBaseListener / enterIntegerSuffix enterIntegerSuffix \u00b6 open fun enterIntegerSuffix(ctx: IntegerSuffixContext!): Unit Enter a parse tree produced by `[ PineScript#integerSuffix`](../-pine-script/integer-suffix.md). The default implementation does nothing. Parameters \u00b6 ctx - IntegerSuffixContext!: the parse tree","title":"enterIntegerSuffix - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-integer-suffix/#enterintegersuffix","text":"open fun enterIntegerSuffix(ctx: IntegerSuffixContext!): Unit Enter a parse tree produced by `[ PineScript#integerSuffix`](../-pine-script/integer-suffix.md). The default implementation does nothing.","title":"enterIntegerSuffix"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-integer-suffix/#parameters","text":"ctx - IntegerSuffixContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-object-definition/","text":"core / org.pinelang.parser / PineScriptBaseListener / enterObjectDefinition enterObjectDefinition \u00b6 open fun enterObjectDefinition(ctx: ObjectDefinitionContext!): Unit Enter a parse tree produced by `[ PineScript#objectDefinition`](../-pine-script/object-definition.md). The default implementation does nothing. Parameters \u00b6 ctx - ObjectDefinitionContext!: the parse tree","title":"enterObjectDefinition - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-object-definition/#enterobjectdefinition","text":"open fun enterObjectDefinition(ctx: ObjectDefinitionContext!): Unit Enter a parse tree produced by `[ PineScript#objectDefinition`](../-pine-script/object-definition.md). The default implementation does nothing.","title":"enterObjectDefinition"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-object-definition/#parameters","text":"ctx - ObjectDefinitionContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-object-identifier/","text":"core / org.pinelang.parser / PineScriptBaseListener / enterObjectIdentifier enterObjectIdentifier \u00b6 open fun enterObjectIdentifier(ctx: ObjectIdentifierContext!): Unit Enter a parse tree produced by `[ PineScript#objectIdentifier`](../-pine-script/object-identifier.md). The default implementation does nothing. Parameters \u00b6 ctx - ObjectIdentifierContext!: the parse tree","title":"enterObjectIdentifier - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-object-identifier/#enterobjectidentifier","text":"open fun enterObjectIdentifier(ctx: ObjectIdentifierContext!): Unit Enter a parse tree produced by `[ PineScript#objectIdentifier`](../-pine-script/object-identifier.md). The default implementation does nothing.","title":"enterObjectIdentifier"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-object-identifier/#parameters","text":"ctx - ObjectIdentifierContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-object-initializer/","text":"core / org.pinelang.parser / PineScriptBaseListener / enterObjectInitializer enterObjectInitializer \u00b6 open fun enterObjectInitializer(ctx: ObjectInitializerContext!): Unit Enter a parse tree produced by `[ PineScript#objectInitializer`](../-pine-script/object-initializer.md). The default implementation does nothing. Parameters \u00b6 ctx - ObjectInitializerContext!: the parse tree","title":"enterObjectInitializer - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-object-initializer/#enterobjectinitializer","text":"open fun enterObjectInitializer(ctx: ObjectInitializerContext!): Unit Enter a parse tree produced by `[ PineScript#objectInitializer`](../-pine-script/object-initializer.md). The default implementation does nothing.","title":"enterObjectInitializer"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-object-initializer/#parameters","text":"ctx - ObjectInitializerContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-object-property-expression/","text":"core / org.pinelang.parser / PineScriptBaseListener / enterObjectPropertyExpression enterObjectPropertyExpression \u00b6 open fun enterObjectPropertyExpression(ctx: ObjectPropertyExpressionContext!): Unit Enter a parse tree produced by `[ PineScript#objectPropertyExpression`](../-pine-script/object-property-expression.md). The default implementation does nothing. Parameters \u00b6 ctx - ObjectPropertyExpressionContext!: the parse tree","title":"enterObjectPropertyExpression - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-object-property-expression/#enterobjectpropertyexpression","text":"open fun enterObjectPropertyExpression(ctx: ObjectPropertyExpressionContext!): Unit Enter a parse tree produced by `[ PineScript#objectPropertyExpression`](../-pine-script/object-property-expression.md). The default implementation does nothing.","title":"enterObjectPropertyExpression"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-object-property-expression/#parameters","text":"ctx - ObjectPropertyExpressionContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-primitive-expression/","text":"core / org.pinelang.parser / PineScriptBaseListener / enterPrimitiveExpression enterPrimitiveExpression \u00b6 open fun enterPrimitiveExpression(ctx: PrimitiveExpressionContext!): Unit Enter a parse tree produced by `[ PineScript#primitiveExpression`](../-pine-script/primitive-expression.md). The default implementation does nothing. Parameters \u00b6 ctx - PrimitiveExpressionContext!: the parse tree","title":"enterPrimitiveExpression - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-primitive-expression/#enterprimitiveexpression","text":"open fun enterPrimitiveExpression(ctx: PrimitiveExpressionContext!): Unit Enter a parse tree produced by `[ PineScript#primitiveExpression`](../-pine-script/primitive-expression.md). The default implementation does nothing.","title":"enterPrimitiveExpression"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-primitive-expression/#parameters","text":"ctx - PrimitiveExpressionContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-program/","text":"core / org.pinelang.parser / PineScriptBaseListener / enterProgram enterProgram \u00b6 open fun enterProgram(ctx: ProgramContext!): Unit Enter a parse tree produced by `[ PineScript#program`](../-pine-script/program.md). The default implementation does nothing. Parameters \u00b6 ctx - ProgramContext!: the parse tree","title":"enterProgram - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-program/#enterprogram","text":"open fun enterProgram(ctx: ProgramContext!): Unit Enter a parse tree produced by `[ PineScript#program`](../-pine-script/program.md). The default implementation does nothing.","title":"enterProgram"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-program/#parameters","text":"ctx - ProgramContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-property-definition/","text":"core / org.pinelang.parser / PineScriptBaseListener / enterPropertyDefinition enterPropertyDefinition \u00b6 open fun enterPropertyDefinition(ctx: PropertyDefinitionContext!): Unit Enter a parse tree produced by `[ PineScript#propertyDefinition`](../-pine-script/property-definition.md). The default implementation does nothing. Parameters \u00b6 ctx - PropertyDefinitionContext!: the parse tree","title":"enterPropertyDefinition - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-property-definition/#enterpropertydefinition","text":"open fun enterPropertyDefinition(ctx: PropertyDefinitionContext!): Unit Enter a parse tree produced by `[ PineScript#propertyDefinition`](../-pine-script/property-definition.md). The default implementation does nothing.","title":"enterPropertyDefinition"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-property-definition/#parameters","text":"ctx - PropertyDefinitionContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-root-member/","text":"core / org.pinelang.parser / PineScriptBaseListener / enterRootMember enterRootMember \u00b6 open fun enterRootMember(ctx: RootMemberContext!): Unit Enter a parse tree produced by `[ PineScript#rootMember`](../-pine-script/root-member.md). The default implementation does nothing. Parameters \u00b6 ctx - RootMemberContext!: the parse tree","title":"enterRootMember - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-root-member/#enterrootmember","text":"open fun enterRootMember(ctx: RootMemberContext!): Unit Enter a parse tree produced by `[ PineScript#rootMember`](../-pine-script/root-member.md). The default implementation does nothing.","title":"enterRootMember"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-root-member/#parameters","text":"ctx - RootMemberContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-signal-assignement/","text":"core / org.pinelang.parser / PineScriptBaseListener / enterSignalAssignement enterSignalAssignement \u00b6 open fun enterSignalAssignement(ctx: SignalAssignementContext!): Unit Enter a parse tree produced by `[ PineScript#signalAssignement`](../-pine-script/signal-assignement.md). The default implementation does nothing. Parameters \u00b6 ctx - SignalAssignementContext!: the parse tree","title":"enterSignalAssignement - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-signal-assignement/#entersignalassignement","text":"open fun enterSignalAssignement(ctx: SignalAssignementContext!): Unit Enter a parse tree produced by `[ PineScript#signalAssignement`](../-pine-script/signal-assignement.md). The default implementation does nothing.","title":"enterSignalAssignement"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-signal-assignement/#parameters","text":"ctx - SignalAssignementContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-string-literal/","text":"core / org.pinelang.parser / PineScriptBaseListener / enterStringLiteral enterStringLiteral \u00b6 open fun enterStringLiteral(ctx: StringLiteralContext!): Unit Enter a parse tree produced by `[ PineScript#stringLiteral`](../-pine-script/string-literal.md). The default implementation does nothing. Parameters \u00b6 ctx - StringLiteralContext!: the parse tree","title":"enterStringLiteral - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-string-literal/#enterstringliteral","text":"open fun enterStringLiteral(ctx: StringLiteralContext!): Unit Enter a parse tree produced by `[ PineScript#stringLiteral`](../-pine-script/string-literal.md). The default implementation does nothing.","title":"enterStringLiteral"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/enter-string-literal/#parameters","text":"ctx - StringLiteralContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-arguments/","text":"core / org.pinelang.parser / PineScriptBaseListener / exitArguments exitArguments \u00b6 open fun exitArguments(ctx: ArgumentsContext!): Unit Exit a parse tree produced by `[ PineScript#arguments`](../-pine-script/arguments.md). The default implementation does nothing. Parameters \u00b6 ctx - ArgumentsContext!: the parse tree","title":"exitArguments - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-arguments/#exitarguments","text":"open fun exitArguments(ctx: ArgumentsContext!): Unit Exit a parse tree produced by `[ PineScript#arguments`](../-pine-script/arguments.md). The default implementation does nothing.","title":"exitArguments"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-arguments/#parameters","text":"ctx - ArgumentsContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-binary-operation/","text":"core / org.pinelang.parser / PineScriptBaseListener / exitBinaryOperation exitBinaryOperation \u00b6 open fun exitBinaryOperation(ctx: BinaryOperationContext!): Unit Exit a parse tree produced by `[ PineScript#binaryOperation`](../-pine-script/binary-operation.md). The default implementation does nothing. Parameters \u00b6 ctx - BinaryOperationContext!: the parse tree","title":"exitBinaryOperation - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-binary-operation/#exitbinaryoperation","text":"open fun exitBinaryOperation(ctx: BinaryOperationContext!): Unit Exit a parse tree produced by `[ PineScript#binaryOperation`](../-pine-script/binary-operation.md). The default implementation does nothing.","title":"exitBinaryOperation"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-binary-operation/#parameters","text":"ctx - BinaryOperationContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-callable-expression/","text":"core / org.pinelang.parser / PineScriptBaseListener / exitCallableExpression exitCallableExpression \u00b6 open fun exitCallableExpression(ctx: CallableExpressionContext!): Unit Exit a parse tree produced by `[ PineScript#callableExpression`](../-pine-script/callable-expression.md). The default implementation does nothing. Parameters \u00b6 ctx - CallableExpressionContext!: the parse tree","title":"exitCallableExpression - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-callable-expression/#exitcallableexpression","text":"open fun exitCallableExpression(ctx: CallableExpressionContext!): Unit Exit a parse tree produced by `[ PineScript#callableExpression`](../-pine-script/callable-expression.md). The default implementation does nothing.","title":"exitCallableExpression"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-callable-expression/#parameters","text":"ctx - CallableExpressionContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-every-rule/","text":"core / org.pinelang.parser / PineScriptBaseListener / exitEveryRule exitEveryRule \u00b6 open fun exitEveryRule(ctx: ParserRuleContext!): Unit The default implementation does nothing.","title":"exitEveryRule - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-every-rule/#exiteveryrule","text":"open fun exitEveryRule(ctx: ParserRuleContext!): Unit The default implementation does nothing.","title":"exitEveryRule"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-expression/","text":"core / org.pinelang.parser / PineScriptBaseListener / exitExpression exitExpression \u00b6 open fun exitExpression(ctx: ExpressionContext!): Unit Exit a parse tree produced by PineScript#expression. The default implementation does nothing. Parameters \u00b6 ctx - ExpressionContext!: the parse tree","title":"exitExpression - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-expression/#exitexpression","text":"open fun exitExpression(ctx: ExpressionContext!): Unit Exit a parse tree produced by PineScript#expression. The default implementation does nothing.","title":"exitExpression"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-expression/#parameters","text":"ctx - ExpressionContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-integer-suffix/","text":"core / org.pinelang.parser / PineScriptBaseListener / exitIntegerSuffix exitIntegerSuffix \u00b6 open fun exitIntegerSuffix(ctx: IntegerSuffixContext!): Unit Exit a parse tree produced by `[ PineScript#integerSuffix`](../-pine-script/integer-suffix.md). The default implementation does nothing. Parameters \u00b6 ctx - IntegerSuffixContext!: the parse tree","title":"exitIntegerSuffix - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-integer-suffix/#exitintegersuffix","text":"open fun exitIntegerSuffix(ctx: IntegerSuffixContext!): Unit Exit a parse tree produced by `[ PineScript#integerSuffix`](../-pine-script/integer-suffix.md). The default implementation does nothing.","title":"exitIntegerSuffix"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-integer-suffix/#parameters","text":"ctx - IntegerSuffixContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-object-definition/","text":"core / org.pinelang.parser / PineScriptBaseListener / exitObjectDefinition exitObjectDefinition \u00b6 open fun exitObjectDefinition(ctx: ObjectDefinitionContext!): Unit Exit a parse tree produced by `[ PineScript#objectDefinition`](../-pine-script/object-definition.md). The default implementation does nothing. Parameters \u00b6 ctx - ObjectDefinitionContext!: the parse tree","title":"exitObjectDefinition - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-object-definition/#exitobjectdefinition","text":"open fun exitObjectDefinition(ctx: ObjectDefinitionContext!): Unit Exit a parse tree produced by `[ PineScript#objectDefinition`](../-pine-script/object-definition.md). The default implementation does nothing.","title":"exitObjectDefinition"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-object-definition/#parameters","text":"ctx - ObjectDefinitionContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-object-identifier/","text":"core / org.pinelang.parser / PineScriptBaseListener / exitObjectIdentifier exitObjectIdentifier \u00b6 open fun exitObjectIdentifier(ctx: ObjectIdentifierContext!): Unit Exit a parse tree produced by `[ PineScript#objectIdentifier`](../-pine-script/object-identifier.md). The default implementation does nothing. Parameters \u00b6 ctx - ObjectIdentifierContext!: the parse tree","title":"exitObjectIdentifier - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-object-identifier/#exitobjectidentifier","text":"open fun exitObjectIdentifier(ctx: ObjectIdentifierContext!): Unit Exit a parse tree produced by `[ PineScript#objectIdentifier`](../-pine-script/object-identifier.md). The default implementation does nothing.","title":"exitObjectIdentifier"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-object-identifier/#parameters","text":"ctx - ObjectIdentifierContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-object-initializer/","text":"core / org.pinelang.parser / PineScriptBaseListener / exitObjectInitializer exitObjectInitializer \u00b6 open fun exitObjectInitializer(ctx: ObjectInitializerContext!): Unit Exit a parse tree produced by `[ PineScript#objectInitializer`](../-pine-script/object-initializer.md). The default implementation does nothing. Parameters \u00b6 ctx - ObjectInitializerContext!: the parse tree","title":"exitObjectInitializer - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-object-initializer/#exitobjectinitializer","text":"open fun exitObjectInitializer(ctx: ObjectInitializerContext!): Unit Exit a parse tree produced by `[ PineScript#objectInitializer`](../-pine-script/object-initializer.md). The default implementation does nothing.","title":"exitObjectInitializer"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-object-initializer/#parameters","text":"ctx - ObjectInitializerContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-object-property-expression/","text":"core / org.pinelang.parser / PineScriptBaseListener / exitObjectPropertyExpression exitObjectPropertyExpression \u00b6 open fun exitObjectPropertyExpression(ctx: ObjectPropertyExpressionContext!): Unit Exit a parse tree produced by `[ PineScript#objectPropertyExpression`](../-pine-script/object-property-expression.md). The default implementation does nothing. Parameters \u00b6 ctx - ObjectPropertyExpressionContext!: the parse tree","title":"exitObjectPropertyExpression - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-object-property-expression/#exitobjectpropertyexpression","text":"open fun exitObjectPropertyExpression(ctx: ObjectPropertyExpressionContext!): Unit Exit a parse tree produced by `[ PineScript#objectPropertyExpression`](../-pine-script/object-property-expression.md). The default implementation does nothing.","title":"exitObjectPropertyExpression"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-object-property-expression/#parameters","text":"ctx - ObjectPropertyExpressionContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-primitive-expression/","text":"core / org.pinelang.parser / PineScriptBaseListener / exitPrimitiveExpression exitPrimitiveExpression \u00b6 open fun exitPrimitiveExpression(ctx: PrimitiveExpressionContext!): Unit Exit a parse tree produced by `[ PineScript#primitiveExpression`](../-pine-script/primitive-expression.md). The default implementation does nothing. Parameters \u00b6 ctx - PrimitiveExpressionContext!: the parse tree","title":"exitPrimitiveExpression - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-primitive-expression/#exitprimitiveexpression","text":"open fun exitPrimitiveExpression(ctx: PrimitiveExpressionContext!): Unit Exit a parse tree produced by `[ PineScript#primitiveExpression`](../-pine-script/primitive-expression.md). The default implementation does nothing.","title":"exitPrimitiveExpression"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-primitive-expression/#parameters","text":"ctx - PrimitiveExpressionContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-program/","text":"core / org.pinelang.parser / PineScriptBaseListener / exitProgram exitProgram \u00b6 open fun exitProgram(ctx: ProgramContext!): Unit Exit a parse tree produced by `[ PineScript#program`](../-pine-script/program.md). The default implementation does nothing. Parameters \u00b6 ctx - ProgramContext!: the parse tree","title":"exitProgram - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-program/#exitprogram","text":"open fun exitProgram(ctx: ProgramContext!): Unit Exit a parse tree produced by `[ PineScript#program`](../-pine-script/program.md). The default implementation does nothing.","title":"exitProgram"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-program/#parameters","text":"ctx - ProgramContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-property-definition/","text":"core / org.pinelang.parser / PineScriptBaseListener / exitPropertyDefinition exitPropertyDefinition \u00b6 open fun exitPropertyDefinition(ctx: PropertyDefinitionContext!): Unit Exit a parse tree produced by `[ PineScript#propertyDefinition`](../-pine-script/property-definition.md). The default implementation does nothing. Parameters \u00b6 ctx - PropertyDefinitionContext!: the parse tree","title":"exitPropertyDefinition - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-property-definition/#exitpropertydefinition","text":"open fun exitPropertyDefinition(ctx: PropertyDefinitionContext!): Unit Exit a parse tree produced by `[ PineScript#propertyDefinition`](../-pine-script/property-definition.md). The default implementation does nothing.","title":"exitPropertyDefinition"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-property-definition/#parameters","text":"ctx - PropertyDefinitionContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-root-member/","text":"core / org.pinelang.parser / PineScriptBaseListener / exitRootMember exitRootMember \u00b6 open fun exitRootMember(ctx: RootMemberContext!): Unit Exit a parse tree produced by `[ PineScript#rootMember`](../-pine-script/root-member.md). The default implementation does nothing. Parameters \u00b6 ctx - RootMemberContext!: the parse tree","title":"exitRootMember - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-root-member/#exitrootmember","text":"open fun exitRootMember(ctx: RootMemberContext!): Unit Exit a parse tree produced by `[ PineScript#rootMember`](../-pine-script/root-member.md). The default implementation does nothing.","title":"exitRootMember"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-root-member/#parameters","text":"ctx - RootMemberContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-signal-assignement/","text":"core / org.pinelang.parser / PineScriptBaseListener / exitSignalAssignement exitSignalAssignement \u00b6 open fun exitSignalAssignement(ctx: SignalAssignementContext!): Unit Exit a parse tree produced by `[ PineScript#signalAssignement`](../-pine-script/signal-assignement.md). The default implementation does nothing. Parameters \u00b6 ctx - SignalAssignementContext!: the parse tree","title":"exitSignalAssignement - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-signal-assignement/#exitsignalassignement","text":"open fun exitSignalAssignement(ctx: SignalAssignementContext!): Unit Exit a parse tree produced by `[ PineScript#signalAssignement`](../-pine-script/signal-assignement.md). The default implementation does nothing.","title":"exitSignalAssignement"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-signal-assignement/#parameters","text":"ctx - SignalAssignementContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-string-literal/","text":"core / org.pinelang.parser / PineScriptBaseListener / exitStringLiteral exitStringLiteral \u00b6 open fun exitStringLiteral(ctx: StringLiteralContext!): Unit Exit a parse tree produced by `[ PineScript#stringLiteral`](../-pine-script/string-literal.md). The default implementation does nothing. Parameters \u00b6 ctx - StringLiteralContext!: the parse tree","title":"exitStringLiteral - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-string-literal/#exitstringliteral","text":"open fun exitStringLiteral(ctx: StringLiteralContext!): Unit Exit a parse tree produced by `[ PineScript#stringLiteral`](../-pine-script/string-literal.md). The default implementation does nothing.","title":"exitStringLiteral"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/exit-string-literal/#parameters","text":"ctx - StringLiteralContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/visit-error-node/","text":"core / org.pinelang.parser / PineScriptBaseListener / visitErrorNode visitErrorNode \u00b6 open fun visitErrorNode(node: ErrorNode!): Unit The default implementation does nothing.","title":"visitErrorNode - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/visit-error-node/#visiterrornode","text":"open fun visitErrorNode(node: ErrorNode!): Unit The default implementation does nothing.","title":"visitErrorNode"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/visit-terminal/","text":"core / org.pinelang.parser / PineScriptBaseListener / visitTerminal visitTerminal \u00b6 open fun visitTerminal(node: TerminalNode!): Unit The default implementation does nothing.","title":"visitTerminal - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-listener/visit-terminal/#visitterminal","text":"open fun visitTerminal(node: TerminalNode!): Unit The default implementation does nothing.","title":"visitTerminal"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/","text":"core / org.pinelang.parser / PineScriptBaseVisitor PineScriptBaseVisitor \u00b6 open class PineScriptBaseVisitor<T : Any !> : AbstractParseTreeVisitor<T>, PineScriptVisitor <T> This class provides an empty implementation of `[ PineScriptVisitor`](../-pine-script-visitor/index.md), which can be extended to create a visitor which only needs to handle a subset of the available methods. Constructors \u00b6 Name Summary <init> This class provides an empty implementation of `[ PineScriptVisitor ](../-pine-script-visitor/index.md), which can be extended to create a visitor which only needs to handle a subset of the available methods. PineScriptBaseVisitor()` Functions \u00b6 Name Summary visitArguments Visit a parse tree produced by `[ PineScript#arguments ](../-pine-script/arguments.md). open fun visitArguments(ctx: ArgumentsContext!): T` visitBinaryOperation Visit a parse tree produced by `[ PineScript#binaryOperation ](../-pine-script/binary-operation.md). open fun visitBinaryOperation(ctx: BinaryOperationContext!): T` visitCallableExpression Visit a parse tree produced by `[ PineScript#callableExpression ](../-pine-script/callable-expression.md). open fun visitCallableExpression(ctx: CallableExpressionContext!): T` visitExpression Visit a parse tree produced by PineScript#expression. open fun visitExpression(ctx: ExpressionContext!): T visitIntegerSuffix Visit a parse tree produced by `[ PineScript#integerSuffix ](../-pine-script/integer-suffix.md). open fun visitIntegerSuffix(ctx: IntegerSuffixContext!): T` visitObjectDefinition Visit a parse tree produced by `[ PineScript#objectDefinition ](../-pine-script/object-definition.md). open fun visitObjectDefinition(ctx: ObjectDefinitionContext!): T` visitObjectIdentifier Visit a parse tree produced by `[ PineScript#objectIdentifier ](../-pine-script/object-identifier.md). open fun visitObjectIdentifier(ctx: ObjectIdentifierContext!): T` visitObjectInitializer Visit a parse tree produced by `[ PineScript#objectInitializer ](../-pine-script/object-initializer.md). open fun visitObjectInitializer(ctx: ObjectInitializerContext!): T` visitObjectPropertyExpression Visit a parse tree produced by `[ PineScript#objectPropertyExpression ](../-pine-script/object-property-expression.md). open fun visitObjectPropertyExpression(ctx: ObjectPropertyExpressionContext!): T` visitPrimitiveExpression Visit a parse tree produced by `[ PineScript#primitiveExpression ](../-pine-script/primitive-expression.md). open fun visitPrimitiveExpression(ctx: PrimitiveExpressionContext!): T` visitProgram Visit a parse tree produced by `[ PineScript#program ](../-pine-script/program.md). open fun visitProgram(ctx: ProgramContext!): T` visitPropertyDefinition Visit a parse tree produced by `[ PineScript#propertyDefinition ](../-pine-script/property-definition.md). open fun visitPropertyDefinition(ctx: PropertyDefinitionContext!): T` visitRootMember Visit a parse tree produced by `[ PineScript#rootMember ](../-pine-script/root-member.md). open fun visitRootMember(ctx: RootMemberContext!): T` visitSignalAssignement Visit a parse tree produced by `[ PineScript#signalAssignement ](../-pine-script/signal-assignement.md). open fun visitSignalAssignement(ctx: SignalAssignementContext!): T` visitStringLiteral Visit a parse tree produced by `[ PineScript#stringLiteral ](../-pine-script/string-literal.md). open fun visitStringLiteral(ctx: StringLiteralContext!): T` Inheritors \u00b6 Name Summary PineScriptVisitor open class PineScriptVisitor<T> : PineScriptBaseVisitor <T>","title":"PineScriptBaseVisitor - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/#pinescriptbasevisitor","text":"open class PineScriptBaseVisitor<T : Any !> : AbstractParseTreeVisitor<T>, PineScriptVisitor <T> This class provides an empty implementation of `[ PineScriptVisitor`](../-pine-script-visitor/index.md), which can be extended to create a visitor which only needs to handle a subset of the available methods.","title":"PineScriptBaseVisitor"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/#constructors","text":"Name Summary <init> This class provides an empty implementation of `[ PineScriptVisitor ](../-pine-script-visitor/index.md), which can be extended to create a visitor which only needs to handle a subset of the available methods. PineScriptBaseVisitor()`","title":"Constructors"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/#functions","text":"Name Summary visitArguments Visit a parse tree produced by `[ PineScript#arguments ](../-pine-script/arguments.md). open fun visitArguments(ctx: ArgumentsContext!): T` visitBinaryOperation Visit a parse tree produced by `[ PineScript#binaryOperation ](../-pine-script/binary-operation.md). open fun visitBinaryOperation(ctx: BinaryOperationContext!): T` visitCallableExpression Visit a parse tree produced by `[ PineScript#callableExpression ](../-pine-script/callable-expression.md). open fun visitCallableExpression(ctx: CallableExpressionContext!): T` visitExpression Visit a parse tree produced by PineScript#expression. open fun visitExpression(ctx: ExpressionContext!): T visitIntegerSuffix Visit a parse tree produced by `[ PineScript#integerSuffix ](../-pine-script/integer-suffix.md). open fun visitIntegerSuffix(ctx: IntegerSuffixContext!): T` visitObjectDefinition Visit a parse tree produced by `[ PineScript#objectDefinition ](../-pine-script/object-definition.md). open fun visitObjectDefinition(ctx: ObjectDefinitionContext!): T` visitObjectIdentifier Visit a parse tree produced by `[ PineScript#objectIdentifier ](../-pine-script/object-identifier.md). open fun visitObjectIdentifier(ctx: ObjectIdentifierContext!): T` visitObjectInitializer Visit a parse tree produced by `[ PineScript#objectInitializer ](../-pine-script/object-initializer.md). open fun visitObjectInitializer(ctx: ObjectInitializerContext!): T` visitObjectPropertyExpression Visit a parse tree produced by `[ PineScript#objectPropertyExpression ](../-pine-script/object-property-expression.md). open fun visitObjectPropertyExpression(ctx: ObjectPropertyExpressionContext!): T` visitPrimitiveExpression Visit a parse tree produced by `[ PineScript#primitiveExpression ](../-pine-script/primitive-expression.md). open fun visitPrimitiveExpression(ctx: PrimitiveExpressionContext!): T` visitProgram Visit a parse tree produced by `[ PineScript#program ](../-pine-script/program.md). open fun visitProgram(ctx: ProgramContext!): T` visitPropertyDefinition Visit a parse tree produced by `[ PineScript#propertyDefinition ](../-pine-script/property-definition.md). open fun visitPropertyDefinition(ctx: PropertyDefinitionContext!): T` visitRootMember Visit a parse tree produced by `[ PineScript#rootMember ](../-pine-script/root-member.md). open fun visitRootMember(ctx: RootMemberContext!): T` visitSignalAssignement Visit a parse tree produced by `[ PineScript#signalAssignement ](../-pine-script/signal-assignement.md). open fun visitSignalAssignement(ctx: SignalAssignementContext!): T` visitStringLiteral Visit a parse tree produced by `[ PineScript#stringLiteral ](../-pine-script/string-literal.md). open fun visitStringLiteral(ctx: StringLiteralContext!): T`","title":"Functions"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/#inheritors","text":"Name Summary PineScriptVisitor open class PineScriptVisitor<T> : PineScriptBaseVisitor <T>","title":"Inheritors"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/-init-/","text":"core / org.pinelang.parser / PineScriptBaseVisitor / <init> <init> \u00b6 PineScriptBaseVisitor() This class provides an empty implementation of `[ PineScriptVisitor`](../-pine-script-visitor/index.md), which can be extended to create a visitor which only needs to handle a subset of the available methods.","title":" init "},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/-init-/#init","text":"PineScriptBaseVisitor() This class provides an empty implementation of `[ PineScriptVisitor`](../-pine-script-visitor/index.md), which can be extended to create a visitor which only needs to handle a subset of the available methods.","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/visit-arguments/","text":"core / org.pinelang.parser / PineScriptBaseVisitor / visitArguments visitArguments \u00b6 open fun visitArguments(ctx: ArgumentsContext!): T Visit a parse tree produced by `[ PineScript#arguments`](../-pine-script/arguments.md). The default implementation returns the result of calling `[ #visitChildren ](#) on ctx`. Parameters \u00b6 ctx - ArgumentsContext!: the parse tree Return T: the visitor result","title":"visitArguments - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/visit-arguments/#visitarguments","text":"open fun visitArguments(ctx: ArgumentsContext!): T Visit a parse tree produced by `[ PineScript#arguments`](../-pine-script/arguments.md). The default implementation returns the result of calling `[ #visitChildren ](#) on ctx`.","title":"visitArguments"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/visit-arguments/#parameters","text":"ctx - ArgumentsContext!: the parse tree Return T: the visitor result","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/visit-binary-operation/","text":"core / org.pinelang.parser / PineScriptBaseVisitor / visitBinaryOperation visitBinaryOperation \u00b6 open fun visitBinaryOperation(ctx: BinaryOperationContext!): T Visit a parse tree produced by `[ PineScript#binaryOperation`](../-pine-script/binary-operation.md). The default implementation returns the result of calling `[ #visitChildren ](#) on ctx`. Parameters \u00b6 ctx - BinaryOperationContext!: the parse tree Return T: the visitor result","title":"visitBinaryOperation - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/visit-binary-operation/#visitbinaryoperation","text":"open fun visitBinaryOperation(ctx: BinaryOperationContext!): T Visit a parse tree produced by `[ PineScript#binaryOperation`](../-pine-script/binary-operation.md). The default implementation returns the result of calling `[ #visitChildren ](#) on ctx`.","title":"visitBinaryOperation"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/visit-binary-operation/#parameters","text":"ctx - BinaryOperationContext!: the parse tree Return T: the visitor result","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/visit-callable-expression/","text":"core / org.pinelang.parser / PineScriptBaseVisitor / visitCallableExpression visitCallableExpression \u00b6 open fun visitCallableExpression(ctx: CallableExpressionContext!): T Visit a parse tree produced by `[ PineScript#callableExpression`](../-pine-script/callable-expression.md). The default implementation returns the result of calling `[ #visitChildren ](#) on ctx`. Parameters \u00b6 ctx - CallableExpressionContext!: the parse tree Return T: the visitor result","title":"visitCallableExpression - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/visit-callable-expression/#visitcallableexpression","text":"open fun visitCallableExpression(ctx: CallableExpressionContext!): T Visit a parse tree produced by `[ PineScript#callableExpression`](../-pine-script/callable-expression.md). The default implementation returns the result of calling `[ #visitChildren ](#) on ctx`.","title":"visitCallableExpression"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/visit-callable-expression/#parameters","text":"ctx - CallableExpressionContext!: the parse tree Return T: the visitor result","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/visit-expression/","text":"core / org.pinelang.parser / PineScriptBaseVisitor / visitExpression visitExpression \u00b6 open fun visitExpression(ctx: ExpressionContext!): T Visit a parse tree produced by PineScript#expression. The default implementation returns the result of calling `[ #visitChildren ](#) on ctx`. Parameters \u00b6 ctx - ExpressionContext!: the parse tree Return T: the visitor result","title":"visitExpression - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/visit-expression/#visitexpression","text":"open fun visitExpression(ctx: ExpressionContext!): T Visit a parse tree produced by PineScript#expression. The default implementation returns the result of calling `[ #visitChildren ](#) on ctx`.","title":"visitExpression"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/visit-expression/#parameters","text":"ctx - ExpressionContext!: the parse tree Return T: the visitor result","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/visit-integer-suffix/","text":"core / org.pinelang.parser / PineScriptBaseVisitor / visitIntegerSuffix visitIntegerSuffix \u00b6 open fun visitIntegerSuffix(ctx: IntegerSuffixContext!): T Visit a parse tree produced by `[ PineScript#integerSuffix`](../-pine-script/integer-suffix.md). The default implementation returns the result of calling `[ #visitChildren ](#) on ctx`. Parameters \u00b6 ctx - IntegerSuffixContext!: the parse tree Return T: the visitor result","title":"visitIntegerSuffix - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/visit-integer-suffix/#visitintegersuffix","text":"open fun visitIntegerSuffix(ctx: IntegerSuffixContext!): T Visit a parse tree produced by `[ PineScript#integerSuffix`](../-pine-script/integer-suffix.md). The default implementation returns the result of calling `[ #visitChildren ](#) on ctx`.","title":"visitIntegerSuffix"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/visit-integer-suffix/#parameters","text":"ctx - IntegerSuffixContext!: the parse tree Return T: the visitor result","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/visit-object-definition/","text":"core / org.pinelang.parser / PineScriptBaseVisitor / visitObjectDefinition visitObjectDefinition \u00b6 open fun visitObjectDefinition(ctx: ObjectDefinitionContext!): T Visit a parse tree produced by `[ PineScript#objectDefinition`](../-pine-script/object-definition.md). The default implementation returns the result of calling `[ #visitChildren ](#) on ctx`. Parameters \u00b6 ctx - ObjectDefinitionContext!: the parse tree Return T: the visitor result","title":"visitObjectDefinition - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/visit-object-definition/#visitobjectdefinition","text":"open fun visitObjectDefinition(ctx: ObjectDefinitionContext!): T Visit a parse tree produced by `[ PineScript#objectDefinition`](../-pine-script/object-definition.md). The default implementation returns the result of calling `[ #visitChildren ](#) on ctx`.","title":"visitObjectDefinition"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/visit-object-definition/#parameters","text":"ctx - ObjectDefinitionContext!: the parse tree Return T: the visitor result","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/visit-object-identifier/","text":"core / org.pinelang.parser / PineScriptBaseVisitor / visitObjectIdentifier visitObjectIdentifier \u00b6 open fun visitObjectIdentifier(ctx: ObjectIdentifierContext!): T Visit a parse tree produced by `[ PineScript#objectIdentifier`](../-pine-script/object-identifier.md). The default implementation returns the result of calling `[ #visitChildren ](#) on ctx`. Parameters \u00b6 ctx - ObjectIdentifierContext!: the parse tree Return T: the visitor result","title":"visitObjectIdentifier - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/visit-object-identifier/#visitobjectidentifier","text":"open fun visitObjectIdentifier(ctx: ObjectIdentifierContext!): T Visit a parse tree produced by `[ PineScript#objectIdentifier`](../-pine-script/object-identifier.md). The default implementation returns the result of calling `[ #visitChildren ](#) on ctx`.","title":"visitObjectIdentifier"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/visit-object-identifier/#parameters","text":"ctx - ObjectIdentifierContext!: the parse tree Return T: the visitor result","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/visit-object-initializer/","text":"core / org.pinelang.parser / PineScriptBaseVisitor / visitObjectInitializer visitObjectInitializer \u00b6 open fun visitObjectInitializer(ctx: ObjectInitializerContext!): T Visit a parse tree produced by `[ PineScript#objectInitializer`](../-pine-script/object-initializer.md). The default implementation returns the result of calling `[ #visitChildren ](#) on ctx`. Parameters \u00b6 ctx - ObjectInitializerContext!: the parse tree Return T: the visitor result","title":"visitObjectInitializer - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/visit-object-initializer/#visitobjectinitializer","text":"open fun visitObjectInitializer(ctx: ObjectInitializerContext!): T Visit a parse tree produced by `[ PineScript#objectInitializer`](../-pine-script/object-initializer.md). The default implementation returns the result of calling `[ #visitChildren ](#) on ctx`.","title":"visitObjectInitializer"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/visit-object-initializer/#parameters","text":"ctx - ObjectInitializerContext!: the parse tree Return T: the visitor result","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/visit-object-property-expression/","text":"core / org.pinelang.parser / PineScriptBaseVisitor / visitObjectPropertyExpression visitObjectPropertyExpression \u00b6 open fun visitObjectPropertyExpression(ctx: ObjectPropertyExpressionContext!): T Visit a parse tree produced by `[ PineScript#objectPropertyExpression`](../-pine-script/object-property-expression.md). The default implementation returns the result of calling `[ #visitChildren ](#) on ctx`. Parameters \u00b6 ctx - ObjectPropertyExpressionContext!: the parse tree Return T: the visitor result","title":"visitObjectPropertyExpression - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/visit-object-property-expression/#visitobjectpropertyexpression","text":"open fun visitObjectPropertyExpression(ctx: ObjectPropertyExpressionContext!): T Visit a parse tree produced by `[ PineScript#objectPropertyExpression`](../-pine-script/object-property-expression.md). The default implementation returns the result of calling `[ #visitChildren ](#) on ctx`.","title":"visitObjectPropertyExpression"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/visit-object-property-expression/#parameters","text":"ctx - ObjectPropertyExpressionContext!: the parse tree Return T: the visitor result","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/visit-primitive-expression/","text":"core / org.pinelang.parser / PineScriptBaseVisitor / visitPrimitiveExpression visitPrimitiveExpression \u00b6 open fun visitPrimitiveExpression(ctx: PrimitiveExpressionContext!): T Visit a parse tree produced by `[ PineScript#primitiveExpression`](../-pine-script/primitive-expression.md). The default implementation returns the result of calling `[ #visitChildren ](#) on ctx`. Parameters \u00b6 ctx - PrimitiveExpressionContext!: the parse tree Return T: the visitor result","title":"visitPrimitiveExpression - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/visit-primitive-expression/#visitprimitiveexpression","text":"open fun visitPrimitiveExpression(ctx: PrimitiveExpressionContext!): T Visit a parse tree produced by `[ PineScript#primitiveExpression`](../-pine-script/primitive-expression.md). The default implementation returns the result of calling `[ #visitChildren ](#) on ctx`.","title":"visitPrimitiveExpression"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/visit-primitive-expression/#parameters","text":"ctx - PrimitiveExpressionContext!: the parse tree Return T: the visitor result","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/visit-program/","text":"core / org.pinelang.parser / PineScriptBaseVisitor / visitProgram visitProgram \u00b6 open fun visitProgram(ctx: ProgramContext!): T Visit a parse tree produced by `[ PineScript#program`](../-pine-script/program.md). The default implementation returns the result of calling `[ #visitChildren ](#) on ctx`. Parameters \u00b6 ctx - ProgramContext!: the parse tree Return T: the visitor result","title":"visitProgram - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/visit-program/#visitprogram","text":"open fun visitProgram(ctx: ProgramContext!): T Visit a parse tree produced by `[ PineScript#program`](../-pine-script/program.md). The default implementation returns the result of calling `[ #visitChildren ](#) on ctx`.","title":"visitProgram"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/visit-program/#parameters","text":"ctx - ProgramContext!: the parse tree Return T: the visitor result","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/visit-property-definition/","text":"core / org.pinelang.parser / PineScriptBaseVisitor / visitPropertyDefinition visitPropertyDefinition \u00b6 open fun visitPropertyDefinition(ctx: PropertyDefinitionContext!): T Visit a parse tree produced by `[ PineScript#propertyDefinition`](../-pine-script/property-definition.md). The default implementation returns the result of calling `[ #visitChildren ](#) on ctx`. Parameters \u00b6 ctx - PropertyDefinitionContext!: the parse tree Return T: the visitor result","title":"visitPropertyDefinition - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/visit-property-definition/#visitpropertydefinition","text":"open fun visitPropertyDefinition(ctx: PropertyDefinitionContext!): T Visit a parse tree produced by `[ PineScript#propertyDefinition`](../-pine-script/property-definition.md). The default implementation returns the result of calling `[ #visitChildren ](#) on ctx`.","title":"visitPropertyDefinition"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/visit-property-definition/#parameters","text":"ctx - PropertyDefinitionContext!: the parse tree Return T: the visitor result","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/visit-root-member/","text":"core / org.pinelang.parser / PineScriptBaseVisitor / visitRootMember visitRootMember \u00b6 open fun visitRootMember(ctx: RootMemberContext!): T Visit a parse tree produced by `[ PineScript#rootMember`](../-pine-script/root-member.md). The default implementation returns the result of calling `[ #visitChildren ](#) on ctx`. Parameters \u00b6 ctx - RootMemberContext!: the parse tree Return T: the visitor result","title":"visitRootMember - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/visit-root-member/#visitrootmember","text":"open fun visitRootMember(ctx: RootMemberContext!): T Visit a parse tree produced by `[ PineScript#rootMember`](../-pine-script/root-member.md). The default implementation returns the result of calling `[ #visitChildren ](#) on ctx`.","title":"visitRootMember"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/visit-root-member/#parameters","text":"ctx - RootMemberContext!: the parse tree Return T: the visitor result","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/visit-signal-assignement/","text":"core / org.pinelang.parser / PineScriptBaseVisitor / visitSignalAssignement visitSignalAssignement \u00b6 open fun visitSignalAssignement(ctx: SignalAssignementContext!): T Visit a parse tree produced by `[ PineScript#signalAssignement`](../-pine-script/signal-assignement.md). The default implementation returns the result of calling `[ #visitChildren ](#) on ctx`. Parameters \u00b6 ctx - SignalAssignementContext!: the parse tree Return T: the visitor result","title":"visitSignalAssignement - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/visit-signal-assignement/#visitsignalassignement","text":"open fun visitSignalAssignement(ctx: SignalAssignementContext!): T Visit a parse tree produced by `[ PineScript#signalAssignement`](../-pine-script/signal-assignement.md). The default implementation returns the result of calling `[ #visitChildren ](#) on ctx`.","title":"visitSignalAssignement"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/visit-signal-assignement/#parameters","text":"ctx - SignalAssignementContext!: the parse tree Return T: the visitor result","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/visit-string-literal/","text":"core / org.pinelang.parser / PineScriptBaseVisitor / visitStringLiteral visitStringLiteral \u00b6 open fun visitStringLiteral(ctx: StringLiteralContext!): T Visit a parse tree produced by `[ PineScript#stringLiteral`](../-pine-script/string-literal.md). The default implementation returns the result of calling `[ #visitChildren ](#) on ctx`. Parameters \u00b6 ctx - StringLiteralContext!: the parse tree Return T: the visitor result","title":"visitStringLiteral - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/visit-string-literal/#visitstringliteral","text":"open fun visitStringLiteral(ctx: StringLiteralContext!): T Visit a parse tree produced by `[ PineScript#stringLiteral`](../-pine-script/string-literal.md). The default implementation returns the result of calling `[ #visitChildren ](#) on ctx`.","title":"visitStringLiteral"},{"location":"latest/core/org.pinelang.parser/-pine-script-base-visitor/visit-string-literal/#parameters","text":"ctx - StringLiteralContext!: the parse tree Return T: the visitor result","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/","text":"core / org.pinelang.parser / PineScriptListener PineScriptListener \u00b6 interface PineScriptListener : ParseTreeListener This interface defines a complete listener for a parse tree produced by `[ PineScript`](../-pine-script/index.md). Functions \u00b6 Name Summary enterArguments Enter a parse tree produced by `[ PineScript#arguments ](../-pine-script/arguments.md). abstract fun enterArguments(ctx: ArgumentsContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterBinaryOperation Enter a parse tree produced by `[ PineScript#binaryOperation ](../-pine-script/binary-operation.md). abstract fun enterBinaryOperation(ctx: BinaryOperationContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterCallableExpression Enter a parse tree produced by `[ PineScript#callableExpression ](../-pine-script/callable-expression.md). abstract fun enterCallableExpression(ctx: CallableExpressionContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterExpression Enter a parse tree produced by PineScript#expression. abstract fun enterExpression(ctx: ExpressionContext!): Unit enterIntegerSuffix Enter a parse tree produced by `[ PineScript#integerSuffix ](../-pine-script/integer-suffix.md). abstract fun enterIntegerSuffix(ctx: IntegerSuffixContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterObjectDefinition Enter a parse tree produced by `[ PineScript#objectDefinition ](../-pine-script/object-definition.md). abstract fun enterObjectDefinition(ctx: ObjectDefinitionContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterObjectIdentifier Enter a parse tree produced by `[ PineScript#objectIdentifier ](../-pine-script/object-identifier.md). abstract fun enterObjectIdentifier(ctx: ObjectIdentifierContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterObjectInitializer Enter a parse tree produced by `[ PineScript#objectInitializer ](../-pine-script/object-initializer.md). abstract fun enterObjectInitializer(ctx: ObjectInitializerContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterObjectPropertyExpression Enter a parse tree produced by `[ PineScript#objectPropertyExpression ](../-pine-script/object-property-expression.md). abstract fun enterObjectPropertyExpression(ctx: ObjectPropertyExpressionContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterPrimitiveExpression Enter a parse tree produced by `[ PineScript#primitiveExpression ](../-pine-script/primitive-expression.md). abstract fun enterPrimitiveExpression(ctx: PrimitiveExpressionContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterProgram Enter a parse tree produced by `[ PineScript#program ](../-pine-script/program.md). abstract fun enterProgram(ctx: ProgramContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterPropertyDefinition Enter a parse tree produced by `[ PineScript#propertyDefinition ](../-pine-script/property-definition.md). abstract fun enterPropertyDefinition(ctx: PropertyDefinitionContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterRootMember Enter a parse tree produced by `[ PineScript#rootMember ](../-pine-script/root-member.md). abstract fun enterRootMember(ctx: RootMemberContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterSignalAssignement Enter a parse tree produced by `[ PineScript#signalAssignement ](../-pine-script/signal-assignement.md). abstract fun enterSignalAssignement(ctx: SignalAssignementContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterStringLiteral Enter a parse tree produced by `[ PineScript#stringLiteral ](../-pine-script/string-literal.md). abstract fun enterStringLiteral(ctx: StringLiteralContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitArguments Exit a parse tree produced by `[ PineScript#arguments ](../-pine-script/arguments.md). abstract fun exitArguments(ctx: ArgumentsContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitBinaryOperation Exit a parse tree produced by `[ PineScript#binaryOperation ](../-pine-script/binary-operation.md). abstract fun exitBinaryOperation(ctx: BinaryOperationContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitCallableExpression Exit a parse tree produced by `[ PineScript#callableExpression ](../-pine-script/callable-expression.md). abstract fun exitCallableExpression(ctx: CallableExpressionContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitExpression Exit a parse tree produced by PineScript#expression. abstract fun exitExpression(ctx: ExpressionContext!): Unit exitIntegerSuffix Exit a parse tree produced by `[ PineScript#integerSuffix ](../-pine-script/integer-suffix.md). abstract fun exitIntegerSuffix(ctx: IntegerSuffixContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitObjectDefinition Exit a parse tree produced by `[ PineScript#objectDefinition ](../-pine-script/object-definition.md). abstract fun exitObjectDefinition(ctx: ObjectDefinitionContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitObjectIdentifier Exit a parse tree produced by `[ PineScript#objectIdentifier ](../-pine-script/object-identifier.md). abstract fun exitObjectIdentifier(ctx: ObjectIdentifierContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitObjectInitializer Exit a parse tree produced by `[ PineScript#objectInitializer ](../-pine-script/object-initializer.md). abstract fun exitObjectInitializer(ctx: ObjectInitializerContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitObjectPropertyExpression Exit a parse tree produced by `[ PineScript#objectPropertyExpression ](../-pine-script/object-property-expression.md). abstract fun exitObjectPropertyExpression(ctx: ObjectPropertyExpressionContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitPrimitiveExpression Exit a parse tree produced by `[ PineScript#primitiveExpression ](../-pine-script/primitive-expression.md). abstract fun exitPrimitiveExpression(ctx: PrimitiveExpressionContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitProgram Exit a parse tree produced by `[ PineScript#program ](../-pine-script/program.md). abstract fun exitProgram(ctx: ProgramContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitPropertyDefinition Exit a parse tree produced by `[ PineScript#propertyDefinition ](../-pine-script/property-definition.md). abstract fun exitPropertyDefinition(ctx: PropertyDefinitionContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitRootMember Exit a parse tree produced by `[ PineScript#rootMember ](../-pine-script/root-member.md). abstract fun exitRootMember(ctx: RootMemberContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitSignalAssignement Exit a parse tree produced by `[ PineScript#signalAssignement ](../-pine-script/signal-assignement.md). abstract fun exitSignalAssignement(ctx: SignalAssignementContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitStringLiteral Exit a parse tree produced by `[ PineScript#stringLiteral ](../-pine-script/string-literal.md). abstract fun exitStringLiteral(ctx: StringLiteralContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) Inheritors \u00b6 Name Summary PineScriptBaseListener This class provides an empty implementation of `[ PineScriptListener ](./index.md), which can be extended to create a listener which only needs to handle a subset of the available methods. open class PineScriptBaseListener : [ PineScriptListener`](./index.md)","title":"PineScriptListener - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/#pinescriptlistener","text":"interface PineScriptListener : ParseTreeListener This interface defines a complete listener for a parse tree produced by `[ PineScript`](../-pine-script/index.md).","title":"PineScriptListener"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/#functions","text":"Name Summary enterArguments Enter a parse tree produced by `[ PineScript#arguments ](../-pine-script/arguments.md). abstract fun enterArguments(ctx: ArgumentsContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterBinaryOperation Enter a parse tree produced by `[ PineScript#binaryOperation ](../-pine-script/binary-operation.md). abstract fun enterBinaryOperation(ctx: BinaryOperationContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterCallableExpression Enter a parse tree produced by `[ PineScript#callableExpression ](../-pine-script/callable-expression.md). abstract fun enterCallableExpression(ctx: CallableExpressionContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterExpression Enter a parse tree produced by PineScript#expression. abstract fun enterExpression(ctx: ExpressionContext!): Unit enterIntegerSuffix Enter a parse tree produced by `[ PineScript#integerSuffix ](../-pine-script/integer-suffix.md). abstract fun enterIntegerSuffix(ctx: IntegerSuffixContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterObjectDefinition Enter a parse tree produced by `[ PineScript#objectDefinition ](../-pine-script/object-definition.md). abstract fun enterObjectDefinition(ctx: ObjectDefinitionContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterObjectIdentifier Enter a parse tree produced by `[ PineScript#objectIdentifier ](../-pine-script/object-identifier.md). abstract fun enterObjectIdentifier(ctx: ObjectIdentifierContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterObjectInitializer Enter a parse tree produced by `[ PineScript#objectInitializer ](../-pine-script/object-initializer.md). abstract fun enterObjectInitializer(ctx: ObjectInitializerContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterObjectPropertyExpression Enter a parse tree produced by `[ PineScript#objectPropertyExpression ](../-pine-script/object-property-expression.md). abstract fun enterObjectPropertyExpression(ctx: ObjectPropertyExpressionContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterPrimitiveExpression Enter a parse tree produced by `[ PineScript#primitiveExpression ](../-pine-script/primitive-expression.md). abstract fun enterPrimitiveExpression(ctx: PrimitiveExpressionContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterProgram Enter a parse tree produced by `[ PineScript#program ](../-pine-script/program.md). abstract fun enterProgram(ctx: ProgramContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterPropertyDefinition Enter a parse tree produced by `[ PineScript#propertyDefinition ](../-pine-script/property-definition.md). abstract fun enterPropertyDefinition(ctx: PropertyDefinitionContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterRootMember Enter a parse tree produced by `[ PineScript#rootMember ](../-pine-script/root-member.md). abstract fun enterRootMember(ctx: RootMemberContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterSignalAssignement Enter a parse tree produced by `[ PineScript#signalAssignement ](../-pine-script/signal-assignement.md). abstract fun enterSignalAssignement(ctx: SignalAssignementContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) enterStringLiteral Enter a parse tree produced by `[ PineScript#stringLiteral ](../-pine-script/string-literal.md). abstract fun enterStringLiteral(ctx: StringLiteralContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitArguments Exit a parse tree produced by `[ PineScript#arguments ](../-pine-script/arguments.md). abstract fun exitArguments(ctx: ArgumentsContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitBinaryOperation Exit a parse tree produced by `[ PineScript#binaryOperation ](../-pine-script/binary-operation.md). abstract fun exitBinaryOperation(ctx: BinaryOperationContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitCallableExpression Exit a parse tree produced by `[ PineScript#callableExpression ](../-pine-script/callable-expression.md). abstract fun exitCallableExpression(ctx: CallableExpressionContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitExpression Exit a parse tree produced by PineScript#expression. abstract fun exitExpression(ctx: ExpressionContext!): Unit exitIntegerSuffix Exit a parse tree produced by `[ PineScript#integerSuffix ](../-pine-script/integer-suffix.md). abstract fun exitIntegerSuffix(ctx: IntegerSuffixContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitObjectDefinition Exit a parse tree produced by `[ PineScript#objectDefinition ](../-pine-script/object-definition.md). abstract fun exitObjectDefinition(ctx: ObjectDefinitionContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitObjectIdentifier Exit a parse tree produced by `[ PineScript#objectIdentifier ](../-pine-script/object-identifier.md). abstract fun exitObjectIdentifier(ctx: ObjectIdentifierContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitObjectInitializer Exit a parse tree produced by `[ PineScript#objectInitializer ](../-pine-script/object-initializer.md). abstract fun exitObjectInitializer(ctx: ObjectInitializerContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitObjectPropertyExpression Exit a parse tree produced by `[ PineScript#objectPropertyExpression ](../-pine-script/object-property-expression.md). abstract fun exitObjectPropertyExpression(ctx: ObjectPropertyExpressionContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitPrimitiveExpression Exit a parse tree produced by `[ PineScript#primitiveExpression ](../-pine-script/primitive-expression.md). abstract fun exitPrimitiveExpression(ctx: PrimitiveExpressionContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitProgram Exit a parse tree produced by `[ PineScript#program ](../-pine-script/program.md). abstract fun exitProgram(ctx: ProgramContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitPropertyDefinition Exit a parse tree produced by `[ PineScript#propertyDefinition ](../-pine-script/property-definition.md). abstract fun exitPropertyDefinition(ctx: PropertyDefinitionContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitRootMember Exit a parse tree produced by `[ PineScript#rootMember ](../-pine-script/root-member.md). abstract fun exitRootMember(ctx: RootMemberContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitSignalAssignement Exit a parse tree produced by `[ PineScript#signalAssignement ](../-pine-script/signal-assignement.md). abstract fun exitSignalAssignement(ctx: SignalAssignementContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html ) exitStringLiteral Exit a parse tree produced by `[ PineScript#stringLiteral ](../-pine-script/string-literal.md). abstract fun exitStringLiteral(ctx: StringLiteralContext!): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html )","title":"Functions"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/#inheritors","text":"Name Summary PineScriptBaseListener This class provides an empty implementation of `[ PineScriptListener ](./index.md), which can be extended to create a listener which only needs to handle a subset of the available methods. open class PineScriptBaseListener : [ PineScriptListener`](./index.md)","title":"Inheritors"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/enter-arguments/","text":"core / org.pinelang.parser / PineScriptListener / enterArguments enterArguments \u00b6 abstract fun enterArguments(ctx: ArgumentsContext!): Unit Enter a parse tree produced by `[ PineScript#arguments`](../-pine-script/arguments.md). Parameters \u00b6 ctx - ArgumentsContext!: the parse tree","title":"enterArguments - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/enter-arguments/#enterarguments","text":"abstract fun enterArguments(ctx: ArgumentsContext!): Unit Enter a parse tree produced by `[ PineScript#arguments`](../-pine-script/arguments.md).","title":"enterArguments"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/enter-arguments/#parameters","text":"ctx - ArgumentsContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/enter-binary-operation/","text":"core / org.pinelang.parser / PineScriptListener / enterBinaryOperation enterBinaryOperation \u00b6 abstract fun enterBinaryOperation(ctx: BinaryOperationContext!): Unit Enter a parse tree produced by `[ PineScript#binaryOperation`](../-pine-script/binary-operation.md). Parameters \u00b6 ctx - BinaryOperationContext!: the parse tree","title":"enterBinaryOperation - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/enter-binary-operation/#enterbinaryoperation","text":"abstract fun enterBinaryOperation(ctx: BinaryOperationContext!): Unit Enter a parse tree produced by `[ PineScript#binaryOperation`](../-pine-script/binary-operation.md).","title":"enterBinaryOperation"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/enter-binary-operation/#parameters","text":"ctx - BinaryOperationContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/enter-callable-expression/","text":"core / org.pinelang.parser / PineScriptListener / enterCallableExpression enterCallableExpression \u00b6 abstract fun enterCallableExpression(ctx: CallableExpressionContext!): Unit Enter a parse tree produced by `[ PineScript#callableExpression`](../-pine-script/callable-expression.md). Parameters \u00b6 ctx - CallableExpressionContext!: the parse tree","title":"enterCallableExpression - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/enter-callable-expression/#entercallableexpression","text":"abstract fun enterCallableExpression(ctx: CallableExpressionContext!): Unit Enter a parse tree produced by `[ PineScript#callableExpression`](../-pine-script/callable-expression.md).","title":"enterCallableExpression"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/enter-callable-expression/#parameters","text":"ctx - CallableExpressionContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/enter-expression/","text":"core / org.pinelang.parser / PineScriptListener / enterExpression enterExpression \u00b6 abstract fun enterExpression(ctx: ExpressionContext!): Unit Enter a parse tree produced by PineScript#expression. Parameters \u00b6 ctx - ExpressionContext!: the parse tree","title":"enterExpression - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/enter-expression/#enterexpression","text":"abstract fun enterExpression(ctx: ExpressionContext!): Unit Enter a parse tree produced by PineScript#expression.","title":"enterExpression"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/enter-expression/#parameters","text":"ctx - ExpressionContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/enter-integer-suffix/","text":"core / org.pinelang.parser / PineScriptListener / enterIntegerSuffix enterIntegerSuffix \u00b6 abstract fun enterIntegerSuffix(ctx: IntegerSuffixContext!): Unit Enter a parse tree produced by `[ PineScript#integerSuffix`](../-pine-script/integer-suffix.md). Parameters \u00b6 ctx - IntegerSuffixContext!: the parse tree","title":"enterIntegerSuffix - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/enter-integer-suffix/#enterintegersuffix","text":"abstract fun enterIntegerSuffix(ctx: IntegerSuffixContext!): Unit Enter a parse tree produced by `[ PineScript#integerSuffix`](../-pine-script/integer-suffix.md).","title":"enterIntegerSuffix"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/enter-integer-suffix/#parameters","text":"ctx - IntegerSuffixContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/enter-object-definition/","text":"core / org.pinelang.parser / PineScriptListener / enterObjectDefinition enterObjectDefinition \u00b6 abstract fun enterObjectDefinition(ctx: ObjectDefinitionContext!): Unit Enter a parse tree produced by `[ PineScript#objectDefinition`](../-pine-script/object-definition.md). Parameters \u00b6 ctx - ObjectDefinitionContext!: the parse tree","title":"enterObjectDefinition - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/enter-object-definition/#enterobjectdefinition","text":"abstract fun enterObjectDefinition(ctx: ObjectDefinitionContext!): Unit Enter a parse tree produced by `[ PineScript#objectDefinition`](../-pine-script/object-definition.md).","title":"enterObjectDefinition"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/enter-object-definition/#parameters","text":"ctx - ObjectDefinitionContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/enter-object-identifier/","text":"core / org.pinelang.parser / PineScriptListener / enterObjectIdentifier enterObjectIdentifier \u00b6 abstract fun enterObjectIdentifier(ctx: ObjectIdentifierContext!): Unit Enter a parse tree produced by `[ PineScript#objectIdentifier`](../-pine-script/object-identifier.md). Parameters \u00b6 ctx - ObjectIdentifierContext!: the parse tree","title":"enterObjectIdentifier - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/enter-object-identifier/#enterobjectidentifier","text":"abstract fun enterObjectIdentifier(ctx: ObjectIdentifierContext!): Unit Enter a parse tree produced by `[ PineScript#objectIdentifier`](../-pine-script/object-identifier.md).","title":"enterObjectIdentifier"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/enter-object-identifier/#parameters","text":"ctx - ObjectIdentifierContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/enter-object-initializer/","text":"core / org.pinelang.parser / PineScriptListener / enterObjectInitializer enterObjectInitializer \u00b6 abstract fun enterObjectInitializer(ctx: ObjectInitializerContext!): Unit Enter a parse tree produced by `[ PineScript#objectInitializer`](../-pine-script/object-initializer.md). Parameters \u00b6 ctx - ObjectInitializerContext!: the parse tree","title":"enterObjectInitializer - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/enter-object-initializer/#enterobjectinitializer","text":"abstract fun enterObjectInitializer(ctx: ObjectInitializerContext!): Unit Enter a parse tree produced by `[ PineScript#objectInitializer`](../-pine-script/object-initializer.md).","title":"enterObjectInitializer"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/enter-object-initializer/#parameters","text":"ctx - ObjectInitializerContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/enter-object-property-expression/","text":"core / org.pinelang.parser / PineScriptListener / enterObjectPropertyExpression enterObjectPropertyExpression \u00b6 abstract fun enterObjectPropertyExpression(ctx: ObjectPropertyExpressionContext!): Unit Enter a parse tree produced by `[ PineScript#objectPropertyExpression`](../-pine-script/object-property-expression.md). Parameters \u00b6 ctx - ObjectPropertyExpressionContext!: the parse tree","title":"enterObjectPropertyExpression - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/enter-object-property-expression/#enterobjectpropertyexpression","text":"abstract fun enterObjectPropertyExpression(ctx: ObjectPropertyExpressionContext!): Unit Enter a parse tree produced by `[ PineScript#objectPropertyExpression`](../-pine-script/object-property-expression.md).","title":"enterObjectPropertyExpression"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/enter-object-property-expression/#parameters","text":"ctx - ObjectPropertyExpressionContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/enter-primitive-expression/","text":"core / org.pinelang.parser / PineScriptListener / enterPrimitiveExpression enterPrimitiveExpression \u00b6 abstract fun enterPrimitiveExpression(ctx: PrimitiveExpressionContext!): Unit Enter a parse tree produced by `[ PineScript#primitiveExpression`](../-pine-script/primitive-expression.md). Parameters \u00b6 ctx - PrimitiveExpressionContext!: the parse tree","title":"enterPrimitiveExpression - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/enter-primitive-expression/#enterprimitiveexpression","text":"abstract fun enterPrimitiveExpression(ctx: PrimitiveExpressionContext!): Unit Enter a parse tree produced by `[ PineScript#primitiveExpression`](../-pine-script/primitive-expression.md).","title":"enterPrimitiveExpression"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/enter-primitive-expression/#parameters","text":"ctx - PrimitiveExpressionContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/enter-program/","text":"core / org.pinelang.parser / PineScriptListener / enterProgram enterProgram \u00b6 abstract fun enterProgram(ctx: ProgramContext!): Unit Enter a parse tree produced by `[ PineScript#program`](../-pine-script/program.md). Parameters \u00b6 ctx - ProgramContext!: the parse tree","title":"enterProgram - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/enter-program/#enterprogram","text":"abstract fun enterProgram(ctx: ProgramContext!): Unit Enter a parse tree produced by `[ PineScript#program`](../-pine-script/program.md).","title":"enterProgram"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/enter-program/#parameters","text":"ctx - ProgramContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/enter-property-definition/","text":"core / org.pinelang.parser / PineScriptListener / enterPropertyDefinition enterPropertyDefinition \u00b6 abstract fun enterPropertyDefinition(ctx: PropertyDefinitionContext!): Unit Enter a parse tree produced by `[ PineScript#propertyDefinition`](../-pine-script/property-definition.md). Parameters \u00b6 ctx - PropertyDefinitionContext!: the parse tree","title":"enterPropertyDefinition - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/enter-property-definition/#enterpropertydefinition","text":"abstract fun enterPropertyDefinition(ctx: PropertyDefinitionContext!): Unit Enter a parse tree produced by `[ PineScript#propertyDefinition`](../-pine-script/property-definition.md).","title":"enterPropertyDefinition"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/enter-property-definition/#parameters","text":"ctx - PropertyDefinitionContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/enter-root-member/","text":"core / org.pinelang.parser / PineScriptListener / enterRootMember enterRootMember \u00b6 abstract fun enterRootMember(ctx: RootMemberContext!): Unit Enter a parse tree produced by `[ PineScript#rootMember`](../-pine-script/root-member.md). Parameters \u00b6 ctx - RootMemberContext!: the parse tree","title":"enterRootMember - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/enter-root-member/#enterrootmember","text":"abstract fun enterRootMember(ctx: RootMemberContext!): Unit Enter a parse tree produced by `[ PineScript#rootMember`](../-pine-script/root-member.md).","title":"enterRootMember"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/enter-root-member/#parameters","text":"ctx - RootMemberContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/enter-signal-assignement/","text":"core / org.pinelang.parser / PineScriptListener / enterSignalAssignement enterSignalAssignement \u00b6 abstract fun enterSignalAssignement(ctx: SignalAssignementContext!): Unit Enter a parse tree produced by `[ PineScript#signalAssignement`](../-pine-script/signal-assignement.md). Parameters \u00b6 ctx - SignalAssignementContext!: the parse tree","title":"enterSignalAssignement - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/enter-signal-assignement/#entersignalassignement","text":"abstract fun enterSignalAssignement(ctx: SignalAssignementContext!): Unit Enter a parse tree produced by `[ PineScript#signalAssignement`](../-pine-script/signal-assignement.md).","title":"enterSignalAssignement"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/enter-signal-assignement/#parameters","text":"ctx - SignalAssignementContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/enter-string-literal/","text":"core / org.pinelang.parser / PineScriptListener / enterStringLiteral enterStringLiteral \u00b6 abstract fun enterStringLiteral(ctx: StringLiteralContext!): Unit Enter a parse tree produced by `[ PineScript#stringLiteral`](../-pine-script/string-literal.md). Parameters \u00b6 ctx - StringLiteralContext!: the parse tree","title":"enterStringLiteral - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/enter-string-literal/#enterstringliteral","text":"abstract fun enterStringLiteral(ctx: StringLiteralContext!): Unit Enter a parse tree produced by `[ PineScript#stringLiteral`](../-pine-script/string-literal.md).","title":"enterStringLiteral"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/enter-string-literal/#parameters","text":"ctx - StringLiteralContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/exit-arguments/","text":"core / org.pinelang.parser / PineScriptListener / exitArguments exitArguments \u00b6 abstract fun exitArguments(ctx: ArgumentsContext!): Unit Exit a parse tree produced by `[ PineScript#arguments`](../-pine-script/arguments.md). Parameters \u00b6 ctx - ArgumentsContext!: the parse tree","title":"exitArguments - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/exit-arguments/#exitarguments","text":"abstract fun exitArguments(ctx: ArgumentsContext!): Unit Exit a parse tree produced by `[ PineScript#arguments`](../-pine-script/arguments.md).","title":"exitArguments"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/exit-arguments/#parameters","text":"ctx - ArgumentsContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/exit-binary-operation/","text":"core / org.pinelang.parser / PineScriptListener / exitBinaryOperation exitBinaryOperation \u00b6 abstract fun exitBinaryOperation(ctx: BinaryOperationContext!): Unit Exit a parse tree produced by `[ PineScript#binaryOperation`](../-pine-script/binary-operation.md). Parameters \u00b6 ctx - BinaryOperationContext!: the parse tree","title":"exitBinaryOperation - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/exit-binary-operation/#exitbinaryoperation","text":"abstract fun exitBinaryOperation(ctx: BinaryOperationContext!): Unit Exit a parse tree produced by `[ PineScript#binaryOperation`](../-pine-script/binary-operation.md).","title":"exitBinaryOperation"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/exit-binary-operation/#parameters","text":"ctx - BinaryOperationContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/exit-callable-expression/","text":"core / org.pinelang.parser / PineScriptListener / exitCallableExpression exitCallableExpression \u00b6 abstract fun exitCallableExpression(ctx: CallableExpressionContext!): Unit Exit a parse tree produced by `[ PineScript#callableExpression`](../-pine-script/callable-expression.md). Parameters \u00b6 ctx - CallableExpressionContext!: the parse tree","title":"exitCallableExpression - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/exit-callable-expression/#exitcallableexpression","text":"abstract fun exitCallableExpression(ctx: CallableExpressionContext!): Unit Exit a parse tree produced by `[ PineScript#callableExpression`](../-pine-script/callable-expression.md).","title":"exitCallableExpression"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/exit-callable-expression/#parameters","text":"ctx - CallableExpressionContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/exit-expression/","text":"core / org.pinelang.parser / PineScriptListener / exitExpression exitExpression \u00b6 abstract fun exitExpression(ctx: ExpressionContext!): Unit Exit a parse tree produced by PineScript#expression. Parameters \u00b6 ctx - ExpressionContext!: the parse tree","title":"exitExpression - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/exit-expression/#exitexpression","text":"abstract fun exitExpression(ctx: ExpressionContext!): Unit Exit a parse tree produced by PineScript#expression.","title":"exitExpression"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/exit-expression/#parameters","text":"ctx - ExpressionContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/exit-integer-suffix/","text":"core / org.pinelang.parser / PineScriptListener / exitIntegerSuffix exitIntegerSuffix \u00b6 abstract fun exitIntegerSuffix(ctx: IntegerSuffixContext!): Unit Exit a parse tree produced by `[ PineScript#integerSuffix`](../-pine-script/integer-suffix.md). Parameters \u00b6 ctx - IntegerSuffixContext!: the parse tree","title":"exitIntegerSuffix - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/exit-integer-suffix/#exitintegersuffix","text":"abstract fun exitIntegerSuffix(ctx: IntegerSuffixContext!): Unit Exit a parse tree produced by `[ PineScript#integerSuffix`](../-pine-script/integer-suffix.md).","title":"exitIntegerSuffix"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/exit-integer-suffix/#parameters","text":"ctx - IntegerSuffixContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/exit-object-definition/","text":"core / org.pinelang.parser / PineScriptListener / exitObjectDefinition exitObjectDefinition \u00b6 abstract fun exitObjectDefinition(ctx: ObjectDefinitionContext!): Unit Exit a parse tree produced by `[ PineScript#objectDefinition`](../-pine-script/object-definition.md). Parameters \u00b6 ctx - ObjectDefinitionContext!: the parse tree","title":"exitObjectDefinition - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/exit-object-definition/#exitobjectdefinition","text":"abstract fun exitObjectDefinition(ctx: ObjectDefinitionContext!): Unit Exit a parse tree produced by `[ PineScript#objectDefinition`](../-pine-script/object-definition.md).","title":"exitObjectDefinition"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/exit-object-definition/#parameters","text":"ctx - ObjectDefinitionContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/exit-object-identifier/","text":"core / org.pinelang.parser / PineScriptListener / exitObjectIdentifier exitObjectIdentifier \u00b6 abstract fun exitObjectIdentifier(ctx: ObjectIdentifierContext!): Unit Exit a parse tree produced by `[ PineScript#objectIdentifier`](../-pine-script/object-identifier.md). Parameters \u00b6 ctx - ObjectIdentifierContext!: the parse tree","title":"exitObjectIdentifier - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/exit-object-identifier/#exitobjectidentifier","text":"abstract fun exitObjectIdentifier(ctx: ObjectIdentifierContext!): Unit Exit a parse tree produced by `[ PineScript#objectIdentifier`](../-pine-script/object-identifier.md).","title":"exitObjectIdentifier"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/exit-object-identifier/#parameters","text":"ctx - ObjectIdentifierContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/exit-object-initializer/","text":"core / org.pinelang.parser / PineScriptListener / exitObjectInitializer exitObjectInitializer \u00b6 abstract fun exitObjectInitializer(ctx: ObjectInitializerContext!): Unit Exit a parse tree produced by `[ PineScript#objectInitializer`](../-pine-script/object-initializer.md). Parameters \u00b6 ctx - ObjectInitializerContext!: the parse tree","title":"exitObjectInitializer - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/exit-object-initializer/#exitobjectinitializer","text":"abstract fun exitObjectInitializer(ctx: ObjectInitializerContext!): Unit Exit a parse tree produced by `[ PineScript#objectInitializer`](../-pine-script/object-initializer.md).","title":"exitObjectInitializer"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/exit-object-initializer/#parameters","text":"ctx - ObjectInitializerContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/exit-object-property-expression/","text":"core / org.pinelang.parser / PineScriptListener / exitObjectPropertyExpression exitObjectPropertyExpression \u00b6 abstract fun exitObjectPropertyExpression(ctx: ObjectPropertyExpressionContext!): Unit Exit a parse tree produced by `[ PineScript#objectPropertyExpression`](../-pine-script/object-property-expression.md). Parameters \u00b6 ctx - ObjectPropertyExpressionContext!: the parse tree","title":"exitObjectPropertyExpression - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/exit-object-property-expression/#exitobjectpropertyexpression","text":"abstract fun exitObjectPropertyExpression(ctx: ObjectPropertyExpressionContext!): Unit Exit a parse tree produced by `[ PineScript#objectPropertyExpression`](../-pine-script/object-property-expression.md).","title":"exitObjectPropertyExpression"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/exit-object-property-expression/#parameters","text":"ctx - ObjectPropertyExpressionContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/exit-primitive-expression/","text":"core / org.pinelang.parser / PineScriptListener / exitPrimitiveExpression exitPrimitiveExpression \u00b6 abstract fun exitPrimitiveExpression(ctx: PrimitiveExpressionContext!): Unit Exit a parse tree produced by `[ PineScript#primitiveExpression`](../-pine-script/primitive-expression.md). Parameters \u00b6 ctx - PrimitiveExpressionContext!: the parse tree","title":"exitPrimitiveExpression - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/exit-primitive-expression/#exitprimitiveexpression","text":"abstract fun exitPrimitiveExpression(ctx: PrimitiveExpressionContext!): Unit Exit a parse tree produced by `[ PineScript#primitiveExpression`](../-pine-script/primitive-expression.md).","title":"exitPrimitiveExpression"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/exit-primitive-expression/#parameters","text":"ctx - PrimitiveExpressionContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/exit-program/","text":"core / org.pinelang.parser / PineScriptListener / exitProgram exitProgram \u00b6 abstract fun exitProgram(ctx: ProgramContext!): Unit Exit a parse tree produced by `[ PineScript#program`](../-pine-script/program.md). Parameters \u00b6 ctx - ProgramContext!: the parse tree","title":"exitProgram - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/exit-program/#exitprogram","text":"abstract fun exitProgram(ctx: ProgramContext!): Unit Exit a parse tree produced by `[ PineScript#program`](../-pine-script/program.md).","title":"exitProgram"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/exit-program/#parameters","text":"ctx - ProgramContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/exit-property-definition/","text":"core / org.pinelang.parser / PineScriptListener / exitPropertyDefinition exitPropertyDefinition \u00b6 abstract fun exitPropertyDefinition(ctx: PropertyDefinitionContext!): Unit Exit a parse tree produced by `[ PineScript#propertyDefinition`](../-pine-script/property-definition.md). Parameters \u00b6 ctx - PropertyDefinitionContext!: the parse tree","title":"exitPropertyDefinition - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/exit-property-definition/#exitpropertydefinition","text":"abstract fun exitPropertyDefinition(ctx: PropertyDefinitionContext!): Unit Exit a parse tree produced by `[ PineScript#propertyDefinition`](../-pine-script/property-definition.md).","title":"exitPropertyDefinition"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/exit-property-definition/#parameters","text":"ctx - PropertyDefinitionContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/exit-root-member/","text":"core / org.pinelang.parser / PineScriptListener / exitRootMember exitRootMember \u00b6 abstract fun exitRootMember(ctx: RootMemberContext!): Unit Exit a parse tree produced by `[ PineScript#rootMember`](../-pine-script/root-member.md). Parameters \u00b6 ctx - RootMemberContext!: the parse tree","title":"exitRootMember - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/exit-root-member/#exitrootmember","text":"abstract fun exitRootMember(ctx: RootMemberContext!): Unit Exit a parse tree produced by `[ PineScript#rootMember`](../-pine-script/root-member.md).","title":"exitRootMember"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/exit-root-member/#parameters","text":"ctx - RootMemberContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/exit-signal-assignement/","text":"core / org.pinelang.parser / PineScriptListener / exitSignalAssignement exitSignalAssignement \u00b6 abstract fun exitSignalAssignement(ctx: SignalAssignementContext!): Unit Exit a parse tree produced by `[ PineScript#signalAssignement`](../-pine-script/signal-assignement.md). Parameters \u00b6 ctx - SignalAssignementContext!: the parse tree","title":"exitSignalAssignement - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/exit-signal-assignement/#exitsignalassignement","text":"abstract fun exitSignalAssignement(ctx: SignalAssignementContext!): Unit Exit a parse tree produced by `[ PineScript#signalAssignement`](../-pine-script/signal-assignement.md).","title":"exitSignalAssignement"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/exit-signal-assignement/#parameters","text":"ctx - SignalAssignementContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/exit-string-literal/","text":"core / org.pinelang.parser / PineScriptListener / exitStringLiteral exitStringLiteral \u00b6 abstract fun exitStringLiteral(ctx: StringLiteralContext!): Unit Exit a parse tree produced by `[ PineScript#stringLiteral`](../-pine-script/string-literal.md). Parameters \u00b6 ctx - StringLiteralContext!: the parse tree","title":"exitStringLiteral - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/exit-string-literal/#exitstringliteral","text":"abstract fun exitStringLiteral(ctx: StringLiteralContext!): Unit Exit a parse tree produced by `[ PineScript#stringLiteral`](../-pine-script/string-literal.md).","title":"exitStringLiteral"},{"location":"latest/core/org.pinelang.parser/-pine-script-listener/exit-string-literal/#parameters","text":"ctx - StringLiteralContext!: the parse tree","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/","text":"core / org.pinelang.parser / PineScriptVisitor PineScriptVisitor \u00b6 interface PineScriptVisitor<T : Any !> : ParseTreeVisitor<T> This interface defines a complete generic visitor for a parse tree produced by `[ PineScript`](../-pine-script/index.md). Functions \u00b6 Name Summary visitArguments Visit a parse tree produced by `[ PineScript#arguments ](../-pine-script/arguments.md). abstract fun visitArguments(ctx: ArgumentsContext!): T` visitBinaryOperation Visit a parse tree produced by `[ PineScript#binaryOperation ](../-pine-script/binary-operation.md). abstract fun visitBinaryOperation(ctx: BinaryOperationContext!): T` visitCallableExpression Visit a parse tree produced by `[ PineScript#callableExpression ](../-pine-script/callable-expression.md). abstract fun visitCallableExpression(ctx: CallableExpressionContext!): T` visitExpression Visit a parse tree produced by PineScript#expression. abstract fun visitExpression(ctx: ExpressionContext!): T visitIntegerSuffix Visit a parse tree produced by `[ PineScript#integerSuffix ](../-pine-script/integer-suffix.md). abstract fun visitIntegerSuffix(ctx: IntegerSuffixContext!): T` visitObjectDefinition Visit a parse tree produced by `[ PineScript#objectDefinition ](../-pine-script/object-definition.md). abstract fun visitObjectDefinition(ctx: ObjectDefinitionContext!): T` visitObjectIdentifier Visit a parse tree produced by `[ PineScript#objectIdentifier ](../-pine-script/object-identifier.md). abstract fun visitObjectIdentifier(ctx: ObjectIdentifierContext!): T` visitObjectInitializer Visit a parse tree produced by `[ PineScript#objectInitializer ](../-pine-script/object-initializer.md). abstract fun visitObjectInitializer(ctx: ObjectInitializerContext!): T` visitObjectPropertyExpression Visit a parse tree produced by `[ PineScript#objectPropertyExpression ](../-pine-script/object-property-expression.md). abstract fun visitObjectPropertyExpression(ctx: ObjectPropertyExpressionContext!): T` visitPrimitiveExpression Visit a parse tree produced by `[ PineScript#primitiveExpression ](../-pine-script/primitive-expression.md). abstract fun visitPrimitiveExpression(ctx: PrimitiveExpressionContext!): T` visitProgram Visit a parse tree produced by `[ PineScript#program ](../-pine-script/program.md). abstract fun visitProgram(ctx: ProgramContext!): T` visitPropertyDefinition Visit a parse tree produced by `[ PineScript#propertyDefinition ](../-pine-script/property-definition.md). abstract fun visitPropertyDefinition(ctx: PropertyDefinitionContext!): T` visitRootMember Visit a parse tree produced by `[ PineScript#rootMember ](../-pine-script/root-member.md). abstract fun visitRootMember(ctx: RootMemberContext!): T` visitSignalAssignement Visit a parse tree produced by `[ PineScript#signalAssignement ](../-pine-script/signal-assignement.md). abstract fun visitSignalAssignement(ctx: SignalAssignementContext!): T` visitStringLiteral Visit a parse tree produced by `[ PineScript#stringLiteral ](../-pine-script/string-literal.md). abstract fun visitStringLiteral(ctx: StringLiteralContext!): T` Inheritors \u00b6 Name Summary PineScriptBaseVisitor This class provides an empty implementation of `[ PineScriptVisitor ](./index.md), which can be extended to create a visitor which only needs to handle a subset of the available methods. open class PineScriptBaseVisitor [ Any ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-any/index.html) !> : AbstractParseTreeVisitor , [ PineScriptVisitor ](./index.md) `","title":"PineScriptVisitor - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/#pinescriptvisitor","text":"interface PineScriptVisitor<T : Any !> : ParseTreeVisitor<T> This interface defines a complete generic visitor for a parse tree produced by `[ PineScript`](../-pine-script/index.md).","title":"PineScriptVisitor"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/#functions","text":"Name Summary visitArguments Visit a parse tree produced by `[ PineScript#arguments ](../-pine-script/arguments.md). abstract fun visitArguments(ctx: ArgumentsContext!): T` visitBinaryOperation Visit a parse tree produced by `[ PineScript#binaryOperation ](../-pine-script/binary-operation.md). abstract fun visitBinaryOperation(ctx: BinaryOperationContext!): T` visitCallableExpression Visit a parse tree produced by `[ PineScript#callableExpression ](../-pine-script/callable-expression.md). abstract fun visitCallableExpression(ctx: CallableExpressionContext!): T` visitExpression Visit a parse tree produced by PineScript#expression. abstract fun visitExpression(ctx: ExpressionContext!): T visitIntegerSuffix Visit a parse tree produced by `[ PineScript#integerSuffix ](../-pine-script/integer-suffix.md). abstract fun visitIntegerSuffix(ctx: IntegerSuffixContext!): T` visitObjectDefinition Visit a parse tree produced by `[ PineScript#objectDefinition ](../-pine-script/object-definition.md). abstract fun visitObjectDefinition(ctx: ObjectDefinitionContext!): T` visitObjectIdentifier Visit a parse tree produced by `[ PineScript#objectIdentifier ](../-pine-script/object-identifier.md). abstract fun visitObjectIdentifier(ctx: ObjectIdentifierContext!): T` visitObjectInitializer Visit a parse tree produced by `[ PineScript#objectInitializer ](../-pine-script/object-initializer.md). abstract fun visitObjectInitializer(ctx: ObjectInitializerContext!): T` visitObjectPropertyExpression Visit a parse tree produced by `[ PineScript#objectPropertyExpression ](../-pine-script/object-property-expression.md). abstract fun visitObjectPropertyExpression(ctx: ObjectPropertyExpressionContext!): T` visitPrimitiveExpression Visit a parse tree produced by `[ PineScript#primitiveExpression ](../-pine-script/primitive-expression.md). abstract fun visitPrimitiveExpression(ctx: PrimitiveExpressionContext!): T` visitProgram Visit a parse tree produced by `[ PineScript#program ](../-pine-script/program.md). abstract fun visitProgram(ctx: ProgramContext!): T` visitPropertyDefinition Visit a parse tree produced by `[ PineScript#propertyDefinition ](../-pine-script/property-definition.md). abstract fun visitPropertyDefinition(ctx: PropertyDefinitionContext!): T` visitRootMember Visit a parse tree produced by `[ PineScript#rootMember ](../-pine-script/root-member.md). abstract fun visitRootMember(ctx: RootMemberContext!): T` visitSignalAssignement Visit a parse tree produced by `[ PineScript#signalAssignement ](../-pine-script/signal-assignement.md). abstract fun visitSignalAssignement(ctx: SignalAssignementContext!): T` visitStringLiteral Visit a parse tree produced by `[ PineScript#stringLiteral ](../-pine-script/string-literal.md). abstract fun visitStringLiteral(ctx: StringLiteralContext!): T`","title":"Functions"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/#inheritors","text":"Name Summary PineScriptBaseVisitor This class provides an empty implementation of `[ PineScriptVisitor ](./index.md), which can be extended to create a visitor which only needs to handle a subset of the available methods. open class PineScriptBaseVisitor [ Any ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-any/index.html) !> : AbstractParseTreeVisitor , [ PineScriptVisitor ](./index.md) `","title":"Inheritors"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/visit-arguments/","text":"core / org.pinelang.parser / PineScriptVisitor / visitArguments visitArguments \u00b6 abstract fun visitArguments(ctx: ArgumentsContext!): T Visit a parse tree produced by `[ PineScript#arguments`](../-pine-script/arguments.md). Parameters \u00b6 ctx - ArgumentsContext!: the parse tree Return T: the visitor result","title":"visitArguments - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/visit-arguments/#visitarguments","text":"abstract fun visitArguments(ctx: ArgumentsContext!): T Visit a parse tree produced by `[ PineScript#arguments`](../-pine-script/arguments.md).","title":"visitArguments"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/visit-arguments/#parameters","text":"ctx - ArgumentsContext!: the parse tree Return T: the visitor result","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/visit-binary-operation/","text":"core / org.pinelang.parser / PineScriptVisitor / visitBinaryOperation visitBinaryOperation \u00b6 abstract fun visitBinaryOperation(ctx: BinaryOperationContext!): T Visit a parse tree produced by `[ PineScript#binaryOperation`](../-pine-script/binary-operation.md). Parameters \u00b6 ctx - BinaryOperationContext!: the parse tree Return T: the visitor result","title":"visitBinaryOperation - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/visit-binary-operation/#visitbinaryoperation","text":"abstract fun visitBinaryOperation(ctx: BinaryOperationContext!): T Visit a parse tree produced by `[ PineScript#binaryOperation`](../-pine-script/binary-operation.md).","title":"visitBinaryOperation"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/visit-binary-operation/#parameters","text":"ctx - BinaryOperationContext!: the parse tree Return T: the visitor result","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/visit-callable-expression/","text":"core / org.pinelang.parser / PineScriptVisitor / visitCallableExpression visitCallableExpression \u00b6 abstract fun visitCallableExpression(ctx: CallableExpressionContext!): T Visit a parse tree produced by `[ PineScript#callableExpression`](../-pine-script/callable-expression.md). Parameters \u00b6 ctx - CallableExpressionContext!: the parse tree Return T: the visitor result","title":"visitCallableExpression - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/visit-callable-expression/#visitcallableexpression","text":"abstract fun visitCallableExpression(ctx: CallableExpressionContext!): T Visit a parse tree produced by `[ PineScript#callableExpression`](../-pine-script/callable-expression.md).","title":"visitCallableExpression"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/visit-callable-expression/#parameters","text":"ctx - CallableExpressionContext!: the parse tree Return T: the visitor result","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/visit-expression/","text":"core / org.pinelang.parser / PineScriptVisitor / visitExpression visitExpression \u00b6 abstract fun visitExpression(ctx: ExpressionContext!): T Visit a parse tree produced by PineScript#expression. Parameters \u00b6 ctx - ExpressionContext!: the parse tree Return T: the visitor result","title":"visitExpression - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/visit-expression/#visitexpression","text":"abstract fun visitExpression(ctx: ExpressionContext!): T Visit a parse tree produced by PineScript#expression.","title":"visitExpression"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/visit-expression/#parameters","text":"ctx - ExpressionContext!: the parse tree Return T: the visitor result","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/visit-integer-suffix/","text":"core / org.pinelang.parser / PineScriptVisitor / visitIntegerSuffix visitIntegerSuffix \u00b6 abstract fun visitIntegerSuffix(ctx: IntegerSuffixContext!): T Visit a parse tree produced by `[ PineScript#integerSuffix`](../-pine-script/integer-suffix.md). Parameters \u00b6 ctx - IntegerSuffixContext!: the parse tree Return T: the visitor result","title":"visitIntegerSuffix - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/visit-integer-suffix/#visitintegersuffix","text":"abstract fun visitIntegerSuffix(ctx: IntegerSuffixContext!): T Visit a parse tree produced by `[ PineScript#integerSuffix`](../-pine-script/integer-suffix.md).","title":"visitIntegerSuffix"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/visit-integer-suffix/#parameters","text":"ctx - IntegerSuffixContext!: the parse tree Return T: the visitor result","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/visit-object-definition/","text":"core / org.pinelang.parser / PineScriptVisitor / visitObjectDefinition visitObjectDefinition \u00b6 abstract fun visitObjectDefinition(ctx: ObjectDefinitionContext!): T Visit a parse tree produced by `[ PineScript#objectDefinition`](../-pine-script/object-definition.md). Parameters \u00b6 ctx - ObjectDefinitionContext!: the parse tree Return T: the visitor result","title":"visitObjectDefinition - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/visit-object-definition/#visitobjectdefinition","text":"abstract fun visitObjectDefinition(ctx: ObjectDefinitionContext!): T Visit a parse tree produced by `[ PineScript#objectDefinition`](../-pine-script/object-definition.md).","title":"visitObjectDefinition"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/visit-object-definition/#parameters","text":"ctx - ObjectDefinitionContext!: the parse tree Return T: the visitor result","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/visit-object-identifier/","text":"core / org.pinelang.parser / PineScriptVisitor / visitObjectIdentifier visitObjectIdentifier \u00b6 abstract fun visitObjectIdentifier(ctx: ObjectIdentifierContext!): T Visit a parse tree produced by `[ PineScript#objectIdentifier`](../-pine-script/object-identifier.md). Parameters \u00b6 ctx - ObjectIdentifierContext!: the parse tree Return T: the visitor result","title":"visitObjectIdentifier - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/visit-object-identifier/#visitobjectidentifier","text":"abstract fun visitObjectIdentifier(ctx: ObjectIdentifierContext!): T Visit a parse tree produced by `[ PineScript#objectIdentifier`](../-pine-script/object-identifier.md).","title":"visitObjectIdentifier"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/visit-object-identifier/#parameters","text":"ctx - ObjectIdentifierContext!: the parse tree Return T: the visitor result","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/visit-object-initializer/","text":"core / org.pinelang.parser / PineScriptVisitor / visitObjectInitializer visitObjectInitializer \u00b6 abstract fun visitObjectInitializer(ctx: ObjectInitializerContext!): T Visit a parse tree produced by `[ PineScript#objectInitializer`](../-pine-script/object-initializer.md). Parameters \u00b6 ctx - ObjectInitializerContext!: the parse tree Return T: the visitor result","title":"visitObjectInitializer - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/visit-object-initializer/#visitobjectinitializer","text":"abstract fun visitObjectInitializer(ctx: ObjectInitializerContext!): T Visit a parse tree produced by `[ PineScript#objectInitializer`](../-pine-script/object-initializer.md).","title":"visitObjectInitializer"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/visit-object-initializer/#parameters","text":"ctx - ObjectInitializerContext!: the parse tree Return T: the visitor result","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/visit-object-property-expression/","text":"core / org.pinelang.parser / PineScriptVisitor / visitObjectPropertyExpression visitObjectPropertyExpression \u00b6 abstract fun visitObjectPropertyExpression(ctx: ObjectPropertyExpressionContext!): T Visit a parse tree produced by `[ PineScript#objectPropertyExpression`](../-pine-script/object-property-expression.md). Parameters \u00b6 ctx - ObjectPropertyExpressionContext!: the parse tree Return T: the visitor result","title":"visitObjectPropertyExpression - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/visit-object-property-expression/#visitobjectpropertyexpression","text":"abstract fun visitObjectPropertyExpression(ctx: ObjectPropertyExpressionContext!): T Visit a parse tree produced by `[ PineScript#objectPropertyExpression`](../-pine-script/object-property-expression.md).","title":"visitObjectPropertyExpression"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/visit-object-property-expression/#parameters","text":"ctx - ObjectPropertyExpressionContext!: the parse tree Return T: the visitor result","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/visit-primitive-expression/","text":"core / org.pinelang.parser / PineScriptVisitor / visitPrimitiveExpression visitPrimitiveExpression \u00b6 abstract fun visitPrimitiveExpression(ctx: PrimitiveExpressionContext!): T Visit a parse tree produced by `[ PineScript#primitiveExpression`](../-pine-script/primitive-expression.md). Parameters \u00b6 ctx - PrimitiveExpressionContext!: the parse tree Return T: the visitor result","title":"visitPrimitiveExpression - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/visit-primitive-expression/#visitprimitiveexpression","text":"abstract fun visitPrimitiveExpression(ctx: PrimitiveExpressionContext!): T Visit a parse tree produced by `[ PineScript#primitiveExpression`](../-pine-script/primitive-expression.md).","title":"visitPrimitiveExpression"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/visit-primitive-expression/#parameters","text":"ctx - PrimitiveExpressionContext!: the parse tree Return T: the visitor result","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/visit-program/","text":"core / org.pinelang.parser / PineScriptVisitor / visitProgram visitProgram \u00b6 abstract fun visitProgram(ctx: ProgramContext!): T Visit a parse tree produced by `[ PineScript#program`](../-pine-script/program.md). Parameters \u00b6 ctx - ProgramContext!: the parse tree Return T: the visitor result","title":"visitProgram - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/visit-program/#visitprogram","text":"abstract fun visitProgram(ctx: ProgramContext!): T Visit a parse tree produced by `[ PineScript#program`](../-pine-script/program.md).","title":"visitProgram"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/visit-program/#parameters","text":"ctx - ProgramContext!: the parse tree Return T: the visitor result","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/visit-property-definition/","text":"core / org.pinelang.parser / PineScriptVisitor / visitPropertyDefinition visitPropertyDefinition \u00b6 abstract fun visitPropertyDefinition(ctx: PropertyDefinitionContext!): T Visit a parse tree produced by `[ PineScript#propertyDefinition`](../-pine-script/property-definition.md). Parameters \u00b6 ctx - PropertyDefinitionContext!: the parse tree Return T: the visitor result","title":"visitPropertyDefinition - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/visit-property-definition/#visitpropertydefinition","text":"abstract fun visitPropertyDefinition(ctx: PropertyDefinitionContext!): T Visit a parse tree produced by `[ PineScript#propertyDefinition`](../-pine-script/property-definition.md).","title":"visitPropertyDefinition"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/visit-property-definition/#parameters","text":"ctx - PropertyDefinitionContext!: the parse tree Return T: the visitor result","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/visit-root-member/","text":"core / org.pinelang.parser / PineScriptVisitor / visitRootMember visitRootMember \u00b6 abstract fun visitRootMember(ctx: RootMemberContext!): T Visit a parse tree produced by `[ PineScript#rootMember`](../-pine-script/root-member.md). Parameters \u00b6 ctx - RootMemberContext!: the parse tree Return T: the visitor result","title":"visitRootMember - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/visit-root-member/#visitrootmember","text":"abstract fun visitRootMember(ctx: RootMemberContext!): T Visit a parse tree produced by `[ PineScript#rootMember`](../-pine-script/root-member.md).","title":"visitRootMember"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/visit-root-member/#parameters","text":"ctx - RootMemberContext!: the parse tree Return T: the visitor result","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/visit-signal-assignement/","text":"core / org.pinelang.parser / PineScriptVisitor / visitSignalAssignement visitSignalAssignement \u00b6 abstract fun visitSignalAssignement(ctx: SignalAssignementContext!): T Visit a parse tree produced by `[ PineScript#signalAssignement`](../-pine-script/signal-assignement.md). Parameters \u00b6 ctx - SignalAssignementContext!: the parse tree Return T: the visitor result","title":"visitSignalAssignement - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/visit-signal-assignement/#visitsignalassignement","text":"abstract fun visitSignalAssignement(ctx: SignalAssignementContext!): T Visit a parse tree produced by `[ PineScript#signalAssignement`](../-pine-script/signal-assignement.md).","title":"visitSignalAssignement"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/visit-signal-assignement/#parameters","text":"ctx - SignalAssignementContext!: the parse tree Return T: the visitor result","title":"Parameters"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/visit-string-literal/","text":"core / org.pinelang.parser / PineScriptVisitor / visitStringLiteral visitStringLiteral \u00b6 abstract fun visitStringLiteral(ctx: StringLiteralContext!): T Visit a parse tree produced by `[ PineScript#stringLiteral`](../-pine-script/string-literal.md). Parameters \u00b6 ctx - StringLiteralContext!: the parse tree Return T: the visitor result","title":"visitStringLiteral - Pinelang"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/visit-string-literal/#visitstringliteral","text":"abstract fun visitStringLiteral(ctx: StringLiteralContext!): T Visit a parse tree produced by `[ PineScript#stringLiteral`](../-pine-script/string-literal.md).","title":"visitStringLiteral"},{"location":"latest/core/org.pinelang.parser/-pine-script-visitor/visit-string-literal/#parameters","text":"ctx - StringLiteralContext!: the parse tree Return T: the visitor result","title":"Parameters"},{"location":"latest/core/org.pinelang.util/","text":"core / org.pinelang.util Package org.pinelang.util \u00b6 Types \u00b6 Name Summary IndexedMap class IndexedMap<V> Extensions for External Classes \u00b6 Name Summary kotlin.collections.List kotlin.collections.MutableMap","title":"Package org.pinelang.util - Pinelang"},{"location":"latest/core/org.pinelang.util/#package-orgpinelangutil","text":"","title":"Package org.pinelang.util"},{"location":"latest/core/org.pinelang.util/#types","text":"Name Summary IndexedMap class IndexedMap<V>","title":"Types"},{"location":"latest/core/org.pinelang.util/#extensions-for-external-classes","text":"Name Summary kotlin.collections.List kotlin.collections.MutableMap","title":"Extensions for External Classes"},{"location":"latest/core/org.pinelang.util/-indexed-map/","text":"core / org.pinelang.util / IndexedMap IndexedMap \u00b6 class IndexedMap<V> Constructors \u00b6 Name Summary <init> IndexedMap(initialCapacity: Int = 10, index: MutableMap < String , Int > = HashMap(initialCapacity), props: MutableList <V> = ArrayList(initialCapacity)) Properties \u00b6 Name Summary index val index: MutableMap < String , Int > size val size: Int Functions \u00b6 Name Summary contains operator fun contains(key: String ): Boolean get operator fun get(idx: Int ): V? operator fun get(key: String ): V? getIndex fun getIndex(key: String ): Int getIndexOrNull fun getIndexOrNull(key: String ): Int ? getValue fun getValue(key: String ): V fun getValue(index: Int ): V set operator fun set(key: String , value: V): IndexedMap <V>","title":"IndexedMap - Pinelang"},{"location":"latest/core/org.pinelang.util/-indexed-map/#indexedmap","text":"class IndexedMap<V>","title":"IndexedMap"},{"location":"latest/core/org.pinelang.util/-indexed-map/#constructors","text":"Name Summary <init> IndexedMap(initialCapacity: Int = 10, index: MutableMap < String , Int > = HashMap(initialCapacity), props: MutableList <V> = ArrayList(initialCapacity))","title":"Constructors"},{"location":"latest/core/org.pinelang.util/-indexed-map/#properties","text":"Name Summary index val index: MutableMap < String , Int > size val size: Int","title":"Properties"},{"location":"latest/core/org.pinelang.util/-indexed-map/#functions","text":"Name Summary contains operator fun contains(key: String ): Boolean get operator fun get(idx: Int ): V? operator fun get(key: String ): V? getIndex fun getIndex(key: String ): Int getIndexOrNull fun getIndexOrNull(key: String ): Int ? getValue fun getValue(key: String ): V fun getValue(index: Int ): V set operator fun set(key: String , value: V): IndexedMap <V>","title":"Functions"},{"location":"latest/core/org.pinelang.util/-indexed-map/--index--/","text":"core / org.pinelang.util / IndexedMap / index index \u00b6 val index: MutableMap < String , Int >","title":"index - Pinelang"},{"location":"latest/core/org.pinelang.util/-indexed-map/--index--/#index","text":"val index: MutableMap < String , Int >","title":"index"},{"location":"latest/core/org.pinelang.util/-indexed-map/-init-/","text":"core / org.pinelang.util / IndexedMap / <init> <init> \u00b6 IndexedMap(initialCapacity: Int = 10, index: MutableMap < String , Int > = HashMap(initialCapacity), props: MutableList <V> = ArrayList(initialCapacity))","title":" init "},{"location":"latest/core/org.pinelang.util/-indexed-map/-init-/#init","text":"IndexedMap(initialCapacity: Int = 10, index: MutableMap < String , Int > = HashMap(initialCapacity), props: MutableList <V> = ArrayList(initialCapacity))","title":"&lt;init&gt;"},{"location":"latest/core/org.pinelang.util/-indexed-map/contains/","text":"core / org.pinelang.util / IndexedMap / contains contains \u00b6 operator fun contains(key: String ): Boolean","title":"contains - Pinelang"},{"location":"latest/core/org.pinelang.util/-indexed-map/contains/#contains","text":"operator fun contains(key: String ): Boolean","title":"contains"},{"location":"latest/core/org.pinelang.util/-indexed-map/get-index-or-null/","text":"core / org.pinelang.util / IndexedMap / getIndexOrNull getIndexOrNull \u00b6 fun getIndexOrNull(key: String ): Int ?","title":"getIndexOrNull - Pinelang"},{"location":"latest/core/org.pinelang.util/-indexed-map/get-index-or-null/#getindexornull","text":"fun getIndexOrNull(key: String ): Int ?","title":"getIndexOrNull"},{"location":"latest/core/org.pinelang.util/-indexed-map/get-index/","text":"core / org.pinelang.util / IndexedMap / getIndex getIndex \u00b6 fun getIndex(key: String ): Int","title":"getIndex - Pinelang"},{"location":"latest/core/org.pinelang.util/-indexed-map/get-index/#getindex","text":"fun getIndex(key: String ): Int","title":"getIndex"},{"location":"latest/core/org.pinelang.util/-indexed-map/get-value/","text":"core / org.pinelang.util / IndexedMap / getValue getValue \u00b6 fun getValue(key: String ): V fun getValue(index: Int ): V","title":"getValue - Pinelang"},{"location":"latest/core/org.pinelang.util/-indexed-map/get-value/#getvalue","text":"fun getValue(key: String ): V fun getValue(index: Int ): V","title":"getValue"},{"location":"latest/core/org.pinelang.util/-indexed-map/get/","text":"core / org.pinelang.util / IndexedMap / get get \u00b6 operator fun get(idx: Int ): V? operator fun get(key: String ): V?","title":"get - Pinelang"},{"location":"latest/core/org.pinelang.util/-indexed-map/get/#get","text":"operator fun get(idx: Int ): V? operator fun get(key: String ): V?","title":"get"},{"location":"latest/core/org.pinelang.util/-indexed-map/set/","text":"core / org.pinelang.util / IndexedMap / set set \u00b6 operator fun set(key: String , value: V): IndexedMap <V>","title":"set - Pinelang"},{"location":"latest/core/org.pinelang.util/-indexed-map/set/#set","text":"operator fun set(key: String , value: V): IndexedMap <V>","title":"set"},{"location":"latest/core/org.pinelang.util/-indexed-map/size/","text":"core / org.pinelang.util / IndexedMap / size size \u00b6 val size: Int","title":"size - Pinelang"},{"location":"latest/core/org.pinelang.util/-indexed-map/size/#size","text":"val size: Int","title":"size"},{"location":"latest/core/org.pinelang.util/kotlin.collections.-list/","text":"core / org.pinelang.util / kotlin.collections.List Extensions for kotlin.collections.List \u00b6 Name Summary toIndexMap fun List < PineSignal >.toIndexMap(): Map < String , Int >","title":"Extensions for kotlin.collections.List - Pinelang"},{"location":"latest/core/org.pinelang.util/kotlin.collections.-list/#extensions-for-kotlincollectionslist","text":"Name Summary toIndexMap fun List < PineSignal >.toIndexMap(): Map < String , Int >","title":"Extensions for kotlin.collections.List"},{"location":"latest/core/org.pinelang.util/kotlin.collections.-list/to-index-map/","text":"core / org.pinelang.util / kotlin.collections.List / toIndexMap toIndexMap \u00b6 fun List < PineSignal >.toIndexMap(): Map < String , Int >","title":"toIndexMap - Pinelang"},{"location":"latest/core/org.pinelang.util/kotlin.collections.-list/to-index-map/#toindexmap","text":"fun List < PineSignal >.toIndexMap(): Map < String , Int >","title":"toIndexMap"},{"location":"latest/core/org.pinelang.util/kotlin.collections.-mutable-map/","text":"core / org.pinelang.util / kotlin.collections.MutableMap Extensions for kotlin.collections.MutableMap \u00b6 Name Summary safeAdd fun <K, V> MutableMap <K, MutableSet <V>>.safeAdd(key: K, value: V): Unit safeGet fun <K, V> MutableMap <K, MutableSet <V>>.safeGet(key: K): MutableSet <V>","title":"Extensions for kotlin.collections.MutableMap - Pinelang"},{"location":"latest/core/org.pinelang.util/kotlin.collections.-mutable-map/#extensions-for-kotlincollectionsmutablemap","text":"Name Summary safeAdd fun <K, V> MutableMap <K, MutableSet <V>>.safeAdd(key: K, value: V): Unit safeGet fun <K, V> MutableMap <K, MutableSet <V>>.safeGet(key: K): MutableSet <V>","title":"Extensions for kotlin.collections.MutableMap"},{"location":"latest/core/org.pinelang.util/kotlin.collections.-mutable-map/safe-add/","text":"core / org.pinelang.util / kotlin.collections.MutableMap / safeAdd safeAdd \u00b6 fun <K, V> MutableMap <K, MutableSet <V>>.safeAdd(key: K, value: V): Unit","title":"safeAdd - Pinelang"},{"location":"latest/core/org.pinelang.util/kotlin.collections.-mutable-map/safe-add/#safeadd","text":"fun <K, V> MutableMap <K, MutableSet <V>>.safeAdd(key: K, value: V): Unit","title":"safeAdd"},{"location":"latest/core/org.pinelang.util/kotlin.collections.-mutable-map/safe-get/","text":"core / org.pinelang.util / kotlin.collections.MutableMap / safeGet safeGet \u00b6 fun <K, V> MutableMap <K, MutableSet <V>>.safeGet(key: K): MutableSet <V>","title":"safeGet - Pinelang"},{"location":"latest/core/org.pinelang.util/kotlin.collections.-mutable-map/safe-get/#safeget","text":"fun <K, V> MutableMap <K, MutableSet <V>>.safeGet(key: K): MutableSet <V>","title":"safeGet"},{"location":"latest/lsp/","text":"lsp Packages \u00b6 Name Summary org.pinelang.lsp.lsp org.pinelang.lsp.lsp.models org.pinelang.lsp.lsp.sandbox.ui org.pinelang.lsp.main.sandbox.ui Index \u00b6 All Types","title":"lsp"},{"location":"latest/lsp/#packages","text":"Name Summary org.pinelang.lsp.lsp org.pinelang.lsp.lsp.models org.pinelang.lsp.lsp.sandbox.ui org.pinelang.lsp.main.sandbox.ui","title":"Packages"},{"location":"latest/lsp/#index","text":"All Types","title":"Index"},{"location":"latest/lsp/alltypes/","text":"All Types \u00b6 Name Summary org.pinelang.lsp.lsp.models.CodeActionClientCapabilities \u00b6 | org.pinelang.lsp.lsp.models.CodeActionLiteralSupport \u00b6 | org.pinelang.lsp.lsp.models.Command \u00b6 | org.pinelang.lsp.lsp.models.CompletionClientCapabilities \u00b6 | org.pinelang.lsp.lsp.models.CompletionContext \u00b6 | org.pinelang.lsp.lsp.models.CompletionItem \u00b6 | org.pinelang.lsp.lsp.models.CompletionItemKind \u00b6 The kind of a completion entry. | org.pinelang.lsp.lsp.models.CompletionProvider \u00b6 | org.pinelang.lsp.lsp.models.ConfigurationClientCapabilities \u00b6 | org.pinelang.lsp.lsp.models.DeclarationClientCapabilities \u00b6 | org.pinelang.lsp.lsp.models.DiagnosticRelatedInformation \u00b6 | org.pinelang.lsp.lsp.models.DocumentLinkClientCapabilities \u00b6 | org.pinelang.lsp.lsp.models.DocumentSymbol \u00b6 Represents programming constructs like variables, classes, interfaces etc. that appear in a document. Document symbols can be hierarchical and they have two ranges: one that encloses its definition and one that points to its most interesting range, e.g. the range of an identifier. | org.pinelang.lsp.lsp.models.DocumentSymbolClientCapabilities \u00b6 | org.pinelang.lsp.lsp.models.ErrorCode \u00b6 | org.pinelang.lsp.lsp.models.FoldingRangeClientCapabilities \u00b6 | org.pinelang.lsp.lsp.models.HoverClientCapabilities \u00b6 | org.pinelang.lsp.lsp.models.HoverParams \u00b6 | org.pinelang.lsp.lsp.models.HoverResponse \u00b6 The result of a hover request. | org.pinelang.lsp.lsp.sandbox.ui.Item \u00b6 | org.pinelang.lsp.lsp.models.JsonRPCClientInfo \u00b6 | org.pinelang.lsp.lsp.models.JsonRPCHeader \u00b6 | org.pinelang.lsp.lsp.models.JsonRPCRequest \u00b6 | org.pinelang.lsp.lsp.models.JsonRPCServerCapabilitiesImpl \u00b6 | org.pinelang.lsp.lsp.sandbox.ui.Label \u00b6 | org.pinelang.lsp.lsp.models.Location \u00b6 | org.pinelang.lsp.lsp.models.LSPClientCapabilities \u00b6 | org.pinelang.lsp.lsp.models.LSPClientInfo \u00b6 | org.pinelang.lsp.lsp.models.LSPCompletionItem \u00b6 | org.pinelang.lsp.lsp.models.LSPCompletionList \u00b6 Represents a collection of completion items to be presented in the editor. | org.pinelang.lsp.lsp.LSPDelegate \u00b6 | org.pinelang.lsp.lsp.models.LSPDiagnostic \u00b6 | org.pinelang.lsp.lsp.models.LSPEmptyParams \u00b6 | org.pinelang.lsp.lsp.models.LSPFailureHandling \u00b6 | org.pinelang.lsp.lsp.models.LSPInitializeParams \u00b6 | org.pinelang.lsp.lsp.models.LSPInitializeServerResult \u00b6 | org.pinelang.lsp.lsp.LSPMethod \u00b6 | org.pinelang.lsp.lsp.models.LSPNotification \u00b6 | org.pinelang.lsp.lsp.LSPRequestAdapter \u00b6 | org.pinelang.lsp.lsp.models.LSPResourceOperation \u00b6 | org.pinelang.lsp.lsp.models.LSPResponse \u00b6 | org.pinelang.lsp.lsp.LSPServer \u00b6 | org.pinelang.lsp.lsp.models.LSPServerInfo \u00b6 | org.pinelang.lsp.main.sandbox.ui.MainWindow \u00b6 | org.pinelang.lsp.lsp.models.MarkupContent \u00b6 | org.pinelang.lsp.lsp.models.ParameterInformation \u00b6 | org.pinelang.lsp.lsp.models.Position \u00b6 | org.pinelang.lsp.lsp.models.PublishDiagnosticsClientCapabilities \u00b6 | org.pinelang.lsp.lsp.models.PublishDiagnosticsParams \u00b6 | org.pinelang.lsp.lsp.models.Range \u00b6 Selection range for a document. End position is exclusive | org.pinelang.lsp.lsp.sandbox.ui.Rectangle \u00b6 | org.pinelang.lsp.lsp.models.RenameClientCapabilities \u00b6 | org.pinelang.lsp.lsp.models.ResponseError \u00b6 | org.pinelang.lsp.lsp.ServerImpl \u00b6 | org.pinelang.lsp.lsp.models.SignatureHelpClientCapabilities \u00b6 Client Capabilities for a SignatureHelpRequest . | org.pinelang.lsp.lsp.models.SignatureInformation \u00b6 | (extensions in package org.pinelang.lsp.lsp.models) kotlin.String \u00b6 | org.pinelang.lsp.lsp.models.SymbolInformation \u00b6 Represents information about programming constructs like variables, classes, interfaces etc. | org.pinelang.lsp.lsp.models.SymbolKind \u00b6 | org.pinelang.lsp.lsp.models.TextDocumentClientCapabilities \u00b6 Text document specific client capabilities. | org.pinelang.lsp.lsp.models.TextDocumentCompletionParams \u00b6 | org.pinelang.lsp.lsp.models.TextDocumentContentChangeEvent \u00b6 | org.pinelang.lsp.lsp.models.TextDocumentDidChangeParams \u00b6 | org.pinelang.lsp.lsp.models.TextDocumentDidOpenParams \u00b6 | org.pinelang.lsp.lsp.models.TextDocumentIdentifier \u00b6 | org.pinelang.lsp.lsp.models.TextDocumentItem \u00b6 | org.pinelang.lsp.lsp.models.TextDocumentSymbolParams \u00b6 | org.pinelang.lsp.lsp.models.TextDocumentSync \u00b6 | org.pinelang.lsp.lsp.models.TextDocumentSyncClientCapabilities \u00b6 | org.pinelang.lsp.lsp.models.TextDocumentSyncKind \u00b6 | org.pinelang.lsp.lsp.models.TextDocumentSyncKindAdapter \u00b6 | org.pinelang.lsp.lsp.models.TextEdit \u00b6 | org.pinelang.lsp.lsp.models.ValueSet \u00b6 | org.pinelang.lsp.lsp.models.VersionedTextDocumentIdentifier \u00b6 | org.pinelang.lsp.lsp.models.WorkspaceClientCapabilities \u00b6 | org.pinelang.lsp.lsp.models.WorkspaceEditClientCapabilities \u00b6 | org.pinelang.lsp.lsp.models.WorkspaceFoldersCapabilities \u00b6 | org.pinelang.lsp.lsp.models.WorkspaceFoldersServerCapabilities \u00b6 | org.pinelang.lsp.lsp.models.WorkspaceSymbolClientCapabilities \u00b6","title":"All Types - Pinelang"},{"location":"latest/lsp/alltypes/#all-types","text":"Name Summary","title":"All Types"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelscodeactionclientcapabilities","text":"|","title":"org.pinelang.lsp.lsp.models.CodeActionClientCapabilities"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelscodeactionliteralsupport","text":"|","title":"org.pinelang.lsp.lsp.models.CodeActionLiteralSupport"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelscommand","text":"|","title":"org.pinelang.lsp.lsp.models.Command"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelscompletionclientcapabilities","text":"|","title":"org.pinelang.lsp.lsp.models.CompletionClientCapabilities"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelscompletioncontext","text":"|","title":"org.pinelang.lsp.lsp.models.CompletionContext"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelscompletionitem","text":"|","title":"org.pinelang.lsp.lsp.models.CompletionItem"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelscompletionitemkind","text":"The kind of a completion entry. |","title":"org.pinelang.lsp.lsp.models.CompletionItemKind"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelscompletionprovider","text":"|","title":"org.pinelang.lsp.lsp.models.CompletionProvider"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelsconfigurationclientcapabilities","text":"|","title":"org.pinelang.lsp.lsp.models.ConfigurationClientCapabilities"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelsdeclarationclientcapabilities","text":"|","title":"org.pinelang.lsp.lsp.models.DeclarationClientCapabilities"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelsdiagnosticrelatedinformation","text":"|","title":"org.pinelang.lsp.lsp.models.DiagnosticRelatedInformation"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelsdocumentlinkclientcapabilities","text":"|","title":"org.pinelang.lsp.lsp.models.DocumentLinkClientCapabilities"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelsdocumentsymbol","text":"Represents programming constructs like variables, classes, interfaces etc. that appear in a document. Document symbols can be hierarchical and they have two ranges: one that encloses its definition and one that points to its most interesting range, e.g. the range of an identifier. |","title":"org.pinelang.lsp.lsp.models.DocumentSymbol"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelsdocumentsymbolclientcapabilities","text":"|","title":"org.pinelang.lsp.lsp.models.DocumentSymbolClientCapabilities"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelserrorcode","text":"|","title":"org.pinelang.lsp.lsp.models.ErrorCode"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelsfoldingrangeclientcapabilities","text":"|","title":"org.pinelang.lsp.lsp.models.FoldingRangeClientCapabilities"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelshoverclientcapabilities","text":"|","title":"org.pinelang.lsp.lsp.models.HoverClientCapabilities"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelshoverparams","text":"|","title":"org.pinelang.lsp.lsp.models.HoverParams"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelshoverresponse","text":"The result of a hover request. |","title":"org.pinelang.lsp.lsp.models.HoverResponse"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspsandboxuiitem","text":"|","title":"org.pinelang.lsp.lsp.sandbox.ui.Item"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelsjsonrpcclientinfo","text":"|","title":"org.pinelang.lsp.lsp.models.JsonRPCClientInfo"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelsjsonrpcheader","text":"|","title":"org.pinelang.lsp.lsp.models.JsonRPCHeader"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelsjsonrpcrequest","text":"|","title":"org.pinelang.lsp.lsp.models.JsonRPCRequest"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelsjsonrpcservercapabilitiesimpl","text":"|","title":"org.pinelang.lsp.lsp.models.JsonRPCServerCapabilitiesImpl"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspsandboxuilabel","text":"|","title":"org.pinelang.lsp.lsp.sandbox.ui.Label"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelslocation","text":"|","title":"org.pinelang.lsp.lsp.models.Location"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelslspclientcapabilities","text":"|","title":"org.pinelang.lsp.lsp.models.LSPClientCapabilities"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelslspclientinfo","text":"|","title":"org.pinelang.lsp.lsp.models.LSPClientInfo"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelslspcompletionitem","text":"|","title":"org.pinelang.lsp.lsp.models.LSPCompletionItem"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelslspcompletionlist","text":"Represents a collection of completion items to be presented in the editor. |","title":"org.pinelang.lsp.lsp.models.LSPCompletionList"},{"location":"latest/lsp/alltypes/#orgpinelanglsplsplspdelegate","text":"|","title":"org.pinelang.lsp.lsp.LSPDelegate"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelslspdiagnostic","text":"|","title":"org.pinelang.lsp.lsp.models.LSPDiagnostic"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelslspemptyparams","text":"|","title":"org.pinelang.lsp.lsp.models.LSPEmptyParams"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelslspfailurehandling","text":"|","title":"org.pinelang.lsp.lsp.models.LSPFailureHandling"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelslspinitializeparams","text":"|","title":"org.pinelang.lsp.lsp.models.LSPInitializeParams"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelslspinitializeserverresult","text":"|","title":"org.pinelang.lsp.lsp.models.LSPInitializeServerResult"},{"location":"latest/lsp/alltypes/#orgpinelanglsplsplspmethod","text":"|","title":"org.pinelang.lsp.lsp.LSPMethod"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelslspnotification","text":"|","title":"org.pinelang.lsp.lsp.models.LSPNotification"},{"location":"latest/lsp/alltypes/#orgpinelanglsplsplsprequestadapter","text":"|","title":"org.pinelang.lsp.lsp.LSPRequestAdapter"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelslspresourceoperation","text":"|","title":"org.pinelang.lsp.lsp.models.LSPResourceOperation"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelslspresponse","text":"|","title":"org.pinelang.lsp.lsp.models.LSPResponse"},{"location":"latest/lsp/alltypes/#orgpinelanglsplsplspserver","text":"|","title":"org.pinelang.lsp.lsp.LSPServer"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelslspserverinfo","text":"|","title":"org.pinelang.lsp.lsp.models.LSPServerInfo"},{"location":"latest/lsp/alltypes/#orgpinelanglspmainsandboxuimainwindow","text":"|","title":"org.pinelang.lsp.main.sandbox.ui.MainWindow"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelsmarkupcontent","text":"|","title":"org.pinelang.lsp.lsp.models.MarkupContent"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelsparameterinformation","text":"|","title":"org.pinelang.lsp.lsp.models.ParameterInformation"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelsposition","text":"|","title":"org.pinelang.lsp.lsp.models.Position"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelspublishdiagnosticsclientcapabilities","text":"|","title":"org.pinelang.lsp.lsp.models.PublishDiagnosticsClientCapabilities"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelspublishdiagnosticsparams","text":"|","title":"org.pinelang.lsp.lsp.models.PublishDiagnosticsParams"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelsrange","text":"Selection range for a document. End position is exclusive |","title":"org.pinelang.lsp.lsp.models.Range"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspsandboxuirectangle","text":"|","title":"org.pinelang.lsp.lsp.sandbox.ui.Rectangle"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelsrenameclientcapabilities","text":"|","title":"org.pinelang.lsp.lsp.models.RenameClientCapabilities"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelsresponseerror","text":"|","title":"org.pinelang.lsp.lsp.models.ResponseError"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspserverimpl","text":"|","title":"org.pinelang.lsp.lsp.ServerImpl"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelssignaturehelpclientcapabilities","text":"Client Capabilities for a SignatureHelpRequest . |","title":"org.pinelang.lsp.lsp.models.SignatureHelpClientCapabilities"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelssignatureinformation","text":"| (extensions in package org.pinelang.lsp.lsp.models)","title":"org.pinelang.lsp.lsp.models.SignatureInformation"},{"location":"latest/lsp/alltypes/#kotlinstring","text":"|","title":"kotlin.String"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelssymbolinformation","text":"Represents information about programming constructs like variables, classes, interfaces etc. |","title":"org.pinelang.lsp.lsp.models.SymbolInformation"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelssymbolkind","text":"|","title":"org.pinelang.lsp.lsp.models.SymbolKind"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelstextdocumentclientcapabilities","text":"Text document specific client capabilities. |","title":"org.pinelang.lsp.lsp.models.TextDocumentClientCapabilities"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelstextdocumentcompletionparams","text":"|","title":"org.pinelang.lsp.lsp.models.TextDocumentCompletionParams"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelstextdocumentcontentchangeevent","text":"|","title":"org.pinelang.lsp.lsp.models.TextDocumentContentChangeEvent"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelstextdocumentdidchangeparams","text":"|","title":"org.pinelang.lsp.lsp.models.TextDocumentDidChangeParams"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelstextdocumentdidopenparams","text":"|","title":"org.pinelang.lsp.lsp.models.TextDocumentDidOpenParams"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelstextdocumentidentifier","text":"|","title":"org.pinelang.lsp.lsp.models.TextDocumentIdentifier"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelstextdocumentitem","text":"|","title":"org.pinelang.lsp.lsp.models.TextDocumentItem"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelstextdocumentsymbolparams","text":"|","title":"org.pinelang.lsp.lsp.models.TextDocumentSymbolParams"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelstextdocumentsync","text":"|","title":"org.pinelang.lsp.lsp.models.TextDocumentSync"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelstextdocumentsyncclientcapabilities","text":"|","title":"org.pinelang.lsp.lsp.models.TextDocumentSyncClientCapabilities"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelstextdocumentsynckind","text":"|","title":"org.pinelang.lsp.lsp.models.TextDocumentSyncKind"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelstextdocumentsynckindadapter","text":"|","title":"org.pinelang.lsp.lsp.models.TextDocumentSyncKindAdapter"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelstextedit","text":"|","title":"org.pinelang.lsp.lsp.models.TextEdit"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelsvalueset","text":"|","title":"org.pinelang.lsp.lsp.models.ValueSet"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelsversionedtextdocumentidentifier","text":"|","title":"org.pinelang.lsp.lsp.models.VersionedTextDocumentIdentifier"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelsworkspaceclientcapabilities","text":"|","title":"org.pinelang.lsp.lsp.models.WorkspaceClientCapabilities"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelsworkspaceeditclientcapabilities","text":"|","title":"org.pinelang.lsp.lsp.models.WorkspaceEditClientCapabilities"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelsworkspacefolderscapabilities","text":"|","title":"org.pinelang.lsp.lsp.models.WorkspaceFoldersCapabilities"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelsworkspacefoldersservercapabilities","text":"|","title":"org.pinelang.lsp.lsp.models.WorkspaceFoldersServerCapabilities"},{"location":"latest/lsp/alltypes/#orgpinelanglsplspmodelsworkspacesymbolclientcapabilities","text":"","title":"org.pinelang.lsp.lsp.models.WorkspaceSymbolClientCapabilities"},{"location":"latest/lsp/org.pinelang.lsp.lsp/","text":"lsp / org.pinelang.lsp.lsp Package org.pinelang.lsp.lsp \u00b6 Types \u00b6 Name Summary LSPDelegate interface LSPDelegate LSPMethod enum class LSPMethod LSPRequestAdapter class LSPRequestAdapter : JsonAdapter< JsonRPCRequest > LSPServer class LSPServer ServerImpl class ServerImpl : LSPDelegate Functions \u00b6 Name Summary jsonRPCHeader fun jsonRPCHeader(data: String ): JsonRPCHeader","title":"Package org.pinelang.lsp.lsp - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/#package-orgpinelanglsplsp","text":"","title":"Package org.pinelang.lsp.lsp"},{"location":"latest/lsp/org.pinelang.lsp.lsp/#types","text":"Name Summary LSPDelegate interface LSPDelegate LSPMethod enum class LSPMethod LSPRequestAdapter class LSPRequestAdapter : JsonAdapter< JsonRPCRequest > LSPServer class LSPServer ServerImpl class ServerImpl : LSPDelegate","title":"Types"},{"location":"latest/lsp/org.pinelang.lsp.lsp/#functions","text":"Name Summary jsonRPCHeader fun jsonRPCHeader(data: String ): JsonRPCHeader","title":"Functions"},{"location":"latest/lsp/org.pinelang.lsp.lsp/json-r-p-c-header/","text":"lsp / org.pinelang.lsp.lsp / jsonRPCHeader jsonRPCHeader \u00b6 fun jsonRPCHeader(data: String ): JsonRPCHeader","title":"jsonRPCHeader - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/json-r-p-c-header/#jsonrpcheader","text":"fun jsonRPCHeader(data: String ): JsonRPCHeader","title":"jsonRPCHeader"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-delegate/","text":"lsp / org.pinelang.lsp.lsp / LSPDelegate LSPDelegate \u00b6 interface LSPDelegate Functions \u00b6 Name Summary onHover abstract fun onHover(hover: HoverParams ): HoverResponse ? onInitialize abstract fun onInitialize(capabilities: LSPInitializeParams ): LSPInitializeServerResult onInitialized abstract fun onInitialized(): Unit onShutdown abstract fun onShutdown(): Unit onTextDocumentCompletion abstract fun onTextDocumentCompletion(documentCompletionParams: TextDocumentCompletionParams ): LSPCompletionList onTextDocumentDidChange abstract fun onTextDocumentDidChange(doc: TextDocumentDidChangeParams ): PublishDiagnosticsParams onTextDocumentDidOpen abstract fun onTextDocumentDidOpen(doc: TextDocumentDidOpenParams ): PublishDiagnosticsParams onTextDocumentDocumentSymbol abstract fun onTextDocumentDocumentSymbol(doc: TextDocumentSymbolParams ): LSPDiagnostic Inheritors \u00b6 Name Summary ServerImpl class ServerImpl : LSPDelegate","title":"LSPDelegate - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-delegate/#lspdelegate","text":"interface LSPDelegate","title":"LSPDelegate"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-delegate/#functions","text":"Name Summary onHover abstract fun onHover(hover: HoverParams ): HoverResponse ? onInitialize abstract fun onInitialize(capabilities: LSPInitializeParams ): LSPInitializeServerResult onInitialized abstract fun onInitialized(): Unit onShutdown abstract fun onShutdown(): Unit onTextDocumentCompletion abstract fun onTextDocumentCompletion(documentCompletionParams: TextDocumentCompletionParams ): LSPCompletionList onTextDocumentDidChange abstract fun onTextDocumentDidChange(doc: TextDocumentDidChangeParams ): PublishDiagnosticsParams onTextDocumentDidOpen abstract fun onTextDocumentDidOpen(doc: TextDocumentDidOpenParams ): PublishDiagnosticsParams onTextDocumentDocumentSymbol abstract fun onTextDocumentDocumentSymbol(doc: TextDocumentSymbolParams ): LSPDiagnostic","title":"Functions"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-delegate/#inheritors","text":"Name Summary ServerImpl class ServerImpl : LSPDelegate","title":"Inheritors"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-delegate/on-hover/","text":"lsp / org.pinelang.lsp.lsp / LSPDelegate / onHover onHover \u00b6 abstract fun onHover(hover: HoverParams ): HoverResponse ?","title":"onHover - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-delegate/on-hover/#onhover","text":"abstract fun onHover(hover: HoverParams ): HoverResponse ?","title":"onHover"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-delegate/on-initialize/","text":"lsp / org.pinelang.lsp.lsp / LSPDelegate / onInitialize onInitialize \u00b6 abstract fun onInitialize(capabilities: LSPInitializeParams ): LSPInitializeServerResult","title":"onInitialize - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-delegate/on-initialize/#oninitialize","text":"abstract fun onInitialize(capabilities: LSPInitializeParams ): LSPInitializeServerResult","title":"onInitialize"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-delegate/on-initialized/","text":"lsp / org.pinelang.lsp.lsp / LSPDelegate / onInitialized onInitialized \u00b6 abstract fun onInitialized(): Unit","title":"onInitialized - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-delegate/on-initialized/#oninitialized","text":"abstract fun onInitialized(): Unit","title":"onInitialized"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-delegate/on-shutdown/","text":"lsp / org.pinelang.lsp.lsp / LSPDelegate / onShutdown onShutdown \u00b6 abstract fun onShutdown(): Unit","title":"onShutdown - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-delegate/on-shutdown/#onshutdown","text":"abstract fun onShutdown(): Unit","title":"onShutdown"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-delegate/on-text-document-completion/","text":"lsp / org.pinelang.lsp.lsp / LSPDelegate / onTextDocumentCompletion onTextDocumentCompletion \u00b6 abstract fun onTextDocumentCompletion(documentCompletionParams: TextDocumentCompletionParams ): LSPCompletionList","title":"onTextDocumentCompletion - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-delegate/on-text-document-completion/#ontextdocumentcompletion","text":"abstract fun onTextDocumentCompletion(documentCompletionParams: TextDocumentCompletionParams ): LSPCompletionList","title":"onTextDocumentCompletion"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-delegate/on-text-document-did-change/","text":"lsp / org.pinelang.lsp.lsp / LSPDelegate / onTextDocumentDidChange onTextDocumentDidChange \u00b6 abstract fun onTextDocumentDidChange(doc: TextDocumentDidChangeParams ): PublishDiagnosticsParams","title":"onTextDocumentDidChange - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-delegate/on-text-document-did-change/#ontextdocumentdidchange","text":"abstract fun onTextDocumentDidChange(doc: TextDocumentDidChangeParams ): PublishDiagnosticsParams","title":"onTextDocumentDidChange"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-delegate/on-text-document-did-open/","text":"lsp / org.pinelang.lsp.lsp / LSPDelegate / onTextDocumentDidOpen onTextDocumentDidOpen \u00b6 abstract fun onTextDocumentDidOpen(doc: TextDocumentDidOpenParams ): PublishDiagnosticsParams","title":"onTextDocumentDidOpen - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-delegate/on-text-document-did-open/#ontextdocumentdidopen","text":"abstract fun onTextDocumentDidOpen(doc: TextDocumentDidOpenParams ): PublishDiagnosticsParams","title":"onTextDocumentDidOpen"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-delegate/on-text-document-document-symbol/","text":"lsp / org.pinelang.lsp.lsp / LSPDelegate / onTextDocumentDocumentSymbol onTextDocumentDocumentSymbol \u00b6 abstract fun onTextDocumentDocumentSymbol(doc: TextDocumentSymbolParams ): LSPDiagnostic","title":"onTextDocumentDocumentSymbol - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-delegate/on-text-document-document-symbol/#ontextdocumentdocumentsymbol","text":"abstract fun onTextDocumentDocumentSymbol(doc: TextDocumentSymbolParams ): LSPDiagnostic","title":"onTextDocumentDocumentSymbol"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-method/","text":"lsp / org.pinelang.lsp.lsp / LSPMethod LSPMethod \u00b6 enum class LSPMethod Enum Values \u00b6 Name Summary Ignore Initialize Initialized TextDocumentDidOpen TextDocumentDidChange TextDocumentDocumentSymbol TextDocumentCompletion Hover Shutdown PublishDiagnotics Properties \u00b6 Name Summary method val method: String paramType val paramType: Class <*> Companion Object Functions \u00b6 Name Summary fromMethod fun fromMethod(method: String ): LSPMethod","title":"LSPMethod - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-method/#lspmethod","text":"enum class LSPMethod","title":"LSPMethod"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-method/#enum-values","text":"Name Summary Ignore Initialize Initialized TextDocumentDidOpen TextDocumentDidChange TextDocumentDocumentSymbol TextDocumentCompletion Hover Shutdown PublishDiagnotics","title":"Enum Values"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-method/#properties","text":"Name Summary method val method: String paramType val paramType: Class <*>","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-method/#companion-object-functions","text":"Name Summary fromMethod fun fromMethod(method: String ): LSPMethod","title":"Companion Object Functions"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-method/-hover/","text":"lsp / org.pinelang.lsp.lsp / LSPMethod / Hover Hover \u00b6 Hover","title":"Hover - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-method/-hover/#hover","text":"Hover","title":"Hover"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-method/-ignore/","text":"lsp / org.pinelang.lsp.lsp / LSPMethod / Ignore Ignore \u00b6 Ignore","title":"Ignore - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-method/-ignore/#ignore","text":"Ignore","title":"Ignore"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-method/-initialize/","text":"lsp / org.pinelang.lsp.lsp / LSPMethod / Initialize Initialize \u00b6 Initialize","title":"Initialize - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-method/-initialize/#initialize","text":"Initialize","title":"Initialize"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-method/-initialized/","text":"lsp / org.pinelang.lsp.lsp / LSPMethod / Initialized Initialized \u00b6 Initialized","title":"Initialized - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-method/-initialized/#initialized","text":"Initialized","title":"Initialized"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-method/-publish-diagnotics/","text":"lsp / org.pinelang.lsp.lsp / LSPMethod / PublishDiagnotics PublishDiagnotics \u00b6 PublishDiagnotics","title":"PublishDiagnotics - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-method/-publish-diagnotics/#publishdiagnotics","text":"PublishDiagnotics","title":"PublishDiagnotics"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-method/-shutdown/","text":"lsp / org.pinelang.lsp.lsp / LSPMethod / Shutdown Shutdown \u00b6 Shutdown","title":"Shutdown - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-method/-shutdown/#shutdown","text":"Shutdown","title":"Shutdown"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-method/-text-document-completion/","text":"lsp / org.pinelang.lsp.lsp / LSPMethod / TextDocumentCompletion TextDocumentCompletion \u00b6 TextDocumentCompletion","title":"TextDocumentCompletion - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-method/-text-document-completion/#textdocumentcompletion","text":"TextDocumentCompletion","title":"TextDocumentCompletion"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-method/-text-document-did-change/","text":"lsp / org.pinelang.lsp.lsp / LSPMethod / TextDocumentDidChange TextDocumentDidChange \u00b6 TextDocumentDidChange","title":"TextDocumentDidChange - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-method/-text-document-did-change/#textdocumentdidchange","text":"TextDocumentDidChange","title":"TextDocumentDidChange"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-method/-text-document-did-open/","text":"lsp / org.pinelang.lsp.lsp / LSPMethod / TextDocumentDidOpen TextDocumentDidOpen \u00b6 TextDocumentDidOpen","title":"TextDocumentDidOpen - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-method/-text-document-did-open/#textdocumentdidopen","text":"TextDocumentDidOpen","title":"TextDocumentDidOpen"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-method/-text-document-document-symbol/","text":"lsp / org.pinelang.lsp.lsp / LSPMethod / TextDocumentDocumentSymbol TextDocumentDocumentSymbol \u00b6 TextDocumentDocumentSymbol","title":"TextDocumentDocumentSymbol - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-method/-text-document-document-symbol/#textdocumentdocumentsymbol","text":"TextDocumentDocumentSymbol","title":"TextDocumentDocumentSymbol"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-method/from-method/","text":"lsp / org.pinelang.lsp.lsp / LSPMethod / fromMethod fromMethod \u00b6 fun fromMethod(method: String ): LSPMethod","title":"fromMethod - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-method/from-method/#frommethod","text":"fun fromMethod(method: String ): LSPMethod","title":"fromMethod"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-method/method/","text":"lsp / org.pinelang.lsp.lsp / LSPMethod / method method \u00b6 val method: String","title":"method - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-method/method/#method","text":"val method: String","title":"method"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-method/param-type/","text":"lsp / org.pinelang.lsp.lsp / LSPMethod / paramType paramType \u00b6 val paramType: Class <*>","title":"paramType - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-method/param-type/#paramtype","text":"val paramType: Class <*>","title":"paramType"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-request-adapter/","text":"lsp / org.pinelang.lsp.lsp / LSPRequestAdapter LSPRequestAdapter \u00b6 class LSPRequestAdapter : JsonAdapter< JsonRPCRequest > Constructors \u00b6 Name Summary <init> LSPRequestAdapter() Functions \u00b6 Name Summary fromJson fun fromJson(reader: JsonReader): JsonRPCRequest ? toJson fun toJson(writer: JsonWriter, value: JsonRPCRequest ?): Unit","title":"LSPRequestAdapter - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-request-adapter/#lsprequestadapter","text":"class LSPRequestAdapter : JsonAdapter< JsonRPCRequest >","title":"LSPRequestAdapter"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-request-adapter/#constructors","text":"Name Summary <init> LSPRequestAdapter()","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-request-adapter/#functions","text":"Name Summary fromJson fun fromJson(reader: JsonReader): JsonRPCRequest ? toJson fun toJson(writer: JsonWriter, value: JsonRPCRequest ?): Unit","title":"Functions"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-request-adapter/-init-/","text":"lsp / org.pinelang.lsp.lsp / LSPRequestAdapter / <init> <init> \u00b6 LSPRequestAdapter()","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-request-adapter/-init-/#init","text":"LSPRequestAdapter()","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-request-adapter/from-json/","text":"lsp / org.pinelang.lsp.lsp / LSPRequestAdapter / fromJson fromJson \u00b6 fun fromJson(reader: JsonReader): JsonRPCRequest ?","title":"fromJson - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-request-adapter/from-json/#fromjson","text":"fun fromJson(reader: JsonReader): JsonRPCRequest ?","title":"fromJson"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-request-adapter/to-json/","text":"lsp / org.pinelang.lsp.lsp / LSPRequestAdapter / toJson toJson \u00b6 fun toJson(writer: JsonWriter, value: JsonRPCRequest ?): Unit","title":"toJson - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-request-adapter/to-json/#tojson","text":"fun toJson(writer: JsonWriter, value: JsonRPCRequest ?): Unit","title":"toJson"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-server/","text":"lsp / org.pinelang.lsp.lsp / LSPServer LSPServer \u00b6 class LSPServer Types \u00b6 Name Summary RpcJsonHandler inner class RpcJsonHandler : ChannelInboundHandlerAdapter RpcJsonState enum class RpcJsonState Constructors \u00b6 Name Summary <init> LSPServer(delegate: LSPDelegate ) Properties \u00b6 Name Summary channelFuture var channelFuture: ChannelFuture? group val group: EventLoopGroup Functions \u00b6 Name Summary startNettyServer fun startNettyServer(hostname: String = \"localhost\", port: Int = 2323): Unit stopServer fun stopServer(): Unit","title":"LSPServer - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-server/#lspserver","text":"class LSPServer","title":"LSPServer"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-server/#types","text":"Name Summary RpcJsonHandler inner class RpcJsonHandler : ChannelInboundHandlerAdapter RpcJsonState enum class RpcJsonState","title":"Types"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-server/#constructors","text":"Name Summary <init> LSPServer(delegate: LSPDelegate )","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-server/#properties","text":"Name Summary channelFuture var channelFuture: ChannelFuture? group val group: EventLoopGroup","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-server/#functions","text":"Name Summary startNettyServer fun startNettyServer(hostname: String = \"localhost\", port: Int = 2323): Unit stopServer fun stopServer(): Unit","title":"Functions"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-server/-init-/","text":"lsp / org.pinelang.lsp.lsp / LSPServer / <init> <init> \u00b6 LSPServer(delegate: LSPDelegate )","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-server/-init-/#init","text":"LSPServer(delegate: LSPDelegate )","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-server/channel-future/","text":"lsp / org.pinelang.lsp.lsp / LSPServer / channelFuture channelFuture \u00b6 var channelFuture: ChannelFuture?","title":"channelFuture - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-server/channel-future/#channelfuture","text":"var channelFuture: ChannelFuture?","title":"channelFuture"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-server/group/","text":"lsp / org.pinelang.lsp.lsp / LSPServer / group group \u00b6 val group: EventLoopGroup","title":"group - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-server/group/#group","text":"val group: EventLoopGroup","title":"group"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-server/start-netty-server/","text":"lsp / org.pinelang.lsp.lsp / LSPServer / startNettyServer startNettyServer \u00b6 fun startNettyServer(hostname: String = \"localhost\", port: Int = 2323): Unit","title":"startNettyServer - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-server/start-netty-server/#startnettyserver","text":"fun startNettyServer(hostname: String = \"localhost\", port: Int = 2323): Unit","title":"startNettyServer"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-server/stop-server/","text":"lsp / org.pinelang.lsp.lsp / LSPServer / stopServer stopServer \u00b6 fun stopServer(): Unit","title":"stopServer - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-server/stop-server/#stopserver","text":"fun stopServer(): Unit","title":"stopServer"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-server/-rpc-json-handler/","text":"lsp / org.pinelang.lsp.lsp / LSPServer / RpcJsonHandler RpcJsonHandler \u00b6 inner class RpcJsonHandler : ChannelInboundHandlerAdapter Constructors \u00b6 Name Summary <init> RpcJsonHandler() Functions \u00b6 Name Summary channelRead fun channelRead(ctx: ChannelHandlerContext, msg: Any ): Unit channelReadComplete fun channelReadComplete(ctx: ChannelHandlerContext): Unit exceptionCaught fun exceptionCaught(ctx: ChannelHandlerContext, cause: Throwable ): Unit","title":"RpcJsonHandler - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-server/-rpc-json-handler/#rpcjsonhandler","text":"inner class RpcJsonHandler : ChannelInboundHandlerAdapter","title":"RpcJsonHandler"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-server/-rpc-json-handler/#constructors","text":"Name Summary <init> RpcJsonHandler()","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-server/-rpc-json-handler/#functions","text":"Name Summary channelRead fun channelRead(ctx: ChannelHandlerContext, msg: Any ): Unit channelReadComplete fun channelReadComplete(ctx: ChannelHandlerContext): Unit exceptionCaught fun exceptionCaught(ctx: ChannelHandlerContext, cause: Throwable ): Unit","title":"Functions"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-server/-rpc-json-handler/-init-/","text":"lsp / org.pinelang.lsp.lsp / LSPServer / RpcJsonHandler / <init> <init> \u00b6 RpcJsonHandler()","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-server/-rpc-json-handler/-init-/#init","text":"RpcJsonHandler()","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-server/-rpc-json-handler/channel-read-complete/","text":"lsp / org.pinelang.lsp.lsp / LSPServer / RpcJsonHandler / channelReadComplete channelReadComplete \u00b6 fun channelReadComplete(ctx: ChannelHandlerContext): Unit","title":"channelReadComplete - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-server/-rpc-json-handler/channel-read-complete/#channelreadcomplete","text":"fun channelReadComplete(ctx: ChannelHandlerContext): Unit","title":"channelReadComplete"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-server/-rpc-json-handler/channel-read/","text":"lsp / org.pinelang.lsp.lsp / LSPServer / RpcJsonHandler / channelRead channelRead \u00b6 fun channelRead(ctx: ChannelHandlerContext, msg: Any ): Unit","title":"channelRead - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-server/-rpc-json-handler/channel-read/#channelread","text":"fun channelRead(ctx: ChannelHandlerContext, msg: Any ): Unit","title":"channelRead"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-server/-rpc-json-handler/exception-caught/","text":"lsp / org.pinelang.lsp.lsp / LSPServer / RpcJsonHandler / exceptionCaught exceptionCaught \u00b6 fun exceptionCaught(ctx: ChannelHandlerContext, cause: Throwable ): Unit","title":"exceptionCaught - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-server/-rpc-json-handler/exception-caught/#exceptioncaught","text":"fun exceptionCaught(ctx: ChannelHandlerContext, cause: Throwable ): Unit","title":"exceptionCaught"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-server/-rpc-json-state/","text":"lsp / org.pinelang.lsp.lsp / LSPServer / RpcJsonState RpcJsonState \u00b6 enum class RpcJsonState Enum Values \u00b6 Name Summary Header Empty Request","title":"RpcJsonState - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-server/-rpc-json-state/#rpcjsonstate","text":"enum class RpcJsonState","title":"RpcJsonState"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-server/-rpc-json-state/#enum-values","text":"Name Summary Header Empty Request","title":"Enum Values"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-server/-rpc-json-state/-empty/","text":"lsp / org.pinelang.lsp.lsp / LSPServer / RpcJsonState / Empty Empty \u00b6 Empty","title":"Empty - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-server/-rpc-json-state/-empty/#empty","text":"Empty","title":"Empty"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-server/-rpc-json-state/-header/","text":"lsp / org.pinelang.lsp.lsp / LSPServer / RpcJsonState / Header Header \u00b6 Header","title":"Header - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-server/-rpc-json-state/-header/#header","text":"Header","title":"Header"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-server/-rpc-json-state/-request/","text":"lsp / org.pinelang.lsp.lsp / LSPServer / RpcJsonState / Request Request \u00b6 Request","title":"Request - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-l-s-p-server/-rpc-json-state/-request/#request","text":"Request","title":"Request"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-server-impl/","text":"lsp / org.pinelang.lsp.lsp / ServerImpl ServerImpl \u00b6 class ServerImpl : LSPDelegate Constructors \u00b6 Name Summary <init> ServerImpl(pineEngine: PineEngine) Properties \u00b6 Name Summary docItem var docItem: TextDocumentItem ? textChangeListener var textChangeListener: (( String ) -> Unit )? Functions \u00b6 Name Summary onHover fun onHover(hover: HoverParams ): HoverResponse ? onInitialize fun onInitialize(capabilities: LSPInitializeParams ): LSPInitializeServerResult onInitialized fun onInitialized(): Unit onShutdown fun onShutdown(): Unit onTextDocumentCompletion fun onTextDocumentCompletion(documentCompletionParams: TextDocumentCompletionParams ): LSPCompletionList onTextDocumentDidChange fun onTextDocumentDidChange(doc: TextDocumentDidChangeParams ): PublishDiagnosticsParams onTextDocumentDidOpen fun onTextDocumentDidOpen(doc: TextDocumentDidOpenParams ): PublishDiagnosticsParams onTextDocumentDocumentSymbol fun onTextDocumentDocumentSymbol(doc: TextDocumentSymbolParams ): LSPDiagnostic","title":"ServerImpl - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-server-impl/#serverimpl","text":"class ServerImpl : LSPDelegate","title":"ServerImpl"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-server-impl/#constructors","text":"Name Summary <init> ServerImpl(pineEngine: PineEngine)","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-server-impl/#properties","text":"Name Summary docItem var docItem: TextDocumentItem ? textChangeListener var textChangeListener: (( String ) -> Unit )?","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-server-impl/#functions","text":"Name Summary onHover fun onHover(hover: HoverParams ): HoverResponse ? onInitialize fun onInitialize(capabilities: LSPInitializeParams ): LSPInitializeServerResult onInitialized fun onInitialized(): Unit onShutdown fun onShutdown(): Unit onTextDocumentCompletion fun onTextDocumentCompletion(documentCompletionParams: TextDocumentCompletionParams ): LSPCompletionList onTextDocumentDidChange fun onTextDocumentDidChange(doc: TextDocumentDidChangeParams ): PublishDiagnosticsParams onTextDocumentDidOpen fun onTextDocumentDidOpen(doc: TextDocumentDidOpenParams ): PublishDiagnosticsParams onTextDocumentDocumentSymbol fun onTextDocumentDocumentSymbol(doc: TextDocumentSymbolParams ): LSPDiagnostic","title":"Functions"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-server-impl/-init-/","text":"lsp / org.pinelang.lsp.lsp / ServerImpl / <init> <init> \u00b6 ServerImpl(pineEngine: PineEngine)","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp/-server-impl/-init-/#init","text":"ServerImpl(pineEngine: PineEngine)","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-server-impl/doc-item/","text":"lsp / org.pinelang.lsp.lsp / ServerImpl / docItem docItem \u00b6 var docItem: TextDocumentItem ?","title":"docItem - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-server-impl/doc-item/#docitem","text":"var docItem: TextDocumentItem ?","title":"docItem"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-server-impl/on-hover/","text":"lsp / org.pinelang.lsp.lsp / ServerImpl / onHover onHover \u00b6 fun onHover(hover: HoverParams ): HoverResponse ?","title":"onHover - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-server-impl/on-hover/#onhover","text":"fun onHover(hover: HoverParams ): HoverResponse ?","title":"onHover"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-server-impl/on-initialize/","text":"lsp / org.pinelang.lsp.lsp / ServerImpl / onInitialize onInitialize \u00b6 fun onInitialize(capabilities: LSPInitializeParams ): LSPInitializeServerResult","title":"onInitialize - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-server-impl/on-initialize/#oninitialize","text":"fun onInitialize(capabilities: LSPInitializeParams ): LSPInitializeServerResult","title":"onInitialize"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-server-impl/on-initialized/","text":"lsp / org.pinelang.lsp.lsp / ServerImpl / onInitialized onInitialized \u00b6 fun onInitialized(): Unit","title":"onInitialized - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-server-impl/on-initialized/#oninitialized","text":"fun onInitialized(): Unit","title":"onInitialized"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-server-impl/on-shutdown/","text":"lsp / org.pinelang.lsp.lsp / ServerImpl / onShutdown onShutdown \u00b6 fun onShutdown(): Unit","title":"onShutdown - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-server-impl/on-shutdown/#onshutdown","text":"fun onShutdown(): Unit","title":"onShutdown"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-server-impl/on-text-document-completion/","text":"lsp / org.pinelang.lsp.lsp / ServerImpl / onTextDocumentCompletion onTextDocumentCompletion \u00b6 fun onTextDocumentCompletion(documentCompletionParams: TextDocumentCompletionParams ): LSPCompletionList","title":"onTextDocumentCompletion - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-server-impl/on-text-document-completion/#ontextdocumentcompletion","text":"fun onTextDocumentCompletion(documentCompletionParams: TextDocumentCompletionParams ): LSPCompletionList","title":"onTextDocumentCompletion"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-server-impl/on-text-document-did-change/","text":"lsp / org.pinelang.lsp.lsp / ServerImpl / onTextDocumentDidChange onTextDocumentDidChange \u00b6 fun onTextDocumentDidChange(doc: TextDocumentDidChangeParams ): PublishDiagnosticsParams","title":"onTextDocumentDidChange - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-server-impl/on-text-document-did-change/#ontextdocumentdidchange","text":"fun onTextDocumentDidChange(doc: TextDocumentDidChangeParams ): PublishDiagnosticsParams","title":"onTextDocumentDidChange"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-server-impl/on-text-document-did-open/","text":"lsp / org.pinelang.lsp.lsp / ServerImpl / onTextDocumentDidOpen onTextDocumentDidOpen \u00b6 fun onTextDocumentDidOpen(doc: TextDocumentDidOpenParams ): PublishDiagnosticsParams","title":"onTextDocumentDidOpen - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-server-impl/on-text-document-did-open/#ontextdocumentdidopen","text":"fun onTextDocumentDidOpen(doc: TextDocumentDidOpenParams ): PublishDiagnosticsParams","title":"onTextDocumentDidOpen"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-server-impl/on-text-document-document-symbol/","text":"lsp / org.pinelang.lsp.lsp / ServerImpl / onTextDocumentDocumentSymbol onTextDocumentDocumentSymbol \u00b6 fun onTextDocumentDocumentSymbol(doc: TextDocumentSymbolParams ): LSPDiagnostic","title":"onTextDocumentDocumentSymbol - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-server-impl/on-text-document-document-symbol/#ontextdocumentdocumentsymbol","text":"fun onTextDocumentDocumentSymbol(doc: TextDocumentSymbolParams ): LSPDiagnostic","title":"onTextDocumentDocumentSymbol"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-server-impl/text-change-listener/","text":"lsp / org.pinelang.lsp.lsp / ServerImpl / textChangeListener textChangeListener \u00b6 var textChangeListener: (( String ) -> Unit )?","title":"textChangeListener - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp/-server-impl/text-change-listener/#textchangelistener","text":"var textChangeListener: (( String ) -> Unit )?","title":"textChangeListener"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/","text":"lsp / org.pinelang.lsp.lsp.models Package org.pinelang.lsp.lsp.models \u00b6 Types \u00b6 Name Summary CodeActionClientCapabilities data class CodeActionClientCapabilities CodeActionLiteralSupport data class CodeActionLiteralSupport Command data class Command CompletionClientCapabilities data class CompletionClientCapabilities CompletionContext data class CompletionContext CompletionItem data class CompletionItem CompletionItemKind The kind of a completion entry. enum class CompletionItemKind CompletionProvider data class CompletionProvider ConfigurationClientCapabilities data class ConfigurationClientCapabilities DeclarationClientCapabilities data class DeclarationClientCapabilities DiagnosticRelatedInformation data class DiagnosticRelatedInformation DocumentLinkClientCapabilities data class DocumentLinkClientCapabilities DocumentSymbol Represents programming constructs like variables, classes, interfaces etc. that appear in a document. Document symbols can be hierarchical and they have two ranges: one that encloses its definition and one that points to its most interesting range, e.g. the range of an identifier. data class DocumentSymbol DocumentSymbolClientCapabilities data class DocumentSymbolClientCapabilities ErrorCode enum class ErrorCode FoldingRangeClientCapabilities data class FoldingRangeClientCapabilities HoverClientCapabilities data class HoverClientCapabilities HoverParams data class HoverParams HoverResponse The result of a hover request. data class HoverResponse JsonRPCClientInfo data class JsonRPCClientInfo JsonRPCHeader data class JsonRPCHeader JsonRPCRequest data class JsonRPCRequest JsonRPCServerCapabilitiesImpl data class JsonRPCServerCapabilitiesImpl Location data class Location LSPClientCapabilities data class LSPClientCapabilities LSPClientInfo data class LSPClientInfo LSPCompletionItem data class LSPCompletionItem LSPCompletionList Represents a collection of completion items to be presented in the editor. data class LSPCompletionList LSPDiagnostic data class LSPDiagnostic LSPEmptyParams class LSPEmptyParams LSPFailureHandling enum class LSPFailureHandling LSPInitializeParams data class LSPInitializeParams LSPInitializeServerResult data class LSPInitializeServerResult LSPNotification data class LSPNotification LSPResourceOperation enum class LSPResourceOperation LSPResponse data class LSPResponse LSPServerInfo data class LSPServerInfo MarkupContent data class MarkupContent ParameterInformation data class ParameterInformation Position data class Position PublishDiagnosticsClientCapabilities data class PublishDiagnosticsClientCapabilities PublishDiagnosticsParams data class PublishDiagnosticsParams Range Selection range for a document. End position is exclusive data class Range RenameClientCapabilities data class RenameClientCapabilities ResponseError data class ResponseError SignatureHelpClientCapabilities Client Capabilities for a SignatureHelpRequest . data class SignatureHelpClientCapabilities SignatureInformation data class SignatureInformation SymbolInformation Represents information about programming constructs like variables, classes, interfaces etc. data class SymbolInformation SymbolKind enum class SymbolKind TextDocumentClientCapabilities Text document specific client capabilities. data class TextDocumentClientCapabilities TextDocumentCompletionParams data class TextDocumentCompletionParams TextDocumentContentChangeEvent data class TextDocumentContentChangeEvent TextDocumentDidChangeParams data class TextDocumentDidChangeParams TextDocumentDidOpenParams data class TextDocumentDidOpenParams TextDocumentIdentifier data class TextDocumentIdentifier TextDocumentItem data class TextDocumentItem TextDocumentSymbolParams data class TextDocumentSymbolParams TextDocumentSync data class TextDocumentSync TextDocumentSyncClientCapabilities data class TextDocumentSyncClientCapabilities TextDocumentSyncKind enum class TextDocumentSyncKind TextDocumentSyncKindAdapter class TextDocumentSyncKindAdapter : JsonAdapter< TextDocumentSyncKind > TextEdit data class TextEdit ValueSet data class ValueSet VersionedTextDocumentIdentifier data class VersionedTextDocumentIdentifier WorkspaceClientCapabilities data class WorkspaceClientCapabilities WorkspaceEditClientCapabilities data class WorkspaceEditClientCapabilities WorkspaceFoldersCapabilities data class WorkspaceFoldersCapabilities WorkspaceFoldersServerCapabilities data class WorkspaceFoldersServerCapabilities WorkspaceSymbolClientCapabilities data class WorkspaceSymbolClientCapabilities Extensions for External Classes \u00b6 Name Summary kotlin.String Functions \u00b6 Name Summary jsonRpc fun jsonRpc(data: String ): String","title":"Package org.pinelang.lsp.lsp.models - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/#package-orgpinelanglsplspmodels","text":"","title":"Package org.pinelang.lsp.lsp.models"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/#types","text":"Name Summary CodeActionClientCapabilities data class CodeActionClientCapabilities CodeActionLiteralSupport data class CodeActionLiteralSupport Command data class Command CompletionClientCapabilities data class CompletionClientCapabilities CompletionContext data class CompletionContext CompletionItem data class CompletionItem CompletionItemKind The kind of a completion entry. enum class CompletionItemKind CompletionProvider data class CompletionProvider ConfigurationClientCapabilities data class ConfigurationClientCapabilities DeclarationClientCapabilities data class DeclarationClientCapabilities DiagnosticRelatedInformation data class DiagnosticRelatedInformation DocumentLinkClientCapabilities data class DocumentLinkClientCapabilities DocumentSymbol Represents programming constructs like variables, classes, interfaces etc. that appear in a document. Document symbols can be hierarchical and they have two ranges: one that encloses its definition and one that points to its most interesting range, e.g. the range of an identifier. data class DocumentSymbol DocumentSymbolClientCapabilities data class DocumentSymbolClientCapabilities ErrorCode enum class ErrorCode FoldingRangeClientCapabilities data class FoldingRangeClientCapabilities HoverClientCapabilities data class HoverClientCapabilities HoverParams data class HoverParams HoverResponse The result of a hover request. data class HoverResponse JsonRPCClientInfo data class JsonRPCClientInfo JsonRPCHeader data class JsonRPCHeader JsonRPCRequest data class JsonRPCRequest JsonRPCServerCapabilitiesImpl data class JsonRPCServerCapabilitiesImpl Location data class Location LSPClientCapabilities data class LSPClientCapabilities LSPClientInfo data class LSPClientInfo LSPCompletionItem data class LSPCompletionItem LSPCompletionList Represents a collection of completion items to be presented in the editor. data class LSPCompletionList LSPDiagnostic data class LSPDiagnostic LSPEmptyParams class LSPEmptyParams LSPFailureHandling enum class LSPFailureHandling LSPInitializeParams data class LSPInitializeParams LSPInitializeServerResult data class LSPInitializeServerResult LSPNotification data class LSPNotification LSPResourceOperation enum class LSPResourceOperation LSPResponse data class LSPResponse LSPServerInfo data class LSPServerInfo MarkupContent data class MarkupContent ParameterInformation data class ParameterInformation Position data class Position PublishDiagnosticsClientCapabilities data class PublishDiagnosticsClientCapabilities PublishDiagnosticsParams data class PublishDiagnosticsParams Range Selection range for a document. End position is exclusive data class Range RenameClientCapabilities data class RenameClientCapabilities ResponseError data class ResponseError SignatureHelpClientCapabilities Client Capabilities for a SignatureHelpRequest . data class SignatureHelpClientCapabilities SignatureInformation data class SignatureInformation SymbolInformation Represents information about programming constructs like variables, classes, interfaces etc. data class SymbolInformation SymbolKind enum class SymbolKind TextDocumentClientCapabilities Text document specific client capabilities. data class TextDocumentClientCapabilities TextDocumentCompletionParams data class TextDocumentCompletionParams TextDocumentContentChangeEvent data class TextDocumentContentChangeEvent TextDocumentDidChangeParams data class TextDocumentDidChangeParams TextDocumentDidOpenParams data class TextDocumentDidOpenParams TextDocumentIdentifier data class TextDocumentIdentifier TextDocumentItem data class TextDocumentItem TextDocumentSymbolParams data class TextDocumentSymbolParams TextDocumentSync data class TextDocumentSync TextDocumentSyncClientCapabilities data class TextDocumentSyncClientCapabilities TextDocumentSyncKind enum class TextDocumentSyncKind TextDocumentSyncKindAdapter class TextDocumentSyncKindAdapter : JsonAdapter< TextDocumentSyncKind > TextEdit data class TextEdit ValueSet data class ValueSet VersionedTextDocumentIdentifier data class VersionedTextDocumentIdentifier WorkspaceClientCapabilities data class WorkspaceClientCapabilities WorkspaceEditClientCapabilities data class WorkspaceEditClientCapabilities WorkspaceFoldersCapabilities data class WorkspaceFoldersCapabilities WorkspaceFoldersServerCapabilities data class WorkspaceFoldersServerCapabilities WorkspaceSymbolClientCapabilities data class WorkspaceSymbolClientCapabilities","title":"Types"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/#extensions-for-external-classes","text":"Name Summary kotlin.String","title":"Extensions for External Classes"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/#functions","text":"Name Summary jsonRpc fun jsonRpc(data: String ): String","title":"Functions"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/json-rpc/","text":"lsp / org.pinelang.lsp.lsp.models / jsonRpc jsonRpc \u00b6 fun jsonRpc(data: String ): String","title":"jsonRpc - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/json-rpc/#jsonrpc","text":"fun jsonRpc(data: String ): String","title":"jsonRpc"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-code-action-client-capabilities/","text":"lsp / org.pinelang.lsp.lsp.models / CodeActionClientCapabilities CodeActionClientCapabilities \u00b6 data class CodeActionClientCapabilities Constructors \u00b6 Name Summary <init> CodeActionClientCapabilities(dynamicRegistration: Boolean ?, codeActionLiteralSupport: CodeActionLiteralSupport ?, isPreferredSupport: Boolean ?) Properties \u00b6 Name Summary codeActionLiteralSupport The client support code action literals as a valid response of the textDocument/codeAction request. val codeActionLiteralSupport: CodeActionLiteralSupport ? dynamicRegistration Whether code action supports dynamic registration. val dynamicRegistration: Boolean ? isPreferredSupport Whether code action supports the isPreferred property. val isPreferredSupport: Boolean ?","title":"CodeActionClientCapabilities - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-code-action-client-capabilities/#codeactionclientcapabilities","text":"data class CodeActionClientCapabilities","title":"CodeActionClientCapabilities"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-code-action-client-capabilities/#constructors","text":"Name Summary <init> CodeActionClientCapabilities(dynamicRegistration: Boolean ?, codeActionLiteralSupport: CodeActionLiteralSupport ?, isPreferredSupport: Boolean ?)","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-code-action-client-capabilities/#properties","text":"Name Summary codeActionLiteralSupport The client support code action literals as a valid response of the textDocument/codeAction request. val codeActionLiteralSupport: CodeActionLiteralSupport ? dynamicRegistration Whether code action supports dynamic registration. val dynamicRegistration: Boolean ? isPreferredSupport Whether code action supports the isPreferred property. val isPreferredSupport: Boolean ?","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-code-action-client-capabilities/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / CodeActionClientCapabilities / <init> <init> \u00b6 CodeActionClientCapabilities(dynamicRegistration: Boolean ?, codeActionLiteralSupport: CodeActionLiteralSupport ?, isPreferredSupport: Boolean ?)","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-code-action-client-capabilities/-init-/#init","text":"CodeActionClientCapabilities(dynamicRegistration: Boolean ?, codeActionLiteralSupport: CodeActionLiteralSupport ?, isPreferredSupport: Boolean ?)","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-code-action-client-capabilities/code-action-literal-support/","text":"lsp / org.pinelang.lsp.lsp.models / CodeActionClientCapabilities / codeActionLiteralSupport codeActionLiteralSupport \u00b6 val codeActionLiteralSupport: CodeActionLiteralSupport ? The client support code action literals as a valid response of the textDocument/codeAction request. Since 3.8.0","title":"codeActionLiteralSupport - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-code-action-client-capabilities/code-action-literal-support/#codeactionliteralsupport","text":"val codeActionLiteralSupport: CodeActionLiteralSupport ? The client support code action literals as a valid response of the textDocument/codeAction request. Since 3.8.0","title":"codeActionLiteralSupport"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-code-action-client-capabilities/dynamic-registration/","text":"lsp / org.pinelang.lsp.lsp.models / CodeActionClientCapabilities / dynamicRegistration dynamicRegistration \u00b6 val dynamicRegistration: Boolean ? Whether code action supports dynamic registration.","title":"dynamicRegistration - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-code-action-client-capabilities/dynamic-registration/#dynamicregistration","text":"val dynamicRegistration: Boolean ? Whether code action supports dynamic registration.","title":"dynamicRegistration"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-code-action-client-capabilities/is-preferred-support/","text":"lsp / org.pinelang.lsp.lsp.models / CodeActionClientCapabilities / isPreferredSupport isPreferredSupport \u00b6 val isPreferredSupport: Boolean ? Whether code action supports the isPreferred property. Since 3.15.0","title":"isPreferredSupport - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-code-action-client-capabilities/is-preferred-support/#ispreferredsupport","text":"val isPreferredSupport: Boolean ? Whether code action supports the isPreferred property. Since 3.15.0","title":"isPreferredSupport"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-code-action-literal-support/","text":"lsp / org.pinelang.lsp.lsp.models / CodeActionLiteralSupport CodeActionLiteralSupport \u00b6 data class CodeActionLiteralSupport Constructors \u00b6 Name Summary <init> CodeActionLiteralSupport(codeActionKind: Any ?) Properties \u00b6 Name Summary codeActionKind The code action kind is support with the following value set. val codeActionKind: Any ?","title":"CodeActionLiteralSupport - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-code-action-literal-support/#codeactionliteralsupport","text":"data class CodeActionLiteralSupport","title":"CodeActionLiteralSupport"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-code-action-literal-support/#constructors","text":"Name Summary <init> CodeActionLiteralSupport(codeActionKind: Any ?)","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-code-action-literal-support/#properties","text":"Name Summary codeActionKind The code action kind is support with the following value set. val codeActionKind: Any ?","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-code-action-literal-support/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / CodeActionLiteralSupport / <init> <init> \u00b6 CodeActionLiteralSupport(codeActionKind: Any ?)","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-code-action-literal-support/-init-/#init","text":"CodeActionLiteralSupport(codeActionKind: Any ?)","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-code-action-literal-support/code-action-kind/","text":"lsp / org.pinelang.lsp.lsp.models / CodeActionLiteralSupport / codeActionKind codeActionKind \u00b6 val codeActionKind: Any ? The code action kind is support with the following value set.","title":"codeActionKind - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-code-action-literal-support/code-action-kind/#codeactionkind","text":"val codeActionKind: Any ? The code action kind is support with the following value set.","title":"codeActionKind"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-command/","text":"lsp / org.pinelang.lsp.lsp.models / Command Command \u00b6 data class Command Constructors \u00b6 Name Summary <init> Command(title: String , command: String , arguments: List < Any >?) Properties \u00b6 Name Summary arguments Arguments that the command handler should be invoked with. val arguments: List < Any >? command The identifier of the actual command handler. val command: String title Title of the command, like save . val title: String","title":"Command - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-command/#command","text":"data class Command","title":"Command"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-command/#constructors","text":"Name Summary <init> Command(title: String , command: String , arguments: List < Any >?)","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-command/#properties","text":"Name Summary arguments Arguments that the command handler should be invoked with. val arguments: List < Any >? command The identifier of the actual command handler. val command: String title Title of the command, like save . val title: String","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-command/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / Command / <init> <init> \u00b6 Command(title: String , command: String , arguments: List < Any >?)","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-command/-init-/#init","text":"Command(title: String , command: String , arguments: List < Any >?)","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-command/arguments/","text":"lsp / org.pinelang.lsp.lsp.models / Command / arguments arguments \u00b6 val arguments: List < Any >? Arguments that the command handler should be invoked with.","title":"arguments - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-command/arguments/#arguments","text":"val arguments: List < Any >? Arguments that the command handler should be invoked with.","title":"arguments"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-command/command/","text":"lsp / org.pinelang.lsp.lsp.models / Command / command command \u00b6 val command: String The identifier of the actual command handler.","title":"command - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-command/command/#command","text":"val command: String The identifier of the actual command handler.","title":"command"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-command/title/","text":"lsp / org.pinelang.lsp.lsp.models / Command / title title \u00b6 val title: String Title of the command, like save .","title":"title - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-command/title/#title","text":"val title: String Title of the command, like save .","title":"title"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-client-capabilities/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionClientCapabilities CompletionClientCapabilities \u00b6 data class CompletionClientCapabilities Constructors \u00b6 Name Summary <init> CompletionClientCapabilities(dynamicRegistration: Boolean ?, completionItem: LSPCompletionItem ?, completionItemKind: ValueSet ?, contextSupport: Boolean ?) Properties \u00b6 Name Summary completionItem The client supports the following CompletionItem specific capabilities. val completionItem: LSPCompletionItem ? completionItemKind val completionItemKind: ValueSet ? contextSupport The client supports to send additional context information for a textDocument/completion requestion. val contextSupport: Boolean ? dynamicRegistration Whether completion supports dynamic registration. val dynamicRegistration: Boolean ?","title":"CompletionClientCapabilities - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-client-capabilities/#completionclientcapabilities","text":"data class CompletionClientCapabilities","title":"CompletionClientCapabilities"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-client-capabilities/#constructors","text":"Name Summary <init> CompletionClientCapabilities(dynamicRegistration: Boolean ?, completionItem: LSPCompletionItem ?, completionItemKind: ValueSet ?, contextSupport: Boolean ?)","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-client-capabilities/#properties","text":"Name Summary completionItem The client supports the following CompletionItem specific capabilities. val completionItem: LSPCompletionItem ? completionItemKind val completionItemKind: ValueSet ? contextSupport The client supports to send additional context information for a textDocument/completion requestion. val contextSupport: Boolean ? dynamicRegistration Whether completion supports dynamic registration. val dynamicRegistration: Boolean ?","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-client-capabilities/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionClientCapabilities / <init> <init> \u00b6 CompletionClientCapabilities(dynamicRegistration: Boolean ?, completionItem: LSPCompletionItem ?, completionItemKind: ValueSet ?, contextSupport: Boolean ?)","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-client-capabilities/-init-/#init","text":"CompletionClientCapabilities(dynamicRegistration: Boolean ?, completionItem: LSPCompletionItem ?, completionItemKind: ValueSet ?, contextSupport: Boolean ?)","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-client-capabilities/completion-item-kind/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionClientCapabilities / completionItemKind completionItemKind \u00b6 val completionItemKind: ValueSet ?","title":"completionItemKind - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-client-capabilities/completion-item-kind/#completionitemkind","text":"val completionItemKind: ValueSet ?","title":"completionItemKind"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-client-capabilities/completion-item/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionClientCapabilities / completionItem completionItem \u00b6 val completionItem: LSPCompletionItem ? The client supports the following CompletionItem specific capabilities.","title":"completionItem - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-client-capabilities/completion-item/#completionitem","text":"val completionItem: LSPCompletionItem ? The client supports the following CompletionItem specific capabilities.","title":"completionItem"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-client-capabilities/context-support/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionClientCapabilities / contextSupport contextSupport \u00b6 val contextSupport: Boolean ? The client supports to send additional context information for a textDocument/completion requestion.","title":"contextSupport - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-client-capabilities/context-support/#contextsupport","text":"val contextSupport: Boolean ? The client supports to send additional context information for a textDocument/completion requestion.","title":"contextSupport"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-client-capabilities/dynamic-registration/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionClientCapabilities / dynamicRegistration dynamicRegistration \u00b6 val dynamicRegistration: Boolean ? Whether completion supports dynamic registration.","title":"dynamicRegistration - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-client-capabilities/dynamic-registration/#dynamicregistration","text":"val dynamicRegistration: Boolean ? Whether completion supports dynamic registration.","title":"dynamicRegistration"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-context/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionContext CompletionContext \u00b6 data class CompletionContext Constructors \u00b6 Name Summary <init> CompletionContext(triggerKind: Int , triggerCharacter: String ?) Properties \u00b6 Name Summary triggerCharacter The trigger character (a single character) that has trigger code complete. Is undefined if triggerKind !== CompletionTriggerKind.TriggerCharacter``val triggerCharacter: String ? triggerKind How the completion was triggered. 1: Completion was triggered by typing an identifier (24x7 code complete), manual invocation (e.g Ctrl+Space) or via API. 2: Completion was triggered by a trigger character specified by the triggerCharacters properties of the CompletionRegistrationOptions . 3: Completion was re-triggered as current completion list is incomplete val triggerKind: Int","title":"CompletionContext - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-context/#completioncontext","text":"data class CompletionContext","title":"CompletionContext"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-context/#constructors","text":"Name Summary <init> CompletionContext(triggerKind: Int , triggerCharacter: String ?)","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-context/#properties","text":"Name Summary triggerCharacter The trigger character (a single character) that has trigger code complete. Is undefined if triggerKind !== CompletionTriggerKind.TriggerCharacter``val triggerCharacter: String ? triggerKind How the completion was triggered. 1: Completion was triggered by typing an identifier (24x7 code complete), manual invocation (e.g Ctrl+Space) or via API. 2: Completion was triggered by a trigger character specified by the triggerCharacters properties of the CompletionRegistrationOptions . 3: Completion was re-triggered as current completion list is incomplete val triggerKind: Int","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-context/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionContext / <init> <init> \u00b6 CompletionContext(triggerKind: Int , triggerCharacter: String ?)","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-context/-init-/#init","text":"CompletionContext(triggerKind: Int , triggerCharacter: String ?)","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-context/trigger-character/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionContext / triggerCharacter triggerCharacter \u00b6 val triggerCharacter: String ? The trigger character (a single character) that has trigger code complete. Is undefined if triggerKind !== CompletionTriggerKind.TriggerCharacter","title":"triggerCharacter - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-context/trigger-character/#triggercharacter","text":"val triggerCharacter: String ? The trigger character (a single character) that has trigger code complete. Is undefined if triggerKind !== CompletionTriggerKind.TriggerCharacter","title":"triggerCharacter"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-context/trigger-kind/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionContext / triggerKind triggerKind \u00b6 val triggerKind: Int How the completion was triggered. 1: Completion was triggered by typing an identifier (24x7 code complete), manual invocation (e.g Ctrl+Space) or via API. 2: Completion was triggered by a trigger character specified by the triggerCharacters properties of the CompletionRegistrationOptions . 3: Completion was re-triggered as current completion list is incomplete","title":"triggerKind - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-context/trigger-kind/#triggerkind","text":"val triggerKind: Int How the completion was triggered. 1: Completion was triggered by typing an identifier (24x7 code complete), manual invocation (e.g Ctrl+Space) or via API. 2: Completion was triggered by a trigger character specified by the triggerCharacters properties of the CompletionRegistrationOptions . 3: Completion was re-triggered as current completion list is incomplete","title":"triggerKind"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionItem CompletionItem \u00b6 data class CompletionItem Constructors \u00b6 Name Summary <init> CompletionItem(label: String , kind: Int ? = null, detail: String ? = null, documentation: String ? = null, deprecated: Boolean ? = null, preselect: Boolean ? = false, sortText: String ? = null, filterText: String ? = null, insertText: String ? = null, insertTextFormat: Int ? = null, textEdit: TextEdit ? = null, additionalTextEdits: List < TextEdit >? = null, commitCharacters: List < String >? = null, command: Command ? = null, data: Any ? = null) Properties \u00b6 Name Summary additionalTextEdits An optional array of additional text edits that are applied when selecting this completion. Edits must not overlap (including the same insert position) with the main edit nor with themselves. val additionalTextEdits: List < TextEdit >? command An optional command that is executed after inserting this completion. Note that additional modifications to the current document should be described with the additionalTextEdits-property. val command: Command ? commitCharacters An optional set of characters that when pressed while this completion is active will accept it first and then type that character. Note that all commit characters should have length=1 and that superfluous characters will be ignored. val commitCharacters: List < String >? data A data entry field that is preserved on a completion item between a completion and a completion resolve request. val data: Any ? deprecated Indicates if this item is deprecated. val deprecated: Boolean ? detail A human-readable string with additional information about this item, like type or symbol information. val detail: String ? documentation A human-readable string that represents a doc-comment. val documentation: String ? filterText A string that should be used when filtering a set of completion items. When falsy the label is used. val filterText: String ? insertText A string that should be inserted into a document when selecting this completion. When falsy the label is used. val insertText: String ? insertTextFormat The format of the insert text. The format applies to both the insertText property and the newText property of a provided textEdit . If omitted defaults to InsertTextFormat.PlainText . 1: The primary text to be inserted is treated as a plain string. 2: The primary text to be inserted is treated as a snippet. val insertTextFormat: Int ? kind The kind of this completion item. Based of the kind an icon is chosen by the editor. The standardized set of available values is defined in CompletionItemKind . val kind: Int ? label The label of this completion item. By default also the text that is inserted when selecting this completion. val label: String preselect Select this item when showing. val preselect: Boolean ? sortText A string that should be used when comparing this item with other items. When falsy the label is used. val sortText: String ? textEdit An edit which is applied to a document when selecting this completion. When an edit is provided the value of insertText is ignored. val textEdit: TextEdit ?","title":"CompletionItem - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item/#completionitem","text":"data class CompletionItem","title":"CompletionItem"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item/#constructors","text":"Name Summary <init> CompletionItem(label: String , kind: Int ? = null, detail: String ? = null, documentation: String ? = null, deprecated: Boolean ? = null, preselect: Boolean ? = false, sortText: String ? = null, filterText: String ? = null, insertText: String ? = null, insertTextFormat: Int ? = null, textEdit: TextEdit ? = null, additionalTextEdits: List < TextEdit >? = null, commitCharacters: List < String >? = null, command: Command ? = null, data: Any ? = null)","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item/#properties","text":"Name Summary additionalTextEdits An optional array of additional text edits that are applied when selecting this completion. Edits must not overlap (including the same insert position) with the main edit nor with themselves. val additionalTextEdits: List < TextEdit >? command An optional command that is executed after inserting this completion. Note that additional modifications to the current document should be described with the additionalTextEdits-property. val command: Command ? commitCharacters An optional set of characters that when pressed while this completion is active will accept it first and then type that character. Note that all commit characters should have length=1 and that superfluous characters will be ignored. val commitCharacters: List < String >? data A data entry field that is preserved on a completion item between a completion and a completion resolve request. val data: Any ? deprecated Indicates if this item is deprecated. val deprecated: Boolean ? detail A human-readable string with additional information about this item, like type or symbol information. val detail: String ? documentation A human-readable string that represents a doc-comment. val documentation: String ? filterText A string that should be used when filtering a set of completion items. When falsy the label is used. val filterText: String ? insertText A string that should be inserted into a document when selecting this completion. When falsy the label is used. val insertText: String ? insertTextFormat The format of the insert text. The format applies to both the insertText property and the newText property of a provided textEdit . If omitted defaults to InsertTextFormat.PlainText . 1: The primary text to be inserted is treated as a plain string. 2: The primary text to be inserted is treated as a snippet. val insertTextFormat: Int ? kind The kind of this completion item. Based of the kind an icon is chosen by the editor. The standardized set of available values is defined in CompletionItemKind . val kind: Int ? label The label of this completion item. By default also the text that is inserted when selecting this completion. val label: String preselect Select this item when showing. val preselect: Boolean ? sortText A string that should be used when comparing this item with other items. When falsy the label is used. val sortText: String ? textEdit An edit which is applied to a document when selecting this completion. When an edit is provided the value of insertText is ignored. val textEdit: TextEdit ?","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionItem / <init> <init> \u00b6 CompletionItem(label: String , kind: Int ? = null, detail: String ? = null, documentation: String ? = null, deprecated: Boolean ? = null, preselect: Boolean ? = false, sortText: String ? = null, filterText: String ? = null, insertText: String ? = null, insertTextFormat: Int ? = null, textEdit: TextEdit ? = null, additionalTextEdits: List < TextEdit >? = null, commitCharacters: List < String >? = null, command: Command ? = null, data: Any ? = null)","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item/-init-/#init","text":"CompletionItem(label: String , kind: Int ? = null, detail: String ? = null, documentation: String ? = null, deprecated: Boolean ? = null, preselect: Boolean ? = false, sortText: String ? = null, filterText: String ? = null, insertText: String ? = null, insertTextFormat: Int ? = null, textEdit: TextEdit ? = null, additionalTextEdits: List < TextEdit >? = null, commitCharacters: List < String >? = null, command: Command ? = null, data: Any ? = null)","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item/additional-text-edits/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionItem / additionalTextEdits additionalTextEdits \u00b6 val additionalTextEdits: List < TextEdit >? An optional array of additional text edits that are applied when selecting this completion. Edits must not overlap (including the same insert position) with the main edit nor with themselves. Additional text edits should be used to change text unrelated to the current cursor position (for example adding an import statement at the top of the file if the completion item will insert an unqualified type).","title":"additionalTextEdits - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item/additional-text-edits/#additionaltextedits","text":"val additionalTextEdits: List < TextEdit >? An optional array of additional text edits that are applied when selecting this completion. Edits must not overlap (including the same insert position) with the main edit nor with themselves. Additional text edits should be used to change text unrelated to the current cursor position (for example adding an import statement at the top of the file if the completion item will insert an unqualified type).","title":"additionalTextEdits"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item/command/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionItem / command command \u00b6 val command: Command ? An optional command that is executed after inserting this completion. Note that additional modifications to the current document should be described with the additionalTextEdits-property.","title":"command - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item/command/#command","text":"val command: Command ? An optional command that is executed after inserting this completion. Note that additional modifications to the current document should be described with the additionalTextEdits-property.","title":"command"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item/commit-characters/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionItem / commitCharacters commitCharacters \u00b6 val commitCharacters: List < String >? An optional set of characters that when pressed while this completion is active will accept it first and then type that character. Note that all commit characters should have length=1 and that superfluous characters will be ignored.","title":"commitCharacters - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item/commit-characters/#commitcharacters","text":"val commitCharacters: List < String >? An optional set of characters that when pressed while this completion is active will accept it first and then type that character. Note that all commit characters should have length=1 and that superfluous characters will be ignored.","title":"commitCharacters"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item/data/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionItem / data data \u00b6 val data: Any ? A data entry field that is preserved on a completion item between a completion and a completion resolve request.","title":"data - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item/data/#data","text":"val data: Any ? A data entry field that is preserved on a completion item between a completion and a completion resolve request.","title":"data"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item/deprecated/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionItem / deprecated deprecated \u00b6 val deprecated: Boolean ? Indicates if this item is deprecated. Deprecated Use tags instead if supported.","title":"deprecated - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item/deprecated/#deprecated","text":"val deprecated: Boolean ? Indicates if this item is deprecated. Deprecated Use tags instead if supported.","title":"deprecated"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item/detail/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionItem / detail detail \u00b6 val detail: String ? A human-readable string with additional information about this item, like type or symbol information.","title":"detail - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item/detail/#detail","text":"val detail: String ? A human-readable string with additional information about this item, like type or symbol information.","title":"detail"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item/documentation/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionItem / documentation documentation \u00b6 val documentation: String ? A human-readable string that represents a doc-comment.","title":"documentation - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item/documentation/#documentation","text":"val documentation: String ? A human-readable string that represents a doc-comment.","title":"documentation"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item/filter-text/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionItem / filterText filterText \u00b6 val filterText: String ? A string that should be used when filtering a set of completion items. When falsy the label is used.","title":"filterText - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item/filter-text/#filtertext","text":"val filterText: String ? A string that should be used when filtering a set of completion items. When falsy the label is used.","title":"filterText"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item/insert-text-format/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionItem / insertTextFormat insertTextFormat \u00b6 val insertTextFormat: Int ? The format of the insert text. The format applies to both the insertText property and the newText property of a provided textEdit . If omitted defaults to InsertTextFormat.PlainText . 1: The primary text to be inserted is treated as a plain string. 2: The primary text to be inserted is treated as a snippet. A snippet can define tab stops and placeholders with $1 , $2 and ${3:foo} . $0 defines the final tab stop, it defaults to the end of the snippet. Placeholders with equal identifiers are linked, that is typing in one will update others too.","title":"insertTextFormat - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item/insert-text-format/#inserttextformat","text":"val insertTextFormat: Int ? The format of the insert text. The format applies to both the insertText property and the newText property of a provided textEdit . If omitted defaults to InsertTextFormat.PlainText . 1: The primary text to be inserted is treated as a plain string. 2: The primary text to be inserted is treated as a snippet. A snippet can define tab stops and placeholders with $1 , $2 and ${3:foo} . $0 defines the final tab stop, it defaults to the end of the snippet. Placeholders with equal identifiers are linked, that is typing in one will update others too.","title":"insertTextFormat"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item/insert-text/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionItem / insertText insertText \u00b6 val insertText: String ? A string that should be inserted into a document when selecting this completion. When falsy the label is used. The insertText is subject to interpretation by the client side. Some tools might not take the string literally. For example VS Code when code complete is requested in this example con<cursor position> and a completion item with an insertText of console is provided it will only insert sole . Therefore it is recommended to use textEdit instead since it avoids additional client side interpretation.","title":"insertText - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item/insert-text/#inserttext","text":"val insertText: String ? A string that should be inserted into a document when selecting this completion. When falsy the label is used. The insertText is subject to interpretation by the client side. Some tools might not take the string literally. For example VS Code when code complete is requested in this example con<cursor position> and a completion item with an insertText of console is provided it will only insert sole . Therefore it is recommended to use textEdit instead since it avoids additional client side interpretation.","title":"insertText"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item/kind/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionItem / kind kind \u00b6 val kind: Int ? The kind of this completion item. Based of the kind an icon is chosen by the editor. The standardized set of available values is defined in CompletionItemKind .","title":"kind - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item/kind/#kind","text":"val kind: Int ? The kind of this completion item. Based of the kind an icon is chosen by the editor. The standardized set of available values is defined in CompletionItemKind .","title":"kind"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item/label/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionItem / label label \u00b6 val label: String The label of this completion item. By default also the text that is inserted when selecting this completion.","title":"label - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item/label/#label","text":"val label: String The label of this completion item. By default also the text that is inserted when selecting this completion.","title":"label"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item/preselect/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionItem / preselect preselect \u00b6 val preselect: Boolean ? Select this item when showing. Note that only one completion item can be selected and that the tool / client decides which item that is. The rule is that the first item of those that match best is selected.","title":"preselect - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item/preselect/#preselect","text":"val preselect: Boolean ? Select this item when showing. Note that only one completion item can be selected and that the tool / client decides which item that is. The rule is that the first item of those that match best is selected.","title":"preselect"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item/sort-text/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionItem / sortText sortText \u00b6 val sortText: String ? A string that should be used when comparing this item with other items. When falsy the label is used.","title":"sortText - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item/sort-text/#sorttext","text":"val sortText: String ? A string that should be used when comparing this item with other items. When falsy the label is used.","title":"sortText"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item/text-edit/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionItem / textEdit textEdit \u00b6 val textEdit: TextEdit ? An edit which is applied to a document when selecting this completion. When an edit is provided the value of insertText is ignored. Note: The range of the edit must be a single line range and it must contain the position at which completion has been requested.","title":"textEdit - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item/text-edit/#textedit","text":"val textEdit: TextEdit ? An edit which is applied to a document when selecting this completion. When an edit is provided the value of insertText is ignored. Note: The range of the edit must be a single line range and it must contain the position at which completion has been requested.","title":"textEdit"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionItemKind CompletionItemKind \u00b6 enum class CompletionItemKind The kind of a completion entry. Enum Values \u00b6 Name Summary Text Method Function Constructor Field Variable Class Interface Module Property Unit Value Enum Keyword Snippet Color File Reference Folder EnumMember Constant Struct Event Operator TypeParameter Properties \u00b6 Name Summary value val value: Int","title":"CompletionItemKind - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/#completionitemkind","text":"enum class CompletionItemKind The kind of a completion entry.","title":"CompletionItemKind"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/#enum-values","text":"Name Summary Text Method Function Constructor Field Variable Class Interface Module Property Unit Value Enum Keyword Snippet Color File Reference Folder EnumMember Constant Struct Event Operator TypeParameter","title":"Enum Values"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/#properties","text":"Name Summary value val value: Int","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-class/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionItemKind / Class Class \u00b6 Class","title":"Class - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-class/#class","text":"Class","title":"Class"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-color/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionItemKind / Color Color \u00b6 Color","title":"Color - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-color/#color","text":"Color","title":"Color"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-constant/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionItemKind / Constant Constant \u00b6 Constant","title":"Constant - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-constant/#constant","text":"Constant","title":"Constant"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-constructor/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionItemKind / Constructor Constructor \u00b6 Constructor","title":"Constructor - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-constructor/#constructor","text":"Constructor","title":"Constructor"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-enum-member/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionItemKind / EnumMember EnumMember \u00b6 EnumMember","title":"EnumMember - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-enum-member/#enummember","text":"EnumMember","title":"EnumMember"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-enum/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionItemKind / Enum Enum \u00b6 Enum","title":"Enum - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-enum/#enum","text":"Enum","title":"Enum"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-event/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionItemKind / Event Event \u00b6 Event","title":"Event - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-event/#event","text":"Event","title":"Event"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-field/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionItemKind / Field Field \u00b6 Field","title":"Field - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-field/#field","text":"Field","title":"Field"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-file/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionItemKind / File File \u00b6 File","title":"File - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-file/#file","text":"File","title":"File"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-folder/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionItemKind / Folder Folder \u00b6 Folder","title":"Folder - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-folder/#folder","text":"Folder","title":"Folder"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-function/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionItemKind / Function Function \u00b6 Function","title":"Function - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-function/#function","text":"Function","title":"Function"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-interface/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionItemKind / Interface Interface \u00b6 Interface","title":"Interface - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-interface/#interface","text":"Interface","title":"Interface"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-keyword/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionItemKind / Keyword Keyword \u00b6 Keyword","title":"Keyword - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-keyword/#keyword","text":"Keyword","title":"Keyword"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-method/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionItemKind / Method Method \u00b6 Method","title":"Method - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-method/#method","text":"Method","title":"Method"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-module/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionItemKind / Module Module \u00b6 Module","title":"Module - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-module/#module","text":"Module","title":"Module"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-operator/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionItemKind / Operator Operator \u00b6 Operator","title":"Operator - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-operator/#operator","text":"Operator","title":"Operator"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-property/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionItemKind / Property Property \u00b6 Property","title":"Property - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-property/#property","text":"Property","title":"Property"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-reference/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionItemKind / Reference Reference \u00b6 Reference","title":"Reference - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-reference/#reference","text":"Reference","title":"Reference"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-snippet/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionItemKind / Snippet Snippet \u00b6 Snippet","title":"Snippet - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-snippet/#snippet","text":"Snippet","title":"Snippet"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-struct/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionItemKind / Struct Struct \u00b6 Struct","title":"Struct - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-struct/#struct","text":"Struct","title":"Struct"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-text/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionItemKind / Text Text \u00b6 Text","title":"Text - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-text/#text","text":"Text","title":"Text"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-type-parameter/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionItemKind / TypeParameter TypeParameter \u00b6 TypeParameter","title":"TypeParameter - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-type-parameter/#typeparameter","text":"TypeParameter","title":"TypeParameter"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-unit/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionItemKind / Unit Unit \u00b6 Unit","title":"Unit - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-unit/#unit","text":"Unit","title":"Unit"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-value/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionItemKind / Value Value \u00b6 Value","title":"Value - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-value/#value","text":"Value","title":"Value"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-variable/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionItemKind / Variable Variable \u00b6 Variable","title":"Variable - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/-variable/#variable","text":"Variable","title":"Variable"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/value/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionItemKind / value value \u00b6 val value: Int","title":"value - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-item-kind/value/#value","text":"val value: Int","title":"value"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-provider/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionProvider CompletionProvider \u00b6 data class CompletionProvider Constructors \u00b6 Name Summary <init> CompletionProvider(triggerCharacters: List < String >? = null, resolveProvider: Boolean = true) Properties \u00b6 Name Summary resolveProvider val resolveProvider: Boolean triggerCharacters val triggerCharacters: List < String >?","title":"CompletionProvider - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-provider/#completionprovider","text":"data class CompletionProvider","title":"CompletionProvider"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-provider/#constructors","text":"Name Summary <init> CompletionProvider(triggerCharacters: List < String >? = null, resolveProvider: Boolean = true)","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-provider/#properties","text":"Name Summary resolveProvider val resolveProvider: Boolean triggerCharacters val triggerCharacters: List < String >?","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-provider/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionProvider / <init> <init> \u00b6 CompletionProvider(triggerCharacters: List < String >? = null, resolveProvider: Boolean = true)","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-provider/-init-/#init","text":"CompletionProvider(triggerCharacters: List < String >? = null, resolveProvider: Boolean = true)","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-provider/resolve-provider/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionProvider / resolveProvider resolveProvider \u00b6 val resolveProvider: Boolean","title":"resolveProvider - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-provider/resolve-provider/#resolveprovider","text":"val resolveProvider: Boolean","title":"resolveProvider"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-provider/trigger-characters/","text":"lsp / org.pinelang.lsp.lsp.models / CompletionProvider / triggerCharacters triggerCharacters \u00b6 val triggerCharacters: List < String >?","title":"triggerCharacters - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-completion-provider/trigger-characters/#triggercharacters","text":"val triggerCharacters: List < String >?","title":"triggerCharacters"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-configuration-client-capabilities/","text":"lsp / org.pinelang.lsp.lsp.models / ConfigurationClientCapabilities ConfigurationClientCapabilities \u00b6 data class ConfigurationClientCapabilities Constructors \u00b6 Name Summary <init> ConfigurationClientCapabilities(dynamicRegistration: Boolean ?) Properties \u00b6 Name Summary dynamicRegistration Did change configuration notification supports dynamic registration. val dynamicRegistration: Boolean ?","title":"ConfigurationClientCapabilities - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-configuration-client-capabilities/#configurationclientcapabilities","text":"data class ConfigurationClientCapabilities","title":"ConfigurationClientCapabilities"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-configuration-client-capabilities/#constructors","text":"Name Summary <init> ConfigurationClientCapabilities(dynamicRegistration: Boolean ?)","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-configuration-client-capabilities/#properties","text":"Name Summary dynamicRegistration Did change configuration notification supports dynamic registration. val dynamicRegistration: Boolean ?","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-configuration-client-capabilities/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / ConfigurationClientCapabilities / <init> <init> \u00b6 ConfigurationClientCapabilities(dynamicRegistration: Boolean ?)","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-configuration-client-capabilities/-init-/#init","text":"ConfigurationClientCapabilities(dynamicRegistration: Boolean ?)","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-configuration-client-capabilities/dynamic-registration/","text":"lsp / org.pinelang.lsp.lsp.models / ConfigurationClientCapabilities / dynamicRegistration dynamicRegistration \u00b6 val dynamicRegistration: Boolean ? Did change configuration notification supports dynamic registration.","title":"dynamicRegistration - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-configuration-client-capabilities/dynamic-registration/#dynamicregistration","text":"val dynamicRegistration: Boolean ? Did change configuration notification supports dynamic registration.","title":"dynamicRegistration"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-declaration-client-capabilities/","text":"lsp / org.pinelang.lsp.lsp.models / DeclarationClientCapabilities DeclarationClientCapabilities \u00b6 data class DeclarationClientCapabilities Constructors \u00b6 Name Summary <init> DeclarationClientCapabilities(dynamicRegistration: Boolean ?, linkSupport: Boolean ?) Properties \u00b6 Name Summary dynamicRegistration Whether declaration supports dynamic registration. If this is set to true the client supports the new DeclarationRegistrationOptions return value for the corresponding server capability as well. val dynamicRegistration: Boolean ? linkSupport The client supports additional metadata in the form of declaration links. val linkSupport: Boolean ?","title":"DeclarationClientCapabilities - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-declaration-client-capabilities/#declarationclientcapabilities","text":"data class DeclarationClientCapabilities","title":"DeclarationClientCapabilities"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-declaration-client-capabilities/#constructors","text":"Name Summary <init> DeclarationClientCapabilities(dynamicRegistration: Boolean ?, linkSupport: Boolean ?)","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-declaration-client-capabilities/#properties","text":"Name Summary dynamicRegistration Whether declaration supports dynamic registration. If this is set to true the client supports the new DeclarationRegistrationOptions return value for the corresponding server capability as well. val dynamicRegistration: Boolean ? linkSupport The client supports additional metadata in the form of declaration links. val linkSupport: Boolean ?","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-declaration-client-capabilities/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / DeclarationClientCapabilities / <init> <init> \u00b6 DeclarationClientCapabilities(dynamicRegistration: Boolean ?, linkSupport: Boolean ?)","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-declaration-client-capabilities/-init-/#init","text":"DeclarationClientCapabilities(dynamicRegistration: Boolean ?, linkSupport: Boolean ?)","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-declaration-client-capabilities/dynamic-registration/","text":"lsp / org.pinelang.lsp.lsp.models / DeclarationClientCapabilities / dynamicRegistration dynamicRegistration \u00b6 val dynamicRegistration: Boolean ? Whether declaration supports dynamic registration. If this is set to true the client supports the new DeclarationRegistrationOptions return value for the corresponding server capability as well.","title":"dynamicRegistration - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-declaration-client-capabilities/dynamic-registration/#dynamicregistration","text":"val dynamicRegistration: Boolean ? Whether declaration supports dynamic registration. If this is set to true the client supports the new DeclarationRegistrationOptions return value for the corresponding server capability as well.","title":"dynamicRegistration"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-declaration-client-capabilities/link-support/","text":"lsp / org.pinelang.lsp.lsp.models / DeclarationClientCapabilities / linkSupport linkSupport \u00b6 val linkSupport: Boolean ? The client supports additional metadata in the form of declaration links.","title":"linkSupport - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-declaration-client-capabilities/link-support/#linksupport","text":"val linkSupport: Boolean ? The client supports additional metadata in the form of declaration links.","title":"linkSupport"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-diagnostic-related-information/","text":"lsp / org.pinelang.lsp.lsp.models / DiagnosticRelatedInformation DiagnosticRelatedInformation \u00b6 data class DiagnosticRelatedInformation Constructors \u00b6 Name Summary <init> DiagnosticRelatedInformation(location: Location , message: String ) Properties \u00b6 Name Summary location The location of this related diagnostic information. val location: Location message The message of this related diagnostic information. val message: String","title":"DiagnosticRelatedInformation - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-diagnostic-related-information/#diagnosticrelatedinformation","text":"data class DiagnosticRelatedInformation","title":"DiagnosticRelatedInformation"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-diagnostic-related-information/#constructors","text":"Name Summary <init> DiagnosticRelatedInformation(location: Location , message: String )","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-diagnostic-related-information/#properties","text":"Name Summary location The location of this related diagnostic information. val location: Location message The message of this related diagnostic information. val message: String","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-diagnostic-related-information/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / DiagnosticRelatedInformation / <init> <init> \u00b6 DiagnosticRelatedInformation(location: Location , message: String )","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-diagnostic-related-information/-init-/#init","text":"DiagnosticRelatedInformation(location: Location , message: String )","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-diagnostic-related-information/location/","text":"lsp / org.pinelang.lsp.lsp.models / DiagnosticRelatedInformation / location location \u00b6 val location: Location The location of this related diagnostic information.","title":"location - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-diagnostic-related-information/location/#location","text":"val location: Location The location of this related diagnostic information.","title":"location"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-diagnostic-related-information/message/","text":"lsp / org.pinelang.lsp.lsp.models / DiagnosticRelatedInformation / message message \u00b6 val message: String The message of this related diagnostic information.","title":"message - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-diagnostic-related-information/message/#message","text":"val message: String The message of this related diagnostic information.","title":"message"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-document-link-client-capabilities/","text":"lsp / org.pinelang.lsp.lsp.models / DocumentLinkClientCapabilities DocumentLinkClientCapabilities \u00b6 data class DocumentLinkClientCapabilities Constructors \u00b6 Name Summary <init> DocumentLinkClientCapabilities(dynamicRegistration: Boolean ?, tooltipSupport: Boolean ) Properties \u00b6 Name Summary dynamicRegistration Whether document link supports dynamic registration. val dynamicRegistration: Boolean ? tooltipSupport Whether the client support the tooltip property on DocumentLink . val tooltipSupport: Boolean","title":"DocumentLinkClientCapabilities - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-document-link-client-capabilities/#documentlinkclientcapabilities","text":"data class DocumentLinkClientCapabilities","title":"DocumentLinkClientCapabilities"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-document-link-client-capabilities/#constructors","text":"Name Summary <init> DocumentLinkClientCapabilities(dynamicRegistration: Boolean ?, tooltipSupport: Boolean )","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-document-link-client-capabilities/#properties","text":"Name Summary dynamicRegistration Whether document link supports dynamic registration. val dynamicRegistration: Boolean ? tooltipSupport Whether the client support the tooltip property on DocumentLink . val tooltipSupport: Boolean","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-document-link-client-capabilities/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / DocumentLinkClientCapabilities / <init> <init> \u00b6 DocumentLinkClientCapabilities(dynamicRegistration: Boolean ?, tooltipSupport: Boolean )","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-document-link-client-capabilities/-init-/#init","text":"DocumentLinkClientCapabilities(dynamicRegistration: Boolean ?, tooltipSupport: Boolean )","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-document-link-client-capabilities/dynamic-registration/","text":"lsp / org.pinelang.lsp.lsp.models / DocumentLinkClientCapabilities / dynamicRegistration dynamicRegistration \u00b6 val dynamicRegistration: Boolean ? Whether document link supports dynamic registration.","title":"dynamicRegistration - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-document-link-client-capabilities/dynamic-registration/#dynamicregistration","text":"val dynamicRegistration: Boolean ? Whether document link supports dynamic registration.","title":"dynamicRegistration"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-document-link-client-capabilities/tooltip-support/","text":"lsp / org.pinelang.lsp.lsp.models / DocumentLinkClientCapabilities / tooltipSupport tooltipSupport \u00b6 val tooltipSupport: Boolean Whether the client support the tooltip property on DocumentLink . Since 3.15.0","title":"tooltipSupport - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-document-link-client-capabilities/tooltip-support/#tooltipsupport","text":"val tooltipSupport: Boolean Whether the client support the tooltip property on DocumentLink . Since 3.15.0","title":"tooltipSupport"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-document-symbol/","text":"lsp / org.pinelang.lsp.lsp.models / DocumentSymbol DocumentSymbol \u00b6 data class DocumentSymbol Represents programming constructs like variables, classes, interfaces etc. that appear in a document. Document symbols can be hierarchical and they have two ranges: one that encloses its definition and one that points to its most interesting range, e.g. the range of an identifier. Constructors \u00b6 Name Summary <init> Represents programming constructs like variables, classes, interfaces etc. that appear in a document. Document symbols can be hierarchical and they have two ranges: one that encloses its definition and one that points to its most interesting range, e.g. the range of an identifier. DocumentSymbol(name: String , detail: String , kind: SymbolKind , deprecated: Boolean ?, range: Range , selectionRange: Range , children: List < DocumentSymbol >?) Properties \u00b6 Name Summary children Children of this symbol, e.g. properties of a class. val children: List < DocumentSymbol >? deprecated Indicates if this symbol is deprecated. val deprecated: Boolean ? detail More detail for this symbol, e.g the signature of a function. val detail: String kind The kind of this symbol. val kind: SymbolKind name The name of this symbol. Will be displayed in the user interface and therefore must not be an empty string or a string only consisting of white spaces. val name: String range The range enclosing this symbol not including leading/trailing whitespace but everything else like comments. This information is typically used to determine if the clients cursor is inside the symbol to reveal in the symbol in the UI. val range: Range selectionRange The range that should be selected and revealed when this symbol is being picked, e.g the name of a function. Must be contained by the range . val selectionRange: Range","title":"DocumentSymbol - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-document-symbol/#documentsymbol","text":"data class DocumentSymbol Represents programming constructs like variables, classes, interfaces etc. that appear in a document. Document symbols can be hierarchical and they have two ranges: one that encloses its definition and one that points to its most interesting range, e.g. the range of an identifier.","title":"DocumentSymbol"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-document-symbol/#constructors","text":"Name Summary <init> Represents programming constructs like variables, classes, interfaces etc. that appear in a document. Document symbols can be hierarchical and they have two ranges: one that encloses its definition and one that points to its most interesting range, e.g. the range of an identifier. DocumentSymbol(name: String , detail: String , kind: SymbolKind , deprecated: Boolean ?, range: Range , selectionRange: Range , children: List < DocumentSymbol >?)","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-document-symbol/#properties","text":"Name Summary children Children of this symbol, e.g. properties of a class. val children: List < DocumentSymbol >? deprecated Indicates if this symbol is deprecated. val deprecated: Boolean ? detail More detail for this symbol, e.g the signature of a function. val detail: String kind The kind of this symbol. val kind: SymbolKind name The name of this symbol. Will be displayed in the user interface and therefore must not be an empty string or a string only consisting of white spaces. val name: String range The range enclosing this symbol not including leading/trailing whitespace but everything else like comments. This information is typically used to determine if the clients cursor is inside the symbol to reveal in the symbol in the UI. val range: Range selectionRange The range that should be selected and revealed when this symbol is being picked, e.g the name of a function. Must be contained by the range . val selectionRange: Range","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-document-symbol/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / DocumentSymbol / <init> <init> \u00b6 DocumentSymbol(name: String , detail: String , kind: SymbolKind , deprecated: Boolean ?, range: Range , selectionRange: Range , children: List < DocumentSymbol >?) Represents programming constructs like variables, classes, interfaces etc. that appear in a document. Document symbols can be hierarchical and they have two ranges: one that encloses its definition and one that points to its most interesting range, e.g. the range of an identifier.","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-document-symbol/-init-/#init","text":"DocumentSymbol(name: String , detail: String , kind: SymbolKind , deprecated: Boolean ?, range: Range , selectionRange: Range , children: List < DocumentSymbol >?) Represents programming constructs like variables, classes, interfaces etc. that appear in a document. Document symbols can be hierarchical and they have two ranges: one that encloses its definition and one that points to its most interesting range, e.g. the range of an identifier.","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-document-symbol/children/","text":"lsp / org.pinelang.lsp.lsp.models / DocumentSymbol / children children \u00b6 val children: List < DocumentSymbol >? Children of this symbol, e.g. properties of a class.","title":"children - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-document-symbol/children/#children","text":"val children: List < DocumentSymbol >? Children of this symbol, e.g. properties of a class.","title":"children"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-document-symbol/deprecated/","text":"lsp / org.pinelang.lsp.lsp.models / DocumentSymbol / deprecated deprecated \u00b6 val deprecated: Boolean ? Indicates if this symbol is deprecated.","title":"deprecated - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-document-symbol/deprecated/#deprecated","text":"val deprecated: Boolean ? Indicates if this symbol is deprecated.","title":"deprecated"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-document-symbol/detail/","text":"lsp / org.pinelang.lsp.lsp.models / DocumentSymbol / detail detail \u00b6 val detail: String More detail for this symbol, e.g the signature of a function.","title":"detail - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-document-symbol/detail/#detail","text":"val detail: String More detail for this symbol, e.g the signature of a function.","title":"detail"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-document-symbol/kind/","text":"lsp / org.pinelang.lsp.lsp.models / DocumentSymbol / kind kind \u00b6 val kind: SymbolKind The kind of this symbol.","title":"kind - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-document-symbol/kind/#kind","text":"val kind: SymbolKind The kind of this symbol.","title":"kind"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-document-symbol/name/","text":"lsp / org.pinelang.lsp.lsp.models / DocumentSymbol / name name \u00b6 val name: String The name of this symbol. Will be displayed in the user interface and therefore must not be an empty string or a string only consisting of white spaces.","title":"name - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-document-symbol/name/#name","text":"val name: String The name of this symbol. Will be displayed in the user interface and therefore must not be an empty string or a string only consisting of white spaces.","title":"name"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-document-symbol/range/","text":"lsp / org.pinelang.lsp.lsp.models / DocumentSymbol / range range \u00b6 val range: Range The range enclosing this symbol not including leading/trailing whitespace but everything else like comments. This information is typically used to determine if the clients cursor is inside the symbol to reveal in the symbol in the UI.","title":"range - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-document-symbol/range/#range","text":"val range: Range The range enclosing this symbol not including leading/trailing whitespace but everything else like comments. This information is typically used to determine if the clients cursor is inside the symbol to reveal in the symbol in the UI.","title":"range"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-document-symbol/selection-range/","text":"lsp / org.pinelang.lsp.lsp.models / DocumentSymbol / selectionRange selectionRange \u00b6 val selectionRange: Range The range that should be selected and revealed when this symbol is being picked, e.g the name of a function. Must be contained by the range .","title":"selectionRange - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-document-symbol/selection-range/#selectionrange","text":"val selectionRange: Range The range that should be selected and revealed when this symbol is being picked, e.g the name of a function. Must be contained by the range .","title":"selectionRange"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-document-symbol-client-capabilities/","text":"lsp / org.pinelang.lsp.lsp.models / DocumentSymbolClientCapabilities DocumentSymbolClientCapabilities \u00b6 data class DocumentSymbolClientCapabilities Constructors \u00b6 Name Summary <init> DocumentSymbolClientCapabilities(dynamicRegistration: Boolean ?, symbolKind: ValueSet ?, hierarchicalDocumentSymbolSupport: Boolean ?) Properties \u00b6 Name Summary dynamicRegistration Whether document symbol supports dynamic registration. val dynamicRegistration: Boolean ? hierarchicalDocumentSymbolSupport The client support hierarchical document symbols. val hierarchicalDocumentSymbolSupport: Boolean ? symbolKind Specific capabilities for the SymbolKind . val symbolKind: ValueSet ?","title":"DocumentSymbolClientCapabilities - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-document-symbol-client-capabilities/#documentsymbolclientcapabilities","text":"data class DocumentSymbolClientCapabilities","title":"DocumentSymbolClientCapabilities"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-document-symbol-client-capabilities/#constructors","text":"Name Summary <init> DocumentSymbolClientCapabilities(dynamicRegistration: Boolean ?, symbolKind: ValueSet ?, hierarchicalDocumentSymbolSupport: Boolean ?)","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-document-symbol-client-capabilities/#properties","text":"Name Summary dynamicRegistration Whether document symbol supports dynamic registration. val dynamicRegistration: Boolean ? hierarchicalDocumentSymbolSupport The client support hierarchical document symbols. val hierarchicalDocumentSymbolSupport: Boolean ? symbolKind Specific capabilities for the SymbolKind . val symbolKind: ValueSet ?","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-document-symbol-client-capabilities/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / DocumentSymbolClientCapabilities / <init> <init> \u00b6 DocumentSymbolClientCapabilities(dynamicRegistration: Boolean ?, symbolKind: ValueSet ?, hierarchicalDocumentSymbolSupport: Boolean ?)","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-document-symbol-client-capabilities/-init-/#init","text":"DocumentSymbolClientCapabilities(dynamicRegistration: Boolean ?, symbolKind: ValueSet ?, hierarchicalDocumentSymbolSupport: Boolean ?)","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-document-symbol-client-capabilities/dynamic-registration/","text":"lsp / org.pinelang.lsp.lsp.models / DocumentSymbolClientCapabilities / dynamicRegistration dynamicRegistration \u00b6 val dynamicRegistration: Boolean ? Whether document symbol supports dynamic registration.","title":"dynamicRegistration - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-document-symbol-client-capabilities/dynamic-registration/#dynamicregistration","text":"val dynamicRegistration: Boolean ? Whether document symbol supports dynamic registration.","title":"dynamicRegistration"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-document-symbol-client-capabilities/hierarchical-document-symbol-support/","text":"lsp / org.pinelang.lsp.lsp.models / DocumentSymbolClientCapabilities / hierarchicalDocumentSymbolSupport hierarchicalDocumentSymbolSupport \u00b6 val hierarchicalDocumentSymbolSupport: Boolean ? The client support hierarchical document symbols.","title":"hierarchicalDocumentSymbolSupport - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-document-symbol-client-capabilities/hierarchical-document-symbol-support/#hierarchicaldocumentsymbolsupport","text":"val hierarchicalDocumentSymbolSupport: Boolean ? The client support hierarchical document symbols.","title":"hierarchicalDocumentSymbolSupport"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-document-symbol-client-capabilities/symbol-kind/","text":"lsp / org.pinelang.lsp.lsp.models / DocumentSymbolClientCapabilities / symbolKind symbolKind \u00b6 val symbolKind: ValueSet ? Specific capabilities for the SymbolKind .","title":"symbolKind - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-document-symbol-client-capabilities/symbol-kind/#symbolkind","text":"val symbolKind: ValueSet ? Specific capabilities for the SymbolKind .","title":"symbolKind"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-error-code/","text":"lsp / org.pinelang.lsp.lsp.models / ErrorCode ErrorCode \u00b6 enum class ErrorCode Enum Values \u00b6 Name Summary ParseError InvalidRequest MethodNotFound InvalidParams InternalError ServerErrorStart ServerErrorEnd ServerNotInitialized UnknownErrorCode RequestCancelled ContentModified Properties \u00b6 Name Summary err val err: Int","title":"ErrorCode - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-error-code/#errorcode","text":"enum class ErrorCode","title":"ErrorCode"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-error-code/#enum-values","text":"Name Summary ParseError InvalidRequest MethodNotFound InvalidParams InternalError ServerErrorStart ServerErrorEnd ServerNotInitialized UnknownErrorCode RequestCancelled ContentModified","title":"Enum Values"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-error-code/#properties","text":"Name Summary err val err: Int","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-error-code/-content-modified/","text":"lsp / org.pinelang.lsp.lsp.models / ErrorCode / ContentModified ContentModified \u00b6 ContentModified","title":"ContentModified - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-error-code/-content-modified/#contentmodified","text":"ContentModified","title":"ContentModified"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-error-code/-internal-error/","text":"lsp / org.pinelang.lsp.lsp.models / ErrorCode / InternalError InternalError \u00b6 InternalError","title":"InternalError - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-error-code/-internal-error/#internalerror","text":"InternalError","title":"InternalError"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-error-code/-invalid-params/","text":"lsp / org.pinelang.lsp.lsp.models / ErrorCode / InvalidParams InvalidParams \u00b6 InvalidParams","title":"InvalidParams - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-error-code/-invalid-params/#invalidparams","text":"InvalidParams","title":"InvalidParams"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-error-code/-invalid-request/","text":"lsp / org.pinelang.lsp.lsp.models / ErrorCode / InvalidRequest InvalidRequest \u00b6 InvalidRequest","title":"InvalidRequest - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-error-code/-invalid-request/#invalidrequest","text":"InvalidRequest","title":"InvalidRequest"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-error-code/-method-not-found/","text":"lsp / org.pinelang.lsp.lsp.models / ErrorCode / MethodNotFound MethodNotFound \u00b6 MethodNotFound","title":"MethodNotFound - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-error-code/-method-not-found/#methodnotfound","text":"MethodNotFound","title":"MethodNotFound"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-error-code/-parse-error/","text":"lsp / org.pinelang.lsp.lsp.models / ErrorCode / ParseError ParseError \u00b6 ParseError","title":"ParseError - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-error-code/-parse-error/#parseerror","text":"ParseError","title":"ParseError"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-error-code/-request-cancelled/","text":"lsp / org.pinelang.lsp.lsp.models / ErrorCode / RequestCancelled RequestCancelled \u00b6 RequestCancelled","title":"RequestCancelled - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-error-code/-request-cancelled/#requestcancelled","text":"RequestCancelled","title":"RequestCancelled"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-error-code/-server-error-end/","text":"lsp / org.pinelang.lsp.lsp.models / ErrorCode / ServerErrorEnd ServerErrorEnd \u00b6 ServerErrorEnd","title":"ServerErrorEnd - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-error-code/-server-error-end/#servererrorend","text":"ServerErrorEnd","title":"ServerErrorEnd"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-error-code/-server-error-start/","text":"lsp / org.pinelang.lsp.lsp.models / ErrorCode / ServerErrorStart ServerErrorStart \u00b6 ServerErrorStart","title":"ServerErrorStart - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-error-code/-server-error-start/#servererrorstart","text":"ServerErrorStart","title":"ServerErrorStart"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-error-code/-server-not-initialized/","text":"lsp / org.pinelang.lsp.lsp.models / ErrorCode / ServerNotInitialized ServerNotInitialized \u00b6 ServerNotInitialized","title":"ServerNotInitialized - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-error-code/-server-not-initialized/#servernotinitialized","text":"ServerNotInitialized","title":"ServerNotInitialized"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-error-code/-unknown-error-code/","text":"lsp / org.pinelang.lsp.lsp.models / ErrorCode / UnknownErrorCode UnknownErrorCode \u00b6 UnknownErrorCode","title":"UnknownErrorCode - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-error-code/-unknown-error-code/#unknownerrorcode","text":"UnknownErrorCode","title":"UnknownErrorCode"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-error-code/err/","text":"lsp / org.pinelang.lsp.lsp.models / ErrorCode / err err \u00b6 val err: Int","title":"err - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-error-code/err/#err","text":"val err: Int","title":"err"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-folding-range-client-capabilities/","text":"lsp / org.pinelang.lsp.lsp.models / FoldingRangeClientCapabilities FoldingRangeClientCapabilities \u00b6 data class FoldingRangeClientCapabilities Constructors \u00b6 Name Summary <init> FoldingRangeClientCapabilities(dynamicRegistration: Boolean ?, rangeLimit: Int ?, lineFoldingOnly: Boolean ?) Properties \u00b6 Name Summary dynamicRegistration Whether implementation supports dynamic registration for folding range providers. If this is set to true the client supports the new FoldingRangeRegistrationOptions return value for the corresponding server capability as well. val dynamicRegistration: Boolean ? lineFoldingOnly If set, the client signals that it only supports folding complete lines. If set, client will ignore specified startCharacter and endCharacter properties in a FoldingRange. val lineFoldingOnly: Boolean ? rangeLimit The maximum number of folding ranges that the client prefers to receive per document. The value serves as a hint, servers are free to follow the limit. val rangeLimit: Int ?","title":"FoldingRangeClientCapabilities - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-folding-range-client-capabilities/#foldingrangeclientcapabilities","text":"data class FoldingRangeClientCapabilities","title":"FoldingRangeClientCapabilities"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-folding-range-client-capabilities/#constructors","text":"Name Summary <init> FoldingRangeClientCapabilities(dynamicRegistration: Boolean ?, rangeLimit: Int ?, lineFoldingOnly: Boolean ?)","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-folding-range-client-capabilities/#properties","text":"Name Summary dynamicRegistration Whether implementation supports dynamic registration for folding range providers. If this is set to true the client supports the new FoldingRangeRegistrationOptions return value for the corresponding server capability as well. val dynamicRegistration: Boolean ? lineFoldingOnly If set, the client signals that it only supports folding complete lines. If set, client will ignore specified startCharacter and endCharacter properties in a FoldingRange. val lineFoldingOnly: Boolean ? rangeLimit The maximum number of folding ranges that the client prefers to receive per document. The value serves as a hint, servers are free to follow the limit. val rangeLimit: Int ?","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-folding-range-client-capabilities/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / FoldingRangeClientCapabilities / <init> <init> \u00b6 FoldingRangeClientCapabilities(dynamicRegistration: Boolean ?, rangeLimit: Int ?, lineFoldingOnly: Boolean ?)","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-folding-range-client-capabilities/-init-/#init","text":"FoldingRangeClientCapabilities(dynamicRegistration: Boolean ?, rangeLimit: Int ?, lineFoldingOnly: Boolean ?)","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-folding-range-client-capabilities/dynamic-registration/","text":"lsp / org.pinelang.lsp.lsp.models / FoldingRangeClientCapabilities / dynamicRegistration dynamicRegistration \u00b6 val dynamicRegistration: Boolean ? Whether implementation supports dynamic registration for folding range providers. If this is set to true the client supports the new FoldingRangeRegistrationOptions return value for the corresponding server capability as well.","title":"dynamicRegistration - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-folding-range-client-capabilities/dynamic-registration/#dynamicregistration","text":"val dynamicRegistration: Boolean ? Whether implementation supports dynamic registration for folding range providers. If this is set to true the client supports the new FoldingRangeRegistrationOptions return value for the corresponding server capability as well.","title":"dynamicRegistration"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-folding-range-client-capabilities/line-folding-only/","text":"lsp / org.pinelang.lsp.lsp.models / FoldingRangeClientCapabilities / lineFoldingOnly lineFoldingOnly \u00b6 val lineFoldingOnly: Boolean ? If set, the client signals that it only supports folding complete lines. If set, client will ignore specified startCharacter and endCharacter properties in a FoldingRange.","title":"lineFoldingOnly - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-folding-range-client-capabilities/line-folding-only/#linefoldingonly","text":"val lineFoldingOnly: Boolean ? If set, the client signals that it only supports folding complete lines. If set, client will ignore specified startCharacter and endCharacter properties in a FoldingRange.","title":"lineFoldingOnly"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-folding-range-client-capabilities/range-limit/","text":"lsp / org.pinelang.lsp.lsp.models / FoldingRangeClientCapabilities / rangeLimit rangeLimit \u00b6 val rangeLimit: Int ? The maximum number of folding ranges that the client prefers to receive per document. The value serves as a hint, servers are free to follow the limit.","title":"rangeLimit - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-folding-range-client-capabilities/range-limit/#rangelimit","text":"val rangeLimit: Int ? The maximum number of folding ranges that the client prefers to receive per document. The value serves as a hint, servers are free to follow the limit.","title":"rangeLimit"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-hover-client-capabilities/","text":"lsp / org.pinelang.lsp.lsp.models / HoverClientCapabilities HoverClientCapabilities \u00b6 data class HoverClientCapabilities Constructors \u00b6 Name Summary <init> HoverClientCapabilities(dynamicRegistration: Boolean ?, contentFormat: Array < String >?) Properties \u00b6 Name Summary contentFormat Client supports the follow content formats for the content property. The order describes the preferred format of the client. val contentFormat: Array < String >? dynamicRegistration Whether hover supports dynamic registration. val dynamicRegistration: Boolean ? Functions \u00b6 Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int","title":"HoverClientCapabilities - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-hover-client-capabilities/#hoverclientcapabilities","text":"data class HoverClientCapabilities","title":"HoverClientCapabilities"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-hover-client-capabilities/#constructors","text":"Name Summary <init> HoverClientCapabilities(dynamicRegistration: Boolean ?, contentFormat: Array < String >?)","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-hover-client-capabilities/#properties","text":"Name Summary contentFormat Client supports the follow content formats for the content property. The order describes the preferred format of the client. val contentFormat: Array < String >? dynamicRegistration Whether hover supports dynamic registration. val dynamicRegistration: Boolean ?","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-hover-client-capabilities/#functions","text":"Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int","title":"Functions"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-hover-client-capabilities/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / HoverClientCapabilities / <init> <init> \u00b6 HoverClientCapabilities(dynamicRegistration: Boolean ?, contentFormat: Array < String >?)","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-hover-client-capabilities/-init-/#init","text":"HoverClientCapabilities(dynamicRegistration: Boolean ?, contentFormat: Array < String >?)","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-hover-client-capabilities/content-format/","text":"lsp / org.pinelang.lsp.lsp.models / HoverClientCapabilities / contentFormat contentFormat \u00b6 val contentFormat: Array < String >? Client supports the follow content formats for the content property. The order describes the preferred format of the client.","title":"contentFormat - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-hover-client-capabilities/content-format/#contentformat","text":"val contentFormat: Array < String >? Client supports the follow content formats for the content property. The order describes the preferred format of the client.","title":"contentFormat"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-hover-client-capabilities/dynamic-registration/","text":"lsp / org.pinelang.lsp.lsp.models / HoverClientCapabilities / dynamicRegistration dynamicRegistration \u00b6 val dynamicRegistration: Boolean ? Whether hover supports dynamic registration.","title":"dynamicRegistration - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-hover-client-capabilities/dynamic-registration/#dynamicregistration","text":"val dynamicRegistration: Boolean ? Whether hover supports dynamic registration.","title":"dynamicRegistration"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-hover-client-capabilities/equals/","text":"lsp / org.pinelang.lsp.lsp.models / HoverClientCapabilities / equals equals \u00b6 fun equals(other: Any ?): Boolean","title":"equals - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-hover-client-capabilities/equals/#equals","text":"fun equals(other: Any ?): Boolean","title":"equals"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-hover-client-capabilities/hash-code/","text":"lsp / org.pinelang.lsp.lsp.models / HoverClientCapabilities / hashCode hashCode \u00b6 fun hashCode(): Int","title":"hashCode - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-hover-client-capabilities/hash-code/#hashcode","text":"fun hashCode(): Int","title":"hashCode"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-hover-params/","text":"lsp / org.pinelang.lsp.lsp.models / HoverParams HoverParams \u00b6 data class HoverParams Constructors \u00b6 Name Summary <init> HoverParams(textDocument: TextDocumentIdentifier , position: Position ) Properties \u00b6 Name Summary position The position inside the text document. val position: Position textDocument The text document. val textDocument: TextDocumentIdentifier","title":"HoverParams - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-hover-params/#hoverparams","text":"data class HoverParams","title":"HoverParams"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-hover-params/#constructors","text":"Name Summary <init> HoverParams(textDocument: TextDocumentIdentifier , position: Position )","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-hover-params/#properties","text":"Name Summary position The position inside the text document. val position: Position textDocument The text document. val textDocument: TextDocumentIdentifier","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-hover-params/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / HoverParams / <init> <init> \u00b6 HoverParams(textDocument: TextDocumentIdentifier , position: Position )","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-hover-params/-init-/#init","text":"HoverParams(textDocument: TextDocumentIdentifier , position: Position )","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-hover-params/position/","text":"lsp / org.pinelang.lsp.lsp.models / HoverParams / position position \u00b6 val position: Position The position inside the text document.","title":"position - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-hover-params/position/#position","text":"val position: Position The position inside the text document.","title":"position"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-hover-params/text-document/","text":"lsp / org.pinelang.lsp.lsp.models / HoverParams / textDocument textDocument \u00b6 val textDocument: TextDocumentIdentifier The text document.","title":"textDocument - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-hover-params/text-document/#textdocument","text":"val textDocument: TextDocumentIdentifier The text document.","title":"textDocument"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-hover-response/","text":"lsp / org.pinelang.lsp.lsp.models / HoverResponse HoverResponse \u00b6 data class HoverResponse The result of a hover request. Constructors \u00b6 Name Summary <init> The result of a hover request. HoverResponse(contents: MarkupContent , range: Range ) Properties \u00b6 Name Summary contents The hover\u2019s content val contents: MarkupContent range An optional range is a range inside a text document that is used to visualize a hover, e.g. by changing the background color. val range: Range","title":"HoverResponse - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-hover-response/#hoverresponse","text":"data class HoverResponse The result of a hover request.","title":"HoverResponse"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-hover-response/#constructors","text":"Name Summary <init> The result of a hover request. HoverResponse(contents: MarkupContent , range: Range )","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-hover-response/#properties","text":"Name Summary contents The hover\u2019s content val contents: MarkupContent range An optional range is a range inside a text document that is used to visualize a hover, e.g. by changing the background color. val range: Range","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-hover-response/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / HoverResponse / <init> <init> \u00b6 HoverResponse(contents: MarkupContent , range: Range ) The result of a hover request.","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-hover-response/-init-/#init","text":"HoverResponse(contents: MarkupContent , range: Range ) The result of a hover request.","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-hover-response/contents/","text":"lsp / org.pinelang.lsp.lsp.models / HoverResponse / contents contents \u00b6 val contents: MarkupContent The hover\u2019s content","title":"contents - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-hover-response/contents/#contents","text":"val contents: MarkupContent The hover\u2019s content","title":"contents"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-hover-response/range/","text":"lsp / org.pinelang.lsp.lsp.models / HoverResponse / range range \u00b6 val range: Range An optional range is a range inside a text document that is used to visualize a hover, e.g. by changing the background color.","title":"range - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-hover-response/range/#range","text":"val range: Range An optional range is a range inside a text document that is used to visualize a hover, e.g. by changing the background color.","title":"range"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-client-info/","text":"lsp / org.pinelang.lsp.lsp.models / JsonRPCClientInfo JsonRPCClientInfo \u00b6 data class JsonRPCClientInfo Constructors \u00b6 Name Summary <init> JsonRPCClientInfo(name: String , version: String ) Properties \u00b6 Name Summary name val name: String version val version: String","title":"JsonRPCClientInfo - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-client-info/#jsonrpcclientinfo","text":"data class JsonRPCClientInfo","title":"JsonRPCClientInfo"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-client-info/#constructors","text":"Name Summary <init> JsonRPCClientInfo(name: String , version: String )","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-client-info/#properties","text":"Name Summary name val name: String version val version: String","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-client-info/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / JsonRPCClientInfo / <init> <init> \u00b6 JsonRPCClientInfo(name: String , version: String )","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-client-info/-init-/#init","text":"JsonRPCClientInfo(name: String , version: String )","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-client-info/name/","text":"lsp / org.pinelang.lsp.lsp.models / JsonRPCClientInfo / name name \u00b6 val name: String","title":"name - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-client-info/name/#name","text":"val name: String","title":"name"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-client-info/version/","text":"lsp / org.pinelang.lsp.lsp.models / JsonRPCClientInfo / version version \u00b6 val version: String","title":"version - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-client-info/version/#version","text":"val version: String","title":"version"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-header/","text":"lsp / org.pinelang.lsp.lsp.models / JsonRPCHeader JsonRPCHeader \u00b6 data class JsonRPCHeader Constructors \u00b6 Name Summary <init> JsonRPCHeader(contentLength: Int ) Properties \u00b6 Name Summary contentLength val contentLength: Int","title":"JsonRPCHeader - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-header/#jsonrpcheader","text":"data class JsonRPCHeader","title":"JsonRPCHeader"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-header/#constructors","text":"Name Summary <init> JsonRPCHeader(contentLength: Int )","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-header/#properties","text":"Name Summary contentLength val contentLength: Int","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-header/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / JsonRPCHeader / <init> <init> \u00b6 JsonRPCHeader(contentLength: Int )","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-header/-init-/#init","text":"JsonRPCHeader(contentLength: Int )","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-header/content-length/","text":"lsp / org.pinelang.lsp.lsp.models / JsonRPCHeader / contentLength contentLength \u00b6 val contentLength: Int","title":"contentLength - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-header/content-length/#contentlength","text":"val contentLength: Int","title":"contentLength"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-request/","text":"lsp / org.pinelang.lsp.lsp.models / JsonRPCRequest JsonRPCRequest \u00b6 data class JsonRPCRequest Constructors \u00b6 Name Summary <init> JsonRPCRequest(jsonrpc: String , id: Int ? = null, method: String , params: Any ? = null) Properties \u00b6 Name Summary id val id: Int ? jsonrpc val jsonrpc: String method val method: String params val params: Any ?","title":"JsonRPCRequest - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-request/#jsonrpcrequest","text":"data class JsonRPCRequest","title":"JsonRPCRequest"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-request/#constructors","text":"Name Summary <init> JsonRPCRequest(jsonrpc: String , id: Int ? = null, method: String , params: Any ? = null)","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-request/#properties","text":"Name Summary id val id: Int ? jsonrpc val jsonrpc: String method val method: String params val params: Any ?","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-request/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / JsonRPCRequest / <init> <init> \u00b6 JsonRPCRequest(jsonrpc: String , id: Int ? = null, method: String , params: Any ? = null)","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-request/-init-/#init","text":"JsonRPCRequest(jsonrpc: String , id: Int ? = null, method: String , params: Any ? = null)","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-request/id/","text":"lsp / org.pinelang.lsp.lsp.models / JsonRPCRequest / id id \u00b6 val id: Int ?","title":"id - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-request/id/#id","text":"val id: Int ?","title":"id"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-request/jsonrpc/","text":"lsp / org.pinelang.lsp.lsp.models / JsonRPCRequest / jsonrpc jsonrpc \u00b6 val jsonrpc: String","title":"jsonrpc - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-request/jsonrpc/#jsonrpc","text":"val jsonrpc: String","title":"jsonrpc"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-request/method/","text":"lsp / org.pinelang.lsp.lsp.models / JsonRPCRequest / method method \u00b6 val method: String","title":"method - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-request/method/#method","text":"val method: String","title":"method"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-request/params/","text":"lsp / org.pinelang.lsp.lsp.models / JsonRPCRequest / params params \u00b6 val params: Any ?","title":"params - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-request/params/#params","text":"val params: Any ?","title":"params"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-server-capabilities-impl/","text":"lsp / org.pinelang.lsp.lsp.models / JsonRPCServerCapabilitiesImpl JsonRPCServerCapabilitiesImpl \u00b6 data class JsonRPCServerCapabilitiesImpl Constructors \u00b6 Name Summary <init> JsonRPCServerCapabilitiesImpl(completionProvider: CompletionProvider = CompletionProvider(), definitionProvider: Boolean = true, textDocumentSync: TextDocumentSyncKind = TextDocumentSyncKind.Full, hoverProvider: Boolean = true, documentSymbolProvider: Boolean = true, workspace: WorkspaceFoldersServerCapabilities ? = null) Properties \u00b6 Name Summary completionProvider val completionProvider: CompletionProvider definitionProvider val definitionProvider: Boolean documentSymbolProvider val documentSymbolProvider: Boolean hoverProvider val hoverProvider: Boolean textDocumentSync val textDocumentSync: TextDocumentSyncKind workspace val workspace: WorkspaceFoldersServerCapabilities ?","title":"JsonRPCServerCapabilitiesImpl - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-server-capabilities-impl/#jsonrpcservercapabilitiesimpl","text":"data class JsonRPCServerCapabilitiesImpl","title":"JsonRPCServerCapabilitiesImpl"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-server-capabilities-impl/#constructors","text":"Name Summary <init> JsonRPCServerCapabilitiesImpl(completionProvider: CompletionProvider = CompletionProvider(), definitionProvider: Boolean = true, textDocumentSync: TextDocumentSyncKind = TextDocumentSyncKind.Full, hoverProvider: Boolean = true, documentSymbolProvider: Boolean = true, workspace: WorkspaceFoldersServerCapabilities ? = null)","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-server-capabilities-impl/#properties","text":"Name Summary completionProvider val completionProvider: CompletionProvider definitionProvider val definitionProvider: Boolean documentSymbolProvider val documentSymbolProvider: Boolean hoverProvider val hoverProvider: Boolean textDocumentSync val textDocumentSync: TextDocumentSyncKind workspace val workspace: WorkspaceFoldersServerCapabilities ?","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-server-capabilities-impl/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / JsonRPCServerCapabilitiesImpl / <init> <init> \u00b6 JsonRPCServerCapabilitiesImpl(completionProvider: CompletionProvider = CompletionProvider(), definitionProvider: Boolean = true, textDocumentSync: TextDocumentSyncKind = TextDocumentSyncKind.Full, hoverProvider: Boolean = true, documentSymbolProvider: Boolean = true, workspace: WorkspaceFoldersServerCapabilities ? = null)","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-server-capabilities-impl/-init-/#init","text":"JsonRPCServerCapabilitiesImpl(completionProvider: CompletionProvider = CompletionProvider(), definitionProvider: Boolean = true, textDocumentSync: TextDocumentSyncKind = TextDocumentSyncKind.Full, hoverProvider: Boolean = true, documentSymbolProvider: Boolean = true, workspace: WorkspaceFoldersServerCapabilities ? = null)","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-server-capabilities-impl/completion-provider/","text":"lsp / org.pinelang.lsp.lsp.models / JsonRPCServerCapabilitiesImpl / completionProvider completionProvider \u00b6 val completionProvider: CompletionProvider","title":"completionProvider - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-server-capabilities-impl/completion-provider/#completionprovider","text":"val completionProvider: CompletionProvider","title":"completionProvider"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-server-capabilities-impl/definition-provider/","text":"lsp / org.pinelang.lsp.lsp.models / JsonRPCServerCapabilitiesImpl / definitionProvider definitionProvider \u00b6 val definitionProvider: Boolean","title":"definitionProvider - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-server-capabilities-impl/definition-provider/#definitionprovider","text":"val definitionProvider: Boolean","title":"definitionProvider"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-server-capabilities-impl/document-symbol-provider/","text":"lsp / org.pinelang.lsp.lsp.models / JsonRPCServerCapabilitiesImpl / documentSymbolProvider documentSymbolProvider \u00b6 val documentSymbolProvider: Boolean","title":"documentSymbolProvider - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-server-capabilities-impl/document-symbol-provider/#documentsymbolprovider","text":"val documentSymbolProvider: Boolean","title":"documentSymbolProvider"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-server-capabilities-impl/hover-provider/","text":"lsp / org.pinelang.lsp.lsp.models / JsonRPCServerCapabilitiesImpl / hoverProvider hoverProvider \u00b6 val hoverProvider: Boolean","title":"hoverProvider - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-server-capabilities-impl/hover-provider/#hoverprovider","text":"val hoverProvider: Boolean","title":"hoverProvider"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-server-capabilities-impl/text-document-sync/","text":"lsp / org.pinelang.lsp.lsp.models / JsonRPCServerCapabilitiesImpl / textDocumentSync textDocumentSync \u00b6 val textDocumentSync: TextDocumentSyncKind","title":"textDocumentSync - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-server-capabilities-impl/text-document-sync/#textdocumentsync","text":"val textDocumentSync: TextDocumentSyncKind","title":"textDocumentSync"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-server-capabilities-impl/workspace/","text":"lsp / org.pinelang.lsp.lsp.models / JsonRPCServerCapabilitiesImpl / workspace workspace \u00b6 val workspace: WorkspaceFoldersServerCapabilities ?","title":"workspace - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-json-r-p-c-server-capabilities-impl/workspace/#workspace","text":"val workspace: WorkspaceFoldersServerCapabilities ?","title":"workspace"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-client-capabilities/","text":"lsp / org.pinelang.lsp.lsp.models / LSPClientCapabilities LSPClientCapabilities \u00b6 data class LSPClientCapabilities Constructors \u00b6 Name Summary <init> LSPClientCapabilities(workspace: WorkspaceClientCapabilities ?, textDocument: TextDocumentClientCapabilities ?, window: Any ?, experimental: Map < String , Any >?) Properties \u00b6 Name Summary experimental Experimental client capabilities. val experimental: Map < String , Any >? textDocument Text document specific client capabilities. val textDocument: TextDocumentClientCapabilities ? window Window specific client capabilities. val window: Any ? workspace Workspace specific client capabilities. val workspace: WorkspaceClientCapabilities ?","title":"LSPClientCapabilities - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-client-capabilities/#lspclientcapabilities","text":"data class LSPClientCapabilities","title":"LSPClientCapabilities"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-client-capabilities/#constructors","text":"Name Summary <init> LSPClientCapabilities(workspace: WorkspaceClientCapabilities ?, textDocument: TextDocumentClientCapabilities ?, window: Any ?, experimental: Map < String , Any >?)","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-client-capabilities/#properties","text":"Name Summary experimental Experimental client capabilities. val experimental: Map < String , Any >? textDocument Text document specific client capabilities. val textDocument: TextDocumentClientCapabilities ? window Window specific client capabilities. val window: Any ? workspace Workspace specific client capabilities. val workspace: WorkspaceClientCapabilities ?","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-client-capabilities/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / LSPClientCapabilities / <init> <init> \u00b6 LSPClientCapabilities(workspace: WorkspaceClientCapabilities ?, textDocument: TextDocumentClientCapabilities ?, window: Any ?, experimental: Map < String , Any >?)","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-client-capabilities/-init-/#init","text":"LSPClientCapabilities(workspace: WorkspaceClientCapabilities ?, textDocument: TextDocumentClientCapabilities ?, window: Any ?, experimental: Map < String , Any >?)","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-client-capabilities/experimental/","text":"lsp / org.pinelang.lsp.lsp.models / LSPClientCapabilities / experimental experimental \u00b6 val experimental: Map < String , Any >? Experimental client capabilities.","title":"experimental - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-client-capabilities/experimental/#experimental","text":"val experimental: Map < String , Any >? Experimental client capabilities.","title":"experimental"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-client-capabilities/text-document/","text":"lsp / org.pinelang.lsp.lsp.models / LSPClientCapabilities / textDocument textDocument \u00b6 val textDocument: TextDocumentClientCapabilities ? Text document specific client capabilities.","title":"textDocument - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-client-capabilities/text-document/#textdocument","text":"val textDocument: TextDocumentClientCapabilities ? Text document specific client capabilities.","title":"textDocument"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-client-capabilities/window/","text":"lsp / org.pinelang.lsp.lsp.models / LSPClientCapabilities / window window \u00b6 val window: Any ? Window specific client capabilities.","title":"window - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-client-capabilities/window/#window","text":"val window: Any ? Window specific client capabilities.","title":"window"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-client-capabilities/workspace/","text":"lsp / org.pinelang.lsp.lsp.models / LSPClientCapabilities / workspace workspace \u00b6 val workspace: WorkspaceClientCapabilities ? Workspace specific client capabilities.","title":"workspace - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-client-capabilities/workspace/#workspace","text":"val workspace: WorkspaceClientCapabilities ? Workspace specific client capabilities.","title":"workspace"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-client-info/","text":"lsp / org.pinelang.lsp.lsp.models / LSPClientInfo LSPClientInfo \u00b6 data class LSPClientInfo Constructors \u00b6 Name Summary <init> LSPClientInfo(name: String , version: String ?) Properties \u00b6 Name Summary name val name: String version val version: String ?","title":"LSPClientInfo - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-client-info/#lspclientinfo","text":"data class LSPClientInfo","title":"LSPClientInfo"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-client-info/#constructors","text":"Name Summary <init> LSPClientInfo(name: String , version: String ?)","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-client-info/#properties","text":"Name Summary name val name: String version val version: String ?","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-client-info/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / LSPClientInfo / <init> <init> \u00b6 LSPClientInfo(name: String , version: String ?)","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-client-info/-init-/#init","text":"LSPClientInfo(name: String , version: String ?)","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-client-info/name/","text":"lsp / org.pinelang.lsp.lsp.models / LSPClientInfo / name name \u00b6 val name: String","title":"name - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-client-info/name/#name","text":"val name: String","title":"name"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-client-info/version/","text":"lsp / org.pinelang.lsp.lsp.models / LSPClientInfo / version version \u00b6 val version: String ?","title":"version - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-client-info/version/#version","text":"val version: String ?","title":"version"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-completion-item/","text":"lsp / org.pinelang.lsp.lsp.models / LSPCompletionItem LSPCompletionItem \u00b6 data class LSPCompletionItem Constructors \u00b6 Name Summary <init> LSPCompletionItem(snippetSupport: Boolean ?, commitCharactersSupport: Boolean ?, documentationFormat: Array < String >?, deprecatedSupport: Boolean ?, preselectSupport: Boolean ?, tagSupport: ValueSet ?) Properties \u00b6 Name Summary commitCharactersSupport Client supports commit characters on a completion item. val commitCharactersSupport: Boolean ? deprecatedSupport Client supports the deprecated property on a completion item. val deprecatedSupport: Boolean ? documentationFormat Client supports the follow content formats for the documentation property. The order describes the preferred format of the client. val documentationFormat: Array < String >? preselectSupport Client supports the preselect property on a completion item. val preselectSupport: Boolean ? snippetSupport Client supports snippets as insert text. val snippetSupport: Boolean ? tagSupport Client supports the tag property on a completion item. Clients supporting tags have to handle unknown tags gracefully. Clients especially need to preserve unknown tags when sending a completion item back to the server in a resolve call. val tagSupport: ValueSet ? Functions \u00b6 Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int","title":"LSPCompletionItem - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-completion-item/#lspcompletionitem","text":"data class LSPCompletionItem","title":"LSPCompletionItem"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-completion-item/#constructors","text":"Name Summary <init> LSPCompletionItem(snippetSupport: Boolean ?, commitCharactersSupport: Boolean ?, documentationFormat: Array < String >?, deprecatedSupport: Boolean ?, preselectSupport: Boolean ?, tagSupport: ValueSet ?)","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-completion-item/#properties","text":"Name Summary commitCharactersSupport Client supports commit characters on a completion item. val commitCharactersSupport: Boolean ? deprecatedSupport Client supports the deprecated property on a completion item. val deprecatedSupport: Boolean ? documentationFormat Client supports the follow content formats for the documentation property. The order describes the preferred format of the client. val documentationFormat: Array < String >? preselectSupport Client supports the preselect property on a completion item. val preselectSupport: Boolean ? snippetSupport Client supports snippets as insert text. val snippetSupport: Boolean ? tagSupport Client supports the tag property on a completion item. Clients supporting tags have to handle unknown tags gracefully. Clients especially need to preserve unknown tags when sending a completion item back to the server in a resolve call. val tagSupport: ValueSet ?","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-completion-item/#functions","text":"Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int","title":"Functions"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-completion-item/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / LSPCompletionItem / <init> <init> \u00b6 LSPCompletionItem(snippetSupport: Boolean ?, commitCharactersSupport: Boolean ?, documentationFormat: Array < String >?, deprecatedSupport: Boolean ?, preselectSupport: Boolean ?, tagSupport: ValueSet ?)","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-completion-item/-init-/#init","text":"LSPCompletionItem(snippetSupport: Boolean ?, commitCharactersSupport: Boolean ?, documentationFormat: Array < String >?, deprecatedSupport: Boolean ?, preselectSupport: Boolean ?, tagSupport: ValueSet ?)","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-completion-item/commit-characters-support/","text":"lsp / org.pinelang.lsp.lsp.models / LSPCompletionItem / commitCharactersSupport commitCharactersSupport \u00b6 val commitCharactersSupport: Boolean ? Client supports commit characters on a completion item.","title":"commitCharactersSupport - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-completion-item/commit-characters-support/#commitcharacterssupport","text":"val commitCharactersSupport: Boolean ? Client supports commit characters on a completion item.","title":"commitCharactersSupport"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-completion-item/deprecated-support/","text":"lsp / org.pinelang.lsp.lsp.models / LSPCompletionItem / deprecatedSupport deprecatedSupport \u00b6 val deprecatedSupport: Boolean ? Client supports the deprecated property on a completion item.","title":"deprecatedSupport - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-completion-item/deprecated-support/#deprecatedsupport","text":"val deprecatedSupport: Boolean ? Client supports the deprecated property on a completion item.","title":"deprecatedSupport"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-completion-item/documentation-format/","text":"lsp / org.pinelang.lsp.lsp.models / LSPCompletionItem / documentationFormat documentationFormat \u00b6 val documentationFormat: Array < String >? Client supports the follow content formats for the documentation property. The order describes the preferred format of the client.","title":"documentationFormat - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-completion-item/documentation-format/#documentationformat","text":"val documentationFormat: Array < String >? Client supports the follow content formats for the documentation property. The order describes the preferred format of the client.","title":"documentationFormat"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-completion-item/equals/","text":"lsp / org.pinelang.lsp.lsp.models / LSPCompletionItem / equals equals \u00b6 fun equals(other: Any ?): Boolean","title":"equals - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-completion-item/equals/#equals","text":"fun equals(other: Any ?): Boolean","title":"equals"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-completion-item/hash-code/","text":"lsp / org.pinelang.lsp.lsp.models / LSPCompletionItem / hashCode hashCode \u00b6 fun hashCode(): Int","title":"hashCode - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-completion-item/hash-code/#hashcode","text":"fun hashCode(): Int","title":"hashCode"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-completion-item/preselect-support/","text":"lsp / org.pinelang.lsp.lsp.models / LSPCompletionItem / preselectSupport preselectSupport \u00b6 val preselectSupport: Boolean ? Client supports the preselect property on a completion item.","title":"preselectSupport - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-completion-item/preselect-support/#preselectsupport","text":"val preselectSupport: Boolean ? Client supports the preselect property on a completion item.","title":"preselectSupport"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-completion-item/snippet-support/","text":"lsp / org.pinelang.lsp.lsp.models / LSPCompletionItem / snippetSupport snippetSupport \u00b6 val snippetSupport: Boolean ? Client supports snippets as insert text. A snippet can define tab stops and placeholders with $1 , $2 and ${3:foo} . $0 defines the final tab stop, it defaults to the end of the snippet. Placeholders with equal identifiers are linked, that is typing in one will update others too.","title":"snippetSupport - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-completion-item/snippet-support/#snippetsupport","text":"val snippetSupport: Boolean ? Client supports snippets as insert text. A snippet can define tab stops and placeholders with $1 , $2 and ${3:foo} . $0 defines the final tab stop, it defaults to the end of the snippet. Placeholders with equal identifiers are linked, that is typing in one will update others too.","title":"snippetSupport"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-completion-item/tag-support/","text":"lsp / org.pinelang.lsp.lsp.models / LSPCompletionItem / tagSupport tagSupport \u00b6 val tagSupport: ValueSet ? Client supports the tag property on a completion item. Clients supporting tags have to handle unknown tags gracefully. Clients especially need to preserve unknown tags when sending a completion item back to the server in a resolve call. Since 3.15.0","title":"tagSupport - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-completion-item/tag-support/#tagsupport","text":"val tagSupport: ValueSet ? Client supports the tag property on a completion item. Clients supporting tags have to handle unknown tags gracefully. Clients especially need to preserve unknown tags when sending a completion item back to the server in a resolve call. Since 3.15.0","title":"tagSupport"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-completion-list/","text":"lsp / org.pinelang.lsp.lsp.models / LSPCompletionList LSPCompletionList \u00b6 data class LSPCompletionList Represents a collection of completion items to be presented in the editor. Constructors \u00b6 Name Summary <init> Represents a collection of completion items to be presented in the editor. LSPCompletionList(isIncomplete: Boolean = false, items: List < CompletionItem >) Properties \u00b6 Name Summary isIncomplete This list it not complete. Further typing should result in recomputing this list. val isIncomplete: Boolean items The completion items. val items: List < CompletionItem >","title":"LSPCompletionList - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-completion-list/#lspcompletionlist","text":"data class LSPCompletionList Represents a collection of completion items to be presented in the editor.","title":"LSPCompletionList"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-completion-list/#constructors","text":"Name Summary <init> Represents a collection of completion items to be presented in the editor. LSPCompletionList(isIncomplete: Boolean = false, items: List < CompletionItem >)","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-completion-list/#properties","text":"Name Summary isIncomplete This list it not complete. Further typing should result in recomputing this list. val isIncomplete: Boolean items The completion items. val items: List < CompletionItem >","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-completion-list/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / LSPCompletionList / <init> <init> \u00b6 LSPCompletionList(isIncomplete: Boolean = false, items: List < CompletionItem >) Represents a collection of completion items to be presented in the editor.","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-completion-list/-init-/#init","text":"LSPCompletionList(isIncomplete: Boolean = false, items: List < CompletionItem >) Represents a collection of completion items to be presented in the editor.","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-completion-list/is-incomplete/","text":"lsp / org.pinelang.lsp.lsp.models / LSPCompletionList / isIncomplete isIncomplete \u00b6 val isIncomplete: Boolean This list it not complete. Further typing should result in recomputing this list.","title":"isIncomplete - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-completion-list/is-incomplete/#isincomplete","text":"val isIncomplete: Boolean This list it not complete. Further typing should result in recomputing this list.","title":"isIncomplete"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-completion-list/items/","text":"lsp / org.pinelang.lsp.lsp.models / LSPCompletionList / items items \u00b6 val items: List < CompletionItem > The completion items.","title":"items - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-completion-list/items/#items","text":"val items: List < CompletionItem > The completion items.","title":"items"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-diagnostic/","text":"lsp / org.pinelang.lsp.lsp.models / LSPDiagnostic LSPDiagnostic \u00b6 data class LSPDiagnostic Constructors \u00b6 Name Summary <init> LSPDiagnostic(range: Range , code: Int , message: String , severity: Int ? = null, source: String ? = null, relatedInformation: List < DiagnosticRelatedInformation >? = null) Properties \u00b6 Name Summary code The diagnostic\u2019s code, which might appear in the user interface. val code: Int message The diagnostic\u2019s message. val message: String range The range at which the message applies. val range: Range relatedInformation An array of related diagnostic information, e.g. when symbol-names within a scope collide all definitions can be marked via this property. val relatedInformation: List < DiagnosticRelatedInformation >? severity The diagnostic\u2019s severity. Can be omitted. If omitted it is up to the client to interpret diagnostics as error, warning, info or hint. val severity: Int ? source A human-readable string describing the source of this diagnostic, e.g. \u2018typescript\u2019 or \u2018super lint\u2019. val source: String ?","title":"LSPDiagnostic - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-diagnostic/#lspdiagnostic","text":"data class LSPDiagnostic","title":"LSPDiagnostic"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-diagnostic/#constructors","text":"Name Summary <init> LSPDiagnostic(range: Range , code: Int , message: String , severity: Int ? = null, source: String ? = null, relatedInformation: List < DiagnosticRelatedInformation >? = null)","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-diagnostic/#properties","text":"Name Summary code The diagnostic\u2019s code, which might appear in the user interface. val code: Int message The diagnostic\u2019s message. val message: String range The range at which the message applies. val range: Range relatedInformation An array of related diagnostic information, e.g. when symbol-names within a scope collide all definitions can be marked via this property. val relatedInformation: List < DiagnosticRelatedInformation >? severity The diagnostic\u2019s severity. Can be omitted. If omitted it is up to the client to interpret diagnostics as error, warning, info or hint. val severity: Int ? source A human-readable string describing the source of this diagnostic, e.g. \u2018typescript\u2019 or \u2018super lint\u2019. val source: String ?","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-diagnostic/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / LSPDiagnostic / <init> <init> \u00b6 LSPDiagnostic(range: Range , code: Int , message: String , severity: Int ? = null, source: String ? = null, relatedInformation: List < DiagnosticRelatedInformation >? = null)","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-diagnostic/-init-/#init","text":"LSPDiagnostic(range: Range , code: Int , message: String , severity: Int ? = null, source: String ? = null, relatedInformation: List < DiagnosticRelatedInformation >? = null)","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-diagnostic/code/","text":"lsp / org.pinelang.lsp.lsp.models / LSPDiagnostic / code code \u00b6 val code: Int The diagnostic\u2019s code, which might appear in the user interface.","title":"code - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-diagnostic/code/#code","text":"val code: Int The diagnostic\u2019s code, which might appear in the user interface.","title":"code"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-diagnostic/message/","text":"lsp / org.pinelang.lsp.lsp.models / LSPDiagnostic / message message \u00b6 val message: String The diagnostic\u2019s message.","title":"message - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-diagnostic/message/#message","text":"val message: String The diagnostic\u2019s message.","title":"message"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-diagnostic/range/","text":"lsp / org.pinelang.lsp.lsp.models / LSPDiagnostic / range range \u00b6 val range: Range The range at which the message applies.","title":"range - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-diagnostic/range/#range","text":"val range: Range The range at which the message applies.","title":"range"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-diagnostic/related-information/","text":"lsp / org.pinelang.lsp.lsp.models / LSPDiagnostic / relatedInformation relatedInformation \u00b6 val relatedInformation: List < DiagnosticRelatedInformation >? An array of related diagnostic information, e.g. when symbol-names within a scope collide all definitions can be marked via this property.","title":"relatedInformation - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-diagnostic/related-information/#relatedinformation","text":"val relatedInformation: List < DiagnosticRelatedInformation >? An array of related diagnostic information, e.g. when symbol-names within a scope collide all definitions can be marked via this property.","title":"relatedInformation"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-diagnostic/severity/","text":"lsp / org.pinelang.lsp.lsp.models / LSPDiagnostic / severity severity \u00b6 val severity: Int ? The diagnostic\u2019s severity. Can be omitted. If omitted it is up to the client to interpret diagnostics as error, warning, info or hint. 1: Reports an error. 2: Reports a warning. 3: Reports an information.","title":"severity - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-diagnostic/severity/#severity","text":"val severity: Int ? The diagnostic\u2019s severity. Can be omitted. If omitted it is up to the client to interpret diagnostics as error, warning, info or hint. 1: Reports an error. 2: Reports a warning. 3: Reports an information.","title":"severity"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-diagnostic/source/","text":"lsp / org.pinelang.lsp.lsp.models / LSPDiagnostic / source source \u00b6 val source: String ? A human-readable string describing the source of this diagnostic, e.g. \u2018typescript\u2019 or \u2018super lint\u2019.","title":"source - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-diagnostic/source/#source","text":"val source: String ? A human-readable string describing the source of this diagnostic, e.g. \u2018typescript\u2019 or \u2018super lint\u2019.","title":"source"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-empty-params/","text":"lsp / org.pinelang.lsp.lsp.models / LSPEmptyParams LSPEmptyParams \u00b6 class LSPEmptyParams Constructors \u00b6 Name Summary <init> LSPEmptyParams()","title":"LSPEmptyParams - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-empty-params/#lspemptyparams","text":"class LSPEmptyParams","title":"LSPEmptyParams"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-empty-params/#constructors","text":"Name Summary <init> LSPEmptyParams()","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-empty-params/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / LSPEmptyParams / <init> <init> \u00b6 LSPEmptyParams()","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-empty-params/-init-/#init","text":"LSPEmptyParams()","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-failure-handling/","text":"lsp / org.pinelang.lsp.lsp.models / LSPFailureHandling LSPFailureHandling \u00b6 enum class LSPFailureHandling Enum Values \u00b6 Name Summary abort transactional undo textOnlyTransactional","title":"LSPFailureHandling - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-failure-handling/#lspfailurehandling","text":"enum class LSPFailureHandling","title":"LSPFailureHandling"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-failure-handling/#enum-values","text":"Name Summary abort transactional undo textOnlyTransactional","title":"Enum Values"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-failure-handling/abort/","text":"lsp / org.pinelang.lsp.lsp.models / LSPFailureHandling / abort abort \u00b6 abort","title":"abort - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-failure-handling/abort/#abort","text":"abort","title":"abort"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-failure-handling/text-only-transactional/","text":"lsp / org.pinelang.lsp.lsp.models / LSPFailureHandling / textOnlyTransactional textOnlyTransactional \u00b6 textOnlyTransactional","title":"textOnlyTransactional - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-failure-handling/text-only-transactional/#textonlytransactional","text":"textOnlyTransactional","title":"textOnlyTransactional"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-failure-handling/transactional/","text":"lsp / org.pinelang.lsp.lsp.models / LSPFailureHandling / transactional transactional \u00b6 transactional","title":"transactional - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-failure-handling/transactional/#transactional","text":"transactional","title":"transactional"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-failure-handling/undo/","text":"lsp / org.pinelang.lsp.lsp.models / LSPFailureHandling / undo undo \u00b6 undo","title":"undo - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-failure-handling/undo/#undo","text":"undo","title":"undo"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-initialize-params/","text":"lsp / org.pinelang.lsp.lsp.models / LSPInitializeParams LSPInitializeParams \u00b6 data class LSPInitializeParams Constructors \u00b6 Name Summary <init> LSPInitializeParams(processId: Double ?, clientInfo: LSPClientInfo ?, rootPath: String ?, rootUri: String ?, capabilities: LSPClientCapabilities , initializationOptions: Map < String , Any >?, trace: String ?) Properties \u00b6 Name Summary capabilities The capabilities provided by the client (editor or tool) val capabilities: LSPClientCapabilities clientInfo Information about the client val clientInfo: LSPClientInfo ? initializationOptions User provided initialization options. val initializationOptions: Map < String , Any >? processId The process Id of the parent process that started the server. val processId: Double ? rootPath The rootPath of the workspace. Is null if no folder is open. val rootPath: String ? rootUri The rootUri of the workspace. Is null if no folder is open. If both rootPath and rootUri are set rootUri wins. val rootUri: String ? trace The initial trace setting. If omitted trace is disabled (\u2018off\u2019). val trace: String ?","title":"LSPInitializeParams - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-initialize-params/#lspinitializeparams","text":"data class LSPInitializeParams","title":"LSPInitializeParams"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-initialize-params/#constructors","text":"Name Summary <init> LSPInitializeParams(processId: Double ?, clientInfo: LSPClientInfo ?, rootPath: String ?, rootUri: String ?, capabilities: LSPClientCapabilities , initializationOptions: Map < String , Any >?, trace: String ?)","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-initialize-params/#properties","text":"Name Summary capabilities The capabilities provided by the client (editor or tool) val capabilities: LSPClientCapabilities clientInfo Information about the client val clientInfo: LSPClientInfo ? initializationOptions User provided initialization options. val initializationOptions: Map < String , Any >? processId The process Id of the parent process that started the server. val processId: Double ? rootPath The rootPath of the workspace. Is null if no folder is open. val rootPath: String ? rootUri The rootUri of the workspace. Is null if no folder is open. If both rootPath and rootUri are set rootUri wins. val rootUri: String ? trace The initial trace setting. If omitted trace is disabled (\u2018off\u2019). val trace: String ?","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-initialize-params/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / LSPInitializeParams / <init> <init> \u00b6 LSPInitializeParams(processId: Double ?, clientInfo: LSPClientInfo ?, rootPath: String ?, rootUri: String ?, capabilities: LSPClientCapabilities , initializationOptions: Map < String , Any >?, trace: String ?)","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-initialize-params/-init-/#init","text":"LSPInitializeParams(processId: Double ?, clientInfo: LSPClientInfo ?, rootPath: String ?, rootUri: String ?, capabilities: LSPClientCapabilities , initializationOptions: Map < String , Any >?, trace: String ?)","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-initialize-params/capabilities/","text":"lsp / org.pinelang.lsp.lsp.models / LSPInitializeParams / capabilities capabilities \u00b6 val capabilities: LSPClientCapabilities The capabilities provided by the client (editor or tool)","title":"capabilities - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-initialize-params/capabilities/#capabilities","text":"val capabilities: LSPClientCapabilities The capabilities provided by the client (editor or tool)","title":"capabilities"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-initialize-params/client-info/","text":"lsp / org.pinelang.lsp.lsp.models / LSPInitializeParams / clientInfo clientInfo \u00b6 val clientInfo: LSPClientInfo ? Information about the client Since 3.15.0","title":"clientInfo - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-initialize-params/client-info/#clientinfo","text":"val clientInfo: LSPClientInfo ? Information about the client Since 3.15.0","title":"clientInfo"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-initialize-params/initialization-options/","text":"lsp / org.pinelang.lsp.lsp.models / LSPInitializeParams / initializationOptions initializationOptions \u00b6 val initializationOptions: Map < String , Any >? User provided initialization options.","title":"initializationOptions - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-initialize-params/initialization-options/#initializationoptions","text":"val initializationOptions: Map < String , Any >? User provided initialization options.","title":"initializationOptions"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-initialize-params/process-id/","text":"lsp / org.pinelang.lsp.lsp.models / LSPInitializeParams / processId processId \u00b6 val processId: Double ? The process Id of the parent process that started the server.","title":"processId - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-initialize-params/process-id/#processid","text":"val processId: Double ? The process Id of the parent process that started the server.","title":"processId"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-initialize-params/root-path/","text":"lsp / org.pinelang.lsp.lsp.models / LSPInitializeParams / rootPath rootPath \u00b6 val rootPath: String ? The rootPath of the workspace. Is null if no folder is open. Deprecated in favour of rootUri.","title":"rootPath - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-initialize-params/root-path/#rootpath","text":"val rootPath: String ? The rootPath of the workspace. Is null if no folder is open. Deprecated in favour of rootUri.","title":"rootPath"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-initialize-params/root-uri/","text":"lsp / org.pinelang.lsp.lsp.models / LSPInitializeParams / rootUri rootUri \u00b6 val rootUri: String ? The rootUri of the workspace. Is null if no folder is open. If both rootPath and rootUri are set rootUri wins. Deprecated in favour of workspaceFolders.","title":"rootUri - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-initialize-params/root-uri/#rooturi","text":"val rootUri: String ? The rootUri of the workspace. Is null if no folder is open. If both rootPath and rootUri are set rootUri wins. Deprecated in favour of workspaceFolders.","title":"rootUri"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-initialize-params/trace/","text":"lsp / org.pinelang.lsp.lsp.models / LSPInitializeParams / trace trace \u00b6 val trace: String ? The initial trace setting. If omitted trace is disabled (\u2018off\u2019).","title":"trace - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-initialize-params/trace/#trace","text":"val trace: String ? The initial trace setting. If omitted trace is disabled (\u2018off\u2019).","title":"trace"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-initialize-server-result/","text":"lsp / org.pinelang.lsp.lsp.models / LSPInitializeServerResult LSPInitializeServerResult \u00b6 data class LSPInitializeServerResult Constructors \u00b6 Name Summary <init> LSPInitializeServerResult(capabilities: JsonRPCServerCapabilitiesImpl , serverInfo: LSPServerInfo ) Properties \u00b6 Name Summary capabilities val capabilities: JsonRPCServerCapabilitiesImpl serverInfo val serverInfo: LSPServerInfo","title":"LSPInitializeServerResult - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-initialize-server-result/#lspinitializeserverresult","text":"data class LSPInitializeServerResult","title":"LSPInitializeServerResult"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-initialize-server-result/#constructors","text":"Name Summary <init> LSPInitializeServerResult(capabilities: JsonRPCServerCapabilitiesImpl , serverInfo: LSPServerInfo )","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-initialize-server-result/#properties","text":"Name Summary capabilities val capabilities: JsonRPCServerCapabilitiesImpl serverInfo val serverInfo: LSPServerInfo","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-initialize-server-result/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / LSPInitializeServerResult / <init> <init> \u00b6 LSPInitializeServerResult(capabilities: JsonRPCServerCapabilitiesImpl , serverInfo: LSPServerInfo )","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-initialize-server-result/-init-/#init","text":"LSPInitializeServerResult(capabilities: JsonRPCServerCapabilitiesImpl , serverInfo: LSPServerInfo )","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-initialize-server-result/capabilities/","text":"lsp / org.pinelang.lsp.lsp.models / LSPInitializeServerResult / capabilities capabilities \u00b6 val capabilities: JsonRPCServerCapabilitiesImpl","title":"capabilities - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-initialize-server-result/capabilities/#capabilities","text":"val capabilities: JsonRPCServerCapabilitiesImpl","title":"capabilities"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-initialize-server-result/server-info/","text":"lsp / org.pinelang.lsp.lsp.models / LSPInitializeServerResult / serverInfo serverInfo \u00b6 val serverInfo: LSPServerInfo","title":"serverInfo - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-initialize-server-result/server-info/#serverinfo","text":"val serverInfo: LSPServerInfo","title":"serverInfo"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-notification/","text":"lsp / org.pinelang.lsp.lsp.models / LSPNotification LSPNotification \u00b6 data class LSPNotification Constructors \u00b6 Name Summary <init> LSPNotification(method: String , params: Any ?, jsonrpc: String = \"2.0\") Properties \u00b6 Name Summary jsonrpc val jsonrpc: String method The method to be invoked. val method: String params The notification\u2019s params. val params: Any ?","title":"LSPNotification - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-notification/#lspnotification","text":"data class LSPNotification","title":"LSPNotification"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-notification/#constructors","text":"Name Summary <init> LSPNotification(method: String , params: Any ?, jsonrpc: String = \"2.0\")","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-notification/#properties","text":"Name Summary jsonrpc val jsonrpc: String method The method to be invoked. val method: String params The notification\u2019s params. val params: Any ?","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-notification/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / LSPNotification / <init> <init> \u00b6 LSPNotification(method: String , params: Any ?, jsonrpc: String = \"2.0\")","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-notification/-init-/#init","text":"LSPNotification(method: String , params: Any ?, jsonrpc: String = \"2.0\")","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-notification/jsonrpc/","text":"lsp / org.pinelang.lsp.lsp.models / LSPNotification / jsonrpc jsonrpc \u00b6 val jsonrpc: String","title":"jsonrpc - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-notification/jsonrpc/#jsonrpc","text":"val jsonrpc: String","title":"jsonrpc"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-notification/method/","text":"lsp / org.pinelang.lsp.lsp.models / LSPNotification / method method \u00b6 val method: String The method to be invoked.","title":"method - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-notification/method/#method","text":"val method: String The method to be invoked.","title":"method"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-notification/params/","text":"lsp / org.pinelang.lsp.lsp.models / LSPNotification / params params \u00b6 val params: Any ? The notification\u2019s params.","title":"params - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-notification/params/#params","text":"val params: Any ? The notification\u2019s params.","title":"params"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-resource-operation/","text":"lsp / org.pinelang.lsp.lsp.models / LSPResourceOperation LSPResourceOperation \u00b6 enum class LSPResourceOperation Enum Values \u00b6 Name Summary create rename delete","title":"LSPResourceOperation - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-resource-operation/#lspresourceoperation","text":"enum class LSPResourceOperation","title":"LSPResourceOperation"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-resource-operation/#enum-values","text":"Name Summary create rename delete","title":"Enum Values"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-resource-operation/create/","text":"lsp / org.pinelang.lsp.lsp.models / LSPResourceOperation / create create \u00b6 create","title":"create - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-resource-operation/create/#create","text":"create","title":"create"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-resource-operation/delete/","text":"lsp / org.pinelang.lsp.lsp.models / LSPResourceOperation / delete delete \u00b6 delete","title":"delete - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-resource-operation/delete/#delete","text":"delete","title":"delete"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-resource-operation/rename/","text":"lsp / org.pinelang.lsp.lsp.models / LSPResourceOperation / rename rename \u00b6 rename","title":"rename - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-resource-operation/rename/#rename","text":"rename","title":"rename"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-response/","text":"lsp / org.pinelang.lsp.lsp.models / LSPResponse LSPResponse \u00b6 data class LSPResponse Constructors \u00b6 Name Summary <init> LSPResponse(id: Int ?, result: Any ?, error: ResponseError ? = null, jsonrpc: String = \"2.0\") Properties \u00b6 Name Summary error val error: ResponseError ? id val id: Int ? jsonrpc val jsonrpc: String result val result: Any ?","title":"LSPResponse - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-response/#lspresponse","text":"data class LSPResponse","title":"LSPResponse"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-response/#constructors","text":"Name Summary <init> LSPResponse(id: Int ?, result: Any ?, error: ResponseError ? = null, jsonrpc: String = \"2.0\")","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-response/#properties","text":"Name Summary error val error: ResponseError ? id val id: Int ? jsonrpc val jsonrpc: String result val result: Any ?","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-response/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / LSPResponse / <init> <init> \u00b6 LSPResponse(id: Int ?, result: Any ?, error: ResponseError ? = null, jsonrpc: String = \"2.0\")","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-response/-init-/#init","text":"LSPResponse(id: Int ?, result: Any ?, error: ResponseError ? = null, jsonrpc: String = \"2.0\")","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-response/error/","text":"lsp / org.pinelang.lsp.lsp.models / LSPResponse / error error \u00b6 val error: ResponseError ?","title":"error - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-response/error/#error","text":"val error: ResponseError ?","title":"error"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-response/id/","text":"lsp / org.pinelang.lsp.lsp.models / LSPResponse / id id \u00b6 val id: Int ?","title":"id - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-response/id/#id","text":"val id: Int ?","title":"id"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-response/jsonrpc/","text":"lsp / org.pinelang.lsp.lsp.models / LSPResponse / jsonrpc jsonrpc \u00b6 val jsonrpc: String","title":"jsonrpc - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-response/jsonrpc/#jsonrpc","text":"val jsonrpc: String","title":"jsonrpc"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-response/result/","text":"lsp / org.pinelang.lsp.lsp.models / LSPResponse / result result \u00b6 val result: Any ?","title":"result - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-response/result/#result","text":"val result: Any ?","title":"result"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-server-info/","text":"lsp / org.pinelang.lsp.lsp.models / LSPServerInfo LSPServerInfo \u00b6 data class LSPServerInfo Constructors \u00b6 Name Summary <init> LSPServerInfo(name: String , version: String ? = null) Properties \u00b6 Name Summary name val name: String version val version: String ?","title":"LSPServerInfo - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-server-info/#lspserverinfo","text":"data class LSPServerInfo","title":"LSPServerInfo"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-server-info/#constructors","text":"Name Summary <init> LSPServerInfo(name: String , version: String ? = null)","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-server-info/#properties","text":"Name Summary name val name: String version val version: String ?","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-server-info/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / LSPServerInfo / <init> <init> \u00b6 LSPServerInfo(name: String , version: String ? = null)","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-server-info/-init-/#init","text":"LSPServerInfo(name: String , version: String ? = null)","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-server-info/name/","text":"lsp / org.pinelang.lsp.lsp.models / LSPServerInfo / name name \u00b6 val name: String","title":"name - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-server-info/name/#name","text":"val name: String","title":"name"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-server-info/version/","text":"lsp / org.pinelang.lsp.lsp.models / LSPServerInfo / version version \u00b6 val version: String ?","title":"version - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-l-s-p-server-info/version/#version","text":"val version: String ?","title":"version"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-location/","text":"lsp / org.pinelang.lsp.lsp.models / Location Location \u00b6 data class Location Constructors \u00b6 Name Summary <init> Location(uri: String , range: Range ) Properties \u00b6 Name Summary range val range: Range uri val uri: String","title":"Location - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-location/#location","text":"data class Location","title":"Location"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-location/#constructors","text":"Name Summary <init> Location(uri: String , range: Range )","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-location/#properties","text":"Name Summary range val range: Range uri val uri: String","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-location/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / Location / <init> <init> \u00b6 Location(uri: String , range: Range )","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-location/-init-/#init","text":"Location(uri: String , range: Range )","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-location/range/","text":"lsp / org.pinelang.lsp.lsp.models / Location / range range \u00b6 val range: Range","title":"range - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-location/range/#range","text":"val range: Range","title":"range"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-location/uri/","text":"lsp / org.pinelang.lsp.lsp.models / Location / uri uri \u00b6 val uri: String","title":"uri - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-location/uri/#uri","text":"val uri: String","title":"uri"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-markup-content/","text":"lsp / org.pinelang.lsp.lsp.models / MarkupContent MarkupContent \u00b6 data class MarkupContent Constructors \u00b6 Name Summary <init> MarkupContent(value: String , kind: String = \"markdown\") Properties \u00b6 Name Summary kind val kind: String value val value: String","title":"MarkupContent - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-markup-content/#markupcontent","text":"data class MarkupContent","title":"MarkupContent"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-markup-content/#constructors","text":"Name Summary <init> MarkupContent(value: String , kind: String = \"markdown\")","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-markup-content/#properties","text":"Name Summary kind val kind: String value val value: String","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-markup-content/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / MarkupContent / <init> <init> \u00b6 MarkupContent(value: String , kind: String = \"markdown\")","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-markup-content/-init-/#init","text":"MarkupContent(value: String , kind: String = \"markdown\")","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-markup-content/kind/","text":"lsp / org.pinelang.lsp.lsp.models / MarkupContent / kind kind \u00b6 val kind: String","title":"kind - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-markup-content/kind/#kind","text":"val kind: String","title":"kind"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-markup-content/value/","text":"lsp / org.pinelang.lsp.lsp.models / MarkupContent / value value \u00b6 val value: String","title":"value - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-markup-content/value/#value","text":"val value: String","title":"value"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-parameter-information/","text":"lsp / org.pinelang.lsp.lsp.models / ParameterInformation ParameterInformation \u00b6 data class ParameterInformation Constructors \u00b6 Name Summary <init> ParameterInformation(labelOffsetSupport: Boolean ?) Properties \u00b6 Name Summary labelOffsetSupport val labelOffsetSupport: Boolean ?","title":"ParameterInformation - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-parameter-information/#parameterinformation","text":"data class ParameterInformation","title":"ParameterInformation"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-parameter-information/#constructors","text":"Name Summary <init> ParameterInformation(labelOffsetSupport: Boolean ?)","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-parameter-information/#properties","text":"Name Summary labelOffsetSupport val labelOffsetSupport: Boolean ?","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-parameter-information/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / ParameterInformation / <init> <init> \u00b6 ParameterInformation(labelOffsetSupport: Boolean ?)","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-parameter-information/-init-/#init","text":"ParameterInformation(labelOffsetSupport: Boolean ?)","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-parameter-information/label-offset-support/","text":"lsp / org.pinelang.lsp.lsp.models / ParameterInformation / labelOffsetSupport labelOffsetSupport \u00b6 val labelOffsetSupport: Boolean ?","title":"labelOffsetSupport - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-parameter-information/label-offset-support/#labeloffsetsupport","text":"val labelOffsetSupport: Boolean ?","title":"labelOffsetSupport"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-position/","text":"lsp / org.pinelang.lsp.lsp.models / Position Position \u00b6 data class Position Constructors \u00b6 Name Summary <init> Position(line: Int , character: Int ) Properties \u00b6 Name Summary character val character: Int line val line: Int","title":"Position - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-position/#position","text":"data class Position","title":"Position"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-position/#constructors","text":"Name Summary <init> Position(line: Int , character: Int )","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-position/#properties","text":"Name Summary character val character: Int line val line: Int","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-position/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / Position / <init> <init> \u00b6 Position(line: Int , character: Int )","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-position/-init-/#init","text":"Position(line: Int , character: Int )","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-position/character/","text":"lsp / org.pinelang.lsp.lsp.models / Position / character character \u00b6 val character: Int","title":"character - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-position/character/#character","text":"val character: Int","title":"character"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-position/line/","text":"lsp / org.pinelang.lsp.lsp.models / Position / line line \u00b6 val line: Int","title":"line - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-position/line/#line","text":"val line: Int","title":"line"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-publish-diagnostics-client-capabilities/","text":"lsp / org.pinelang.lsp.lsp.models / PublishDiagnosticsClientCapabilities PublishDiagnosticsClientCapabilities \u00b6 data class PublishDiagnosticsClientCapabilities Constructors \u00b6 Name Summary <init> PublishDiagnosticsClientCapabilities(relatedInformation: Boolean ?, tagSupport: ValueSet ?, versionSupport: Boolean ?) Properties \u00b6 Name Summary relatedInformation Whether the clients accepts diagnostics with related information. val relatedInformation: Boolean ? tagSupport Client supports the tag property to provide meta data about a diagnostic. Clients supporting tags have to handle unknown tags gracefully. val tagSupport: ValueSet ? versionSupport Whether the client interprets the version property of the textDocument/publishDiagnostics notification s parameter. val versionSupport: [ Boolean ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html) ?`","title":"PublishDiagnosticsClientCapabilities - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-publish-diagnostics-client-capabilities/#publishdiagnosticsclientcapabilities","text":"data class PublishDiagnosticsClientCapabilities","title":"PublishDiagnosticsClientCapabilities"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-publish-diagnostics-client-capabilities/#constructors","text":"Name Summary <init> PublishDiagnosticsClientCapabilities(relatedInformation: Boolean ?, tagSupport: ValueSet ?, versionSupport: Boolean ?)","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-publish-diagnostics-client-capabilities/#properties","text":"Name Summary relatedInformation Whether the clients accepts diagnostics with related information. val relatedInformation: Boolean ? tagSupport Client supports the tag property to provide meta data about a diagnostic. Clients supporting tags have to handle unknown tags gracefully. val tagSupport: ValueSet ? versionSupport Whether the client interprets the version property of the textDocument/publishDiagnostics notification s parameter. val versionSupport: [ Boolean ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html) ?`","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-publish-diagnostics-client-capabilities/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / PublishDiagnosticsClientCapabilities / <init> <init> \u00b6 PublishDiagnosticsClientCapabilities(relatedInformation: Boolean ?, tagSupport: ValueSet ?, versionSupport: Boolean ?)","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-publish-diagnostics-client-capabilities/-init-/#init","text":"PublishDiagnosticsClientCapabilities(relatedInformation: Boolean ?, tagSupport: ValueSet ?, versionSupport: Boolean ?)","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-publish-diagnostics-client-capabilities/related-information/","text":"lsp / org.pinelang.lsp.lsp.models / PublishDiagnosticsClientCapabilities / relatedInformation relatedInformation \u00b6 val relatedInformation: Boolean ? Whether the clients accepts diagnostics with related information.","title":"relatedInformation - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-publish-diagnostics-client-capabilities/related-information/#relatedinformation","text":"val relatedInformation: Boolean ? Whether the clients accepts diagnostics with related information.","title":"relatedInformation"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-publish-diagnostics-client-capabilities/tag-support/","text":"lsp / org.pinelang.lsp.lsp.models / PublishDiagnosticsClientCapabilities / tagSupport tagSupport \u00b6 val tagSupport: ValueSet ? Client supports the tag property to provide meta data about a diagnostic. Clients supporting tags have to handle unknown tags gracefully. Since 3.15.0","title":"tagSupport - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-publish-diagnostics-client-capabilities/tag-support/#tagsupport","text":"val tagSupport: ValueSet ? Client supports the tag property to provide meta data about a diagnostic. Clients supporting tags have to handle unknown tags gracefully. Since 3.15.0","title":"tagSupport"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-publish-diagnostics-client-capabilities/version-support/","text":"lsp / org.pinelang.lsp.lsp.models / PublishDiagnosticsClientCapabilities / versionSupport versionSupport \u00b6 val versionSupport: Boolean ? Whether the client interprets the version property of the textDocument/publishDiagnostics notification`s parameter. Since 3.15.0","title":"versionSupport - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-publish-diagnostics-client-capabilities/version-support/#versionsupport","text":"val versionSupport: Boolean ? Whether the client interprets the version property of the textDocument/publishDiagnostics notification`s parameter. Since 3.15.0","title":"versionSupport"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-publish-diagnostics-params/","text":"lsp / org.pinelang.lsp.lsp.models / PublishDiagnosticsParams PublishDiagnosticsParams \u00b6 data class PublishDiagnosticsParams Constructors \u00b6 Name Summary <init> PublishDiagnosticsParams(uri: String , version: Double ? = null, diagnostics: List < LSPDiagnostic >) Properties \u00b6 Name Summary diagnostics An array of diagnostic information items. val diagnostics: List < LSPDiagnostic > uri The URI for which diagnostic information is reported. val uri: String version Optional the version number of the document the diagnostics are published for. val version: Double ?","title":"PublishDiagnosticsParams - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-publish-diagnostics-params/#publishdiagnosticsparams","text":"data class PublishDiagnosticsParams","title":"PublishDiagnosticsParams"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-publish-diagnostics-params/#constructors","text":"Name Summary <init> PublishDiagnosticsParams(uri: String , version: Double ? = null, diagnostics: List < LSPDiagnostic >)","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-publish-diagnostics-params/#properties","text":"Name Summary diagnostics An array of diagnostic information items. val diagnostics: List < LSPDiagnostic > uri The URI for which diagnostic information is reported. val uri: String version Optional the version number of the document the diagnostics are published for. val version: Double ?","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-publish-diagnostics-params/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / PublishDiagnosticsParams / <init> <init> \u00b6 PublishDiagnosticsParams(uri: String , version: Double ? = null, diagnostics: List < LSPDiagnostic >)","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-publish-diagnostics-params/-init-/#init","text":"PublishDiagnosticsParams(uri: String , version: Double ? = null, diagnostics: List < LSPDiagnostic >)","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-publish-diagnostics-params/diagnostics/","text":"lsp / org.pinelang.lsp.lsp.models / PublishDiagnosticsParams / diagnostics diagnostics \u00b6 val diagnostics: List < LSPDiagnostic > An array of diagnostic information items.","title":"diagnostics - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-publish-diagnostics-params/diagnostics/#diagnostics","text":"val diagnostics: List < LSPDiagnostic > An array of diagnostic information items.","title":"diagnostics"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-publish-diagnostics-params/uri/","text":"lsp / org.pinelang.lsp.lsp.models / PublishDiagnosticsParams / uri uri \u00b6 val uri: String The URI for which diagnostic information is reported.","title":"uri - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-publish-diagnostics-params/uri/#uri","text":"val uri: String The URI for which diagnostic information is reported.","title":"uri"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-publish-diagnostics-params/version/","text":"lsp / org.pinelang.lsp.lsp.models / PublishDiagnosticsParams / version version \u00b6 val version: Double ? Optional the version number of the document the diagnostics are published for. Since 3.15.0","title":"version - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-publish-diagnostics-params/version/#version","text":"val version: Double ? Optional the version number of the document the diagnostics are published for. Since 3.15.0","title":"version"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-range/","text":"lsp / org.pinelang.lsp.lsp.models / Range Range \u00b6 data class Range Selection range for a document. End position is exclusive Constructors \u00b6 Name Summary <init> Selection range for a document. End position is exclusive Range(start: Position , end: Position ) Properties \u00b6 Name Summary end val end: Position start val start: Position","title":"Range - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-range/#range","text":"data class Range Selection range for a document. End position is exclusive","title":"Range"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-range/#constructors","text":"Name Summary <init> Selection range for a document. End position is exclusive Range(start: Position , end: Position )","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-range/#properties","text":"Name Summary end val end: Position start val start: Position","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-range/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / Range / <init> <init> \u00b6 Range(start: Position , end: Position ) Selection range for a document. End position is exclusive","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-range/-init-/#init","text":"Range(start: Position , end: Position ) Selection range for a document. End position is exclusive","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-range/end/","text":"lsp / org.pinelang.lsp.lsp.models / Range / end end \u00b6 val end: Position","title":"end - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-range/end/#end","text":"val end: Position","title":"end"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-range/start/","text":"lsp / org.pinelang.lsp.lsp.models / Range / start start \u00b6 val start: Position","title":"start - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-range/start/#start","text":"val start: Position","title":"start"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-rename-client-capabilities/","text":"lsp / org.pinelang.lsp.lsp.models / RenameClientCapabilities RenameClientCapabilities \u00b6 data class RenameClientCapabilities Constructors \u00b6 Name Summary <init> RenameClientCapabilities(dynamicRegistration: Boolean ?, prepareSupport: Boolean ?) Properties \u00b6 Name Summary dynamicRegistration Whether rename supports dynamic registration. val dynamicRegistration: Boolean ? prepareSupport Client supports testing for validity of rename operations before execution. val prepareSupport: Boolean ?","title":"RenameClientCapabilities - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-rename-client-capabilities/#renameclientcapabilities","text":"data class RenameClientCapabilities","title":"RenameClientCapabilities"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-rename-client-capabilities/#constructors","text":"Name Summary <init> RenameClientCapabilities(dynamicRegistration: Boolean ?, prepareSupport: Boolean ?)","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-rename-client-capabilities/#properties","text":"Name Summary dynamicRegistration Whether rename supports dynamic registration. val dynamicRegistration: Boolean ? prepareSupport Client supports testing for validity of rename operations before execution. val prepareSupport: Boolean ?","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-rename-client-capabilities/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / RenameClientCapabilities / <init> <init> \u00b6 RenameClientCapabilities(dynamicRegistration: Boolean ?, prepareSupport: Boolean ?)","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-rename-client-capabilities/-init-/#init","text":"RenameClientCapabilities(dynamicRegistration: Boolean ?, prepareSupport: Boolean ?)","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-rename-client-capabilities/dynamic-registration/","text":"lsp / org.pinelang.lsp.lsp.models / RenameClientCapabilities / dynamicRegistration dynamicRegistration \u00b6 val dynamicRegistration: Boolean ? Whether rename supports dynamic registration.","title":"dynamicRegistration - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-rename-client-capabilities/dynamic-registration/#dynamicregistration","text":"val dynamicRegistration: Boolean ? Whether rename supports dynamic registration.","title":"dynamicRegistration"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-rename-client-capabilities/prepare-support/","text":"lsp / org.pinelang.lsp.lsp.models / RenameClientCapabilities / prepareSupport prepareSupport \u00b6 val prepareSupport: Boolean ? Client supports testing for validity of rename operations before execution. Since version 3.12.0","title":"prepareSupport - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-rename-client-capabilities/prepare-support/#preparesupport","text":"val prepareSupport: Boolean ? Client supports testing for validity of rename operations before execution. Since version 3.12.0","title":"prepareSupport"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-response-error/","text":"lsp / org.pinelang.lsp.lsp.models / ResponseError ResponseError \u00b6 data class ResponseError Constructors \u00b6 Name Summary <init> ResponseError(code: ErrorCode , message: String ? = null, data: Any ? = null) Properties \u00b6 Name Summary code val code: ErrorCode data val data: Any ? message val message: String ?","title":"ResponseError - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-response-error/#responseerror","text":"data class ResponseError","title":"ResponseError"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-response-error/#constructors","text":"Name Summary <init> ResponseError(code: ErrorCode , message: String ? = null, data: Any ? = null)","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-response-error/#properties","text":"Name Summary code val code: ErrorCode data val data: Any ? message val message: String ?","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-response-error/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / ResponseError / <init> <init> \u00b6 ResponseError(code: ErrorCode , message: String ? = null, data: Any ? = null)","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-response-error/-init-/#init","text":"ResponseError(code: ErrorCode , message: String ? = null, data: Any ? = null)","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-response-error/code/","text":"lsp / org.pinelang.lsp.lsp.models / ResponseError / code code \u00b6 val code: ErrorCode","title":"code - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-response-error/code/#code","text":"val code: ErrorCode","title":"code"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-response-error/data/","text":"lsp / org.pinelang.lsp.lsp.models / ResponseError / data data \u00b6 val data: Any ?","title":"data - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-response-error/data/#data","text":"val data: Any ?","title":"data"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-response-error/message/","text":"lsp / org.pinelang.lsp.lsp.models / ResponseError / message message \u00b6 val message: String ?","title":"message - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-response-error/message/#message","text":"val message: String ?","title":"message"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-signature-help-client-capabilities/","text":"lsp / org.pinelang.lsp.lsp.models / SignatureHelpClientCapabilities SignatureHelpClientCapabilities \u00b6 data class SignatureHelpClientCapabilities Client Capabilities for a SignatureHelpRequest . Constructors \u00b6 Name Summary <init> Client Capabilities for a SignatureHelpRequest . SignatureHelpClientCapabilities(dynamicRegistration: Boolean ?, signatureInformation: SignatureInformation ?, contextSupport: Boolean ?) Properties \u00b6 Name Summary contextSupport The client supports to send additional context information for a textDocument/signatureHelp request. A client that opts into contextSupport will also support the retriggerCharacters on SignatureHelpOptions . val contextSupport: Boolean ? dynamicRegistration Whether signature help supports dynamic registration. val dynamicRegistration: Boolean ? signatureInformation The client supports the following SignatureInformation specific properties. val signatureInformation: SignatureInformation ?","title":"SignatureHelpClientCapabilities - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-signature-help-client-capabilities/#signaturehelpclientcapabilities","text":"data class SignatureHelpClientCapabilities Client Capabilities for a SignatureHelpRequest .","title":"SignatureHelpClientCapabilities"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-signature-help-client-capabilities/#constructors","text":"Name Summary <init> Client Capabilities for a SignatureHelpRequest . SignatureHelpClientCapabilities(dynamicRegistration: Boolean ?, signatureInformation: SignatureInformation ?, contextSupport: Boolean ?)","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-signature-help-client-capabilities/#properties","text":"Name Summary contextSupport The client supports to send additional context information for a textDocument/signatureHelp request. A client that opts into contextSupport will also support the retriggerCharacters on SignatureHelpOptions . val contextSupport: Boolean ? dynamicRegistration Whether signature help supports dynamic registration. val dynamicRegistration: Boolean ? signatureInformation The client supports the following SignatureInformation specific properties. val signatureInformation: SignatureInformation ?","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-signature-help-client-capabilities/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / SignatureHelpClientCapabilities / <init> <init> \u00b6 SignatureHelpClientCapabilities(dynamicRegistration: Boolean ?, signatureInformation: SignatureInformation ?, contextSupport: Boolean ?) Client Capabilities for a SignatureHelpRequest .","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-signature-help-client-capabilities/-init-/#init","text":"SignatureHelpClientCapabilities(dynamicRegistration: Boolean ?, signatureInformation: SignatureInformation ?, contextSupport: Boolean ?) Client Capabilities for a SignatureHelpRequest .","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-signature-help-client-capabilities/context-support/","text":"lsp / org.pinelang.lsp.lsp.models / SignatureHelpClientCapabilities / contextSupport contextSupport \u00b6 val contextSupport: Boolean ? The client supports to send additional context information for a textDocument/signatureHelp request. A client that opts into contextSupport will also support the retriggerCharacters on SignatureHelpOptions . Since 3.15.0","title":"contextSupport - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-signature-help-client-capabilities/context-support/#contextsupport","text":"val contextSupport: Boolean ? The client supports to send additional context information for a textDocument/signatureHelp request. A client that opts into contextSupport will also support the retriggerCharacters on SignatureHelpOptions . Since 3.15.0","title":"contextSupport"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-signature-help-client-capabilities/dynamic-registration/","text":"lsp / org.pinelang.lsp.lsp.models / SignatureHelpClientCapabilities / dynamicRegistration dynamicRegistration \u00b6 val dynamicRegistration: Boolean ? Whether signature help supports dynamic registration.","title":"dynamicRegistration - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-signature-help-client-capabilities/dynamic-registration/#dynamicregistration","text":"val dynamicRegistration: Boolean ? Whether signature help supports dynamic registration.","title":"dynamicRegistration"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-signature-help-client-capabilities/signature-information/","text":"lsp / org.pinelang.lsp.lsp.models / SignatureHelpClientCapabilities / signatureInformation signatureInformation \u00b6 val signatureInformation: SignatureInformation ? The client supports the following SignatureInformation specific properties.","title":"signatureInformation - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-signature-help-client-capabilities/signature-information/#signatureinformation","text":"val signatureInformation: SignatureInformation ? The client supports the following SignatureInformation specific properties.","title":"signatureInformation"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-signature-information/","text":"lsp / org.pinelang.lsp.lsp.models / SignatureInformation SignatureInformation \u00b6 data class SignatureInformation Constructors \u00b6 Name Summary <init> SignatureInformation(documentFormat: IntArray ?, parameterInformation: ParameterInformation ) Properties \u00b6 Name Summary documentFormat val documentFormat: IntArray ? parameterInformation val parameterInformation: ParameterInformation Functions \u00b6 Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int","title":"SignatureInformation - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-signature-information/#signatureinformation","text":"data class SignatureInformation","title":"SignatureInformation"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-signature-information/#constructors","text":"Name Summary <init> SignatureInformation(documentFormat: IntArray ?, parameterInformation: ParameterInformation )","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-signature-information/#properties","text":"Name Summary documentFormat val documentFormat: IntArray ? parameterInformation val parameterInformation: ParameterInformation","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-signature-information/#functions","text":"Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int","title":"Functions"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-signature-information/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / SignatureInformation / <init> <init> \u00b6 SignatureInformation(documentFormat: IntArray ?, parameterInformation: ParameterInformation )","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-signature-information/-init-/#init","text":"SignatureInformation(documentFormat: IntArray ?, parameterInformation: ParameterInformation )","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-signature-information/document-format/","text":"lsp / org.pinelang.lsp.lsp.models / SignatureInformation / documentFormat documentFormat \u00b6 val documentFormat: IntArray ?","title":"documentFormat - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-signature-information/document-format/#documentformat","text":"val documentFormat: IntArray ?","title":"documentFormat"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-signature-information/equals/","text":"lsp / org.pinelang.lsp.lsp.models / SignatureInformation / equals equals \u00b6 fun equals(other: Any ?): Boolean","title":"equals - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-signature-information/equals/#equals","text":"fun equals(other: Any ?): Boolean","title":"equals"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-signature-information/hash-code/","text":"lsp / org.pinelang.lsp.lsp.models / SignatureInformation / hashCode hashCode \u00b6 fun hashCode(): Int","title":"hashCode - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-signature-information/hash-code/#hashcode","text":"fun hashCode(): Int","title":"hashCode"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-signature-information/parameter-information/","text":"lsp / org.pinelang.lsp.lsp.models / SignatureInformation / parameterInformation parameterInformation \u00b6 val parameterInformation: ParameterInformation","title":"parameterInformation - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-signature-information/parameter-information/#parameterinformation","text":"val parameterInformation: ParameterInformation","title":"parameterInformation"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-information/","text":"lsp / org.pinelang.lsp.lsp.models / SymbolInformation SymbolInformation \u00b6 data class SymbolInformation Represents information about programming constructs like variables, classes, interfaces etc. Constructors \u00b6 Name Summary <init> Represents information about programming constructs like variables, classes, interfaces etc. SymbolInformation(name: String , kind: SymbolKind , deprecated: Boolean ?, location: Location , containerName: String ?) Properties \u00b6 Name Summary containerName The name of the symbol containing this symbol. This information is for user interface purposes (e.g. to render a qualifier in the user interface if necessary). It can\u2019t be used to re-infer a hierarchy for the document symbols. val containerName: String ? deprecated Indicates if this symbol is deprecated. val deprecated: Boolean ? kind The kind of this symbol. val kind: SymbolKind location The location of this symbol. The location\u2019s range is used by a tool to reveal the location in the editor. If the symbol is selected in the tool the range\u2019s start information is used to position the cursor. So the range usually spans more then the actual symbol\u2019s name and does normally include things like visibility modifiers. val location: Location name The name of this symbol. val name: String","title":"SymbolInformation - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-information/#symbolinformation","text":"data class SymbolInformation Represents information about programming constructs like variables, classes, interfaces etc.","title":"SymbolInformation"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-information/#constructors","text":"Name Summary <init> Represents information about programming constructs like variables, classes, interfaces etc. SymbolInformation(name: String , kind: SymbolKind , deprecated: Boolean ?, location: Location , containerName: String ?)","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-information/#properties","text":"Name Summary containerName The name of the symbol containing this symbol. This information is for user interface purposes (e.g. to render a qualifier in the user interface if necessary). It can\u2019t be used to re-infer a hierarchy for the document symbols. val containerName: String ? deprecated Indicates if this symbol is deprecated. val deprecated: Boolean ? kind The kind of this symbol. val kind: SymbolKind location The location of this symbol. The location\u2019s range is used by a tool to reveal the location in the editor. If the symbol is selected in the tool the range\u2019s start information is used to position the cursor. So the range usually spans more then the actual symbol\u2019s name and does normally include things like visibility modifiers. val location: Location name The name of this symbol. val name: String","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-information/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / SymbolInformation / <init> <init> \u00b6 SymbolInformation(name: String , kind: SymbolKind , deprecated: Boolean ?, location: Location , containerName: String ?) Represents information about programming constructs like variables, classes, interfaces etc.","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-information/-init-/#init","text":"SymbolInformation(name: String , kind: SymbolKind , deprecated: Boolean ?, location: Location , containerName: String ?) Represents information about programming constructs like variables, classes, interfaces etc.","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-information/container-name/","text":"lsp / org.pinelang.lsp.lsp.models / SymbolInformation / containerName containerName \u00b6 val containerName: String ? The name of the symbol containing this symbol. This information is for user interface purposes (e.g. to render a qualifier in the user interface if necessary). It can\u2019t be used to re-infer a hierarchy for the document symbols.","title":"containerName - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-information/container-name/#containername","text":"val containerName: String ? The name of the symbol containing this symbol. This information is for user interface purposes (e.g. to render a qualifier in the user interface if necessary). It can\u2019t be used to re-infer a hierarchy for the document symbols.","title":"containerName"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-information/deprecated/","text":"lsp / org.pinelang.lsp.lsp.models / SymbolInformation / deprecated deprecated \u00b6 val deprecated: Boolean ? Indicates if this symbol is deprecated.","title":"deprecated - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-information/deprecated/#deprecated","text":"val deprecated: Boolean ? Indicates if this symbol is deprecated.","title":"deprecated"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-information/kind/","text":"lsp / org.pinelang.lsp.lsp.models / SymbolInformation / kind kind \u00b6 val kind: SymbolKind The kind of this symbol.","title":"kind - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-information/kind/#kind","text":"val kind: SymbolKind The kind of this symbol.","title":"kind"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-information/location/","text":"lsp / org.pinelang.lsp.lsp.models / SymbolInformation / location location \u00b6 val location: Location The location of this symbol. The location\u2019s range is used by a tool to reveal the location in the editor. If the symbol is selected in the tool the range\u2019s start information is used to position the cursor. So the range usually spans more then the actual symbol\u2019s name and does normally include things like visibility modifiers. The range doesn\u2019t have to denote a node range in the sense of a abstract syntax tree. It can therefore not be used to re-construct a hierarchy of the symbols.","title":"location - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-information/location/#location","text":"val location: Location The location of this symbol. The location\u2019s range is used by a tool to reveal the location in the editor. If the symbol is selected in the tool the range\u2019s start information is used to position the cursor. So the range usually spans more then the actual symbol\u2019s name and does normally include things like visibility modifiers. The range doesn\u2019t have to denote a node range in the sense of a abstract syntax tree. It can therefore not be used to re-construct a hierarchy of the symbols.","title":"location"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-information/name/","text":"lsp / org.pinelang.lsp.lsp.models / SymbolInformation / name name \u00b6 val name: String The name of this symbol.","title":"name - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-information/name/#name","text":"val name: String The name of this symbol.","title":"name"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/","text":"lsp / org.pinelang.lsp.lsp.models / SymbolKind SymbolKind \u00b6 enum class SymbolKind Enum Values \u00b6 Name Summary File Module Namespace Package Class Method Property Field Constructor Enum Interface Function Variable Constant String Number Boolean Array Object Key Null EnumMember Struct Event Operator TypeParameter Properties \u00b6 Name Summary value val value: Int","title":"SymbolKind - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/#symbolkind","text":"enum class SymbolKind","title":"SymbolKind"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/#enum-values","text":"Name Summary File Module Namespace Package Class Method Property Field Constructor Enum Interface Function Variable Constant String Number Boolean Array Object Key Null EnumMember Struct Event Operator TypeParameter","title":"Enum Values"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/#properties","text":"Name Summary value val value: Int","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-array/","text":"lsp / org.pinelang.lsp.lsp.models / SymbolKind / Array Array \u00b6 Array","title":"Array - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-array/#array","text":"Array","title":"Array"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-boolean/","text":"lsp / org.pinelang.lsp.lsp.models / SymbolKind / Boolean Boolean \u00b6 Boolean","title":"Boolean - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-boolean/#boolean","text":"Boolean","title":"Boolean"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-class/","text":"lsp / org.pinelang.lsp.lsp.models / SymbolKind / Class Class \u00b6 Class","title":"Class - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-class/#class","text":"Class","title":"Class"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-constant/","text":"lsp / org.pinelang.lsp.lsp.models / SymbolKind / Constant Constant \u00b6 Constant","title":"Constant - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-constant/#constant","text":"Constant","title":"Constant"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-constructor/","text":"lsp / org.pinelang.lsp.lsp.models / SymbolKind / Constructor Constructor \u00b6 Constructor","title":"Constructor - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-constructor/#constructor","text":"Constructor","title":"Constructor"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-enum-member/","text":"lsp / org.pinelang.lsp.lsp.models / SymbolKind / EnumMember EnumMember \u00b6 EnumMember","title":"EnumMember - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-enum-member/#enummember","text":"EnumMember","title":"EnumMember"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-enum/","text":"lsp / org.pinelang.lsp.lsp.models / SymbolKind / Enum Enum \u00b6 Enum","title":"Enum - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-enum/#enum","text":"Enum","title":"Enum"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-event/","text":"lsp / org.pinelang.lsp.lsp.models / SymbolKind / Event Event \u00b6 Event","title":"Event - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-event/#event","text":"Event","title":"Event"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-field/","text":"lsp / org.pinelang.lsp.lsp.models / SymbolKind / Field Field \u00b6 Field","title":"Field - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-field/#field","text":"Field","title":"Field"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-file/","text":"lsp / org.pinelang.lsp.lsp.models / SymbolKind / File File \u00b6 File","title":"File - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-file/#file","text":"File","title":"File"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-function/","text":"lsp / org.pinelang.lsp.lsp.models / SymbolKind / Function Function \u00b6 Function","title":"Function - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-function/#function","text":"Function","title":"Function"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-interface/","text":"lsp / org.pinelang.lsp.lsp.models / SymbolKind / Interface Interface \u00b6 Interface","title":"Interface - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-interface/#interface","text":"Interface","title":"Interface"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-key/","text":"lsp / org.pinelang.lsp.lsp.models / SymbolKind / Key Key \u00b6 Key","title":"Key - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-key/#key","text":"Key","title":"Key"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-method/","text":"lsp / org.pinelang.lsp.lsp.models / SymbolKind / Method Method \u00b6 Method","title":"Method - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-method/#method","text":"Method","title":"Method"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-module/","text":"lsp / org.pinelang.lsp.lsp.models / SymbolKind / Module Module \u00b6 Module","title":"Module - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-module/#module","text":"Module","title":"Module"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-namespace/","text":"lsp / org.pinelang.lsp.lsp.models / SymbolKind / Namespace Namespace \u00b6 Namespace","title":"Namespace - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-namespace/#namespace","text":"Namespace","title":"Namespace"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-null/","text":"lsp / org.pinelang.lsp.lsp.models / SymbolKind / Null Null \u00b6 Null","title":"Null - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-null/#null","text":"Null","title":"Null"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-number/","text":"lsp / org.pinelang.lsp.lsp.models / SymbolKind / Number Number \u00b6 Number","title":"Number - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-number/#number","text":"Number","title":"Number"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-object/","text":"lsp / org.pinelang.lsp.lsp.models / SymbolKind / Object Object \u00b6 Object","title":"Object - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-object/#object","text":"Object","title":"Object"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-operator/","text":"lsp / org.pinelang.lsp.lsp.models / SymbolKind / Operator Operator \u00b6 Operator","title":"Operator - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-operator/#operator","text":"Operator","title":"Operator"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-package/","text":"lsp / org.pinelang.lsp.lsp.models / SymbolKind / Package Package \u00b6 Package","title":"Package - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-package/#package","text":"Package","title":"Package"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-property/","text":"lsp / org.pinelang.lsp.lsp.models / SymbolKind / Property Property \u00b6 Property","title":"Property - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-property/#property","text":"Property","title":"Property"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-string/","text":"lsp / org.pinelang.lsp.lsp.models / SymbolKind / String String \u00b6 String","title":"String - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-string/#string","text":"String","title":"String"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-struct/","text":"lsp / org.pinelang.lsp.lsp.models / SymbolKind / Struct Struct \u00b6 Struct","title":"Struct - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-struct/#struct","text":"Struct","title":"Struct"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-type-parameter/","text":"lsp / org.pinelang.lsp.lsp.models / SymbolKind / TypeParameter TypeParameter \u00b6 TypeParameter","title":"TypeParameter - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-type-parameter/#typeparameter","text":"TypeParameter","title":"TypeParameter"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-variable/","text":"lsp / org.pinelang.lsp.lsp.models / SymbolKind / Variable Variable \u00b6 Variable","title":"Variable - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/-variable/#variable","text":"Variable","title":"Variable"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/value/","text":"lsp / org.pinelang.lsp.lsp.models / SymbolKind / value value \u00b6 val value: Int","title":"value - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-symbol-kind/value/#value","text":"val value: Int","title":"value"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentClientCapabilities TextDocumentClientCapabilities \u00b6 data class TextDocumentClientCapabilities Text document specific client capabilities. Constructors \u00b6 Name Summary <init> Text document specific client capabilities. TextDocumentClientCapabilities(synchronization: TextDocumentSyncClientCapabilities ?, completion: CompletionClientCapabilities ?, hover: HoverClientCapabilities ?, signatureHelp: SignatureHelpClientCapabilities ?, declaration: DeclarationClientCapabilities ?, definition: DeclarationClientCapabilities ?, typeDefinition: DeclarationClientCapabilities ?, implementation: DeclarationClientCapabilities ?, references: ConfigurationClientCapabilities ?, documentHighlight: ConfigurationClientCapabilities ?, documentSymbol: DocumentSymbolClientCapabilities ?, codeAction: CodeActionClientCapabilities ?, codeLens: ConfigurationClientCapabilities ?, documentLink: DocumentLinkClientCapabilities ?, colorProvider: ConfigurationClientCapabilities ?, formatting: ConfigurationClientCapabilities ?, rangeFormatting: ConfigurationClientCapabilities ?, onTypeFormatting: ConfigurationClientCapabilities ?, rename: RenameClientCapabilities ?, foldingRange: FoldingRangeClientCapabilities ?, selectionRange: ConfigurationClientCapabilities ?, publishDiagnostics: PublishDiagnosticsClientCapabilities ?) Properties \u00b6 Name Summary codeAction Capabilities specific to the textDocument/codeAction``val codeAction: CodeActionClientCapabilities ? codeLens Capabilities specific to the textDocument/codeLens``val codeLens: ConfigurationClientCapabilities ? colorProvider Capabilities specific to the textDocument/documentColor``val colorProvider: ConfigurationClientCapabilities ? completion Capabilities specific to the textDocument/completion``val completion: CompletionClientCapabilities ? declaration Capabilities specific to the textDocument/declaration``val declaration: DeclarationClientCapabilities ? definition Capabilities specific to the textDocument/definition``val definition: DeclarationClientCapabilities ? documentHighlight Capabilities specific to the textDocument/documentHighlight``val documentHighlight: ConfigurationClientCapabilities ? documentLink Capabilities specific to the textDocument/documentLink``val documentLink: DocumentLinkClientCapabilities ? documentSymbol Capabilities specific to the textDocument/documentSymbol``val documentSymbol: DocumentSymbolClientCapabilities ? foldingRange Capabilities specific to textDocument/foldingRange requests. val foldingRange: FoldingRangeClientCapabilities ? formatting Capabilities specific to the textDocument/formatting``val formatting: ConfigurationClientCapabilities ? hover Capabilities specific to the textDocument/hover``val hover: HoverClientCapabilities ? implementation Capabilities specific to the textDocument/implementation``val implementation: DeclarationClientCapabilities ? onTypeFormatting Capabilities specific to the textDocument/onTypeFormatting``val onTypeFormatting: ConfigurationClientCapabilities ? publishDiagnostics Capabilities specific to textDocument/publishDiagnostics . val publishDiagnostics: PublishDiagnosticsClientCapabilities ? rangeFormatting Capabilities specific to the textDocument/rangeFormatting``val rangeFormatting: ConfigurationClientCapabilities ? references Capabilities specific to the textDocument/references``val references: ConfigurationClientCapabilities ? rename Capabilities specific to the textDocument/rename``val rename: RenameClientCapabilities ? selectionRange Capabilities specific to textDocument/selectionRange requests val selectionRange: ConfigurationClientCapabilities ? signatureHelp Capabilities specific to the textDocument/signatureHelp``val signatureHelp: SignatureHelpClientCapabilities ? synchronization Defines which synchronization capabilities the client supports. val synchronization: TextDocumentSyncClientCapabilities ? typeDefinition Capabilities specific to the textDocument/typeDefinition``val typeDefinition: DeclarationClientCapabilities ?","title":"TextDocumentClientCapabilities - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/#textdocumentclientcapabilities","text":"data class TextDocumentClientCapabilities Text document specific client capabilities.","title":"TextDocumentClientCapabilities"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/#constructors","text":"Name Summary <init> Text document specific client capabilities. TextDocumentClientCapabilities(synchronization: TextDocumentSyncClientCapabilities ?, completion: CompletionClientCapabilities ?, hover: HoverClientCapabilities ?, signatureHelp: SignatureHelpClientCapabilities ?, declaration: DeclarationClientCapabilities ?, definition: DeclarationClientCapabilities ?, typeDefinition: DeclarationClientCapabilities ?, implementation: DeclarationClientCapabilities ?, references: ConfigurationClientCapabilities ?, documentHighlight: ConfigurationClientCapabilities ?, documentSymbol: DocumentSymbolClientCapabilities ?, codeAction: CodeActionClientCapabilities ?, codeLens: ConfigurationClientCapabilities ?, documentLink: DocumentLinkClientCapabilities ?, colorProvider: ConfigurationClientCapabilities ?, formatting: ConfigurationClientCapabilities ?, rangeFormatting: ConfigurationClientCapabilities ?, onTypeFormatting: ConfigurationClientCapabilities ?, rename: RenameClientCapabilities ?, foldingRange: FoldingRangeClientCapabilities ?, selectionRange: ConfigurationClientCapabilities ?, publishDiagnostics: PublishDiagnosticsClientCapabilities ?)","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/#properties","text":"Name Summary codeAction Capabilities specific to the textDocument/codeAction``val codeAction: CodeActionClientCapabilities ? codeLens Capabilities specific to the textDocument/codeLens``val codeLens: ConfigurationClientCapabilities ? colorProvider Capabilities specific to the textDocument/documentColor``val colorProvider: ConfigurationClientCapabilities ? completion Capabilities specific to the textDocument/completion``val completion: CompletionClientCapabilities ? declaration Capabilities specific to the textDocument/declaration``val declaration: DeclarationClientCapabilities ? definition Capabilities specific to the textDocument/definition``val definition: DeclarationClientCapabilities ? documentHighlight Capabilities specific to the textDocument/documentHighlight``val documentHighlight: ConfigurationClientCapabilities ? documentLink Capabilities specific to the textDocument/documentLink``val documentLink: DocumentLinkClientCapabilities ? documentSymbol Capabilities specific to the textDocument/documentSymbol``val documentSymbol: DocumentSymbolClientCapabilities ? foldingRange Capabilities specific to textDocument/foldingRange requests. val foldingRange: FoldingRangeClientCapabilities ? formatting Capabilities specific to the textDocument/formatting``val formatting: ConfigurationClientCapabilities ? hover Capabilities specific to the textDocument/hover``val hover: HoverClientCapabilities ? implementation Capabilities specific to the textDocument/implementation``val implementation: DeclarationClientCapabilities ? onTypeFormatting Capabilities specific to the textDocument/onTypeFormatting``val onTypeFormatting: ConfigurationClientCapabilities ? publishDiagnostics Capabilities specific to textDocument/publishDiagnostics . val publishDiagnostics: PublishDiagnosticsClientCapabilities ? rangeFormatting Capabilities specific to the textDocument/rangeFormatting``val rangeFormatting: ConfigurationClientCapabilities ? references Capabilities specific to the textDocument/references``val references: ConfigurationClientCapabilities ? rename Capabilities specific to the textDocument/rename``val rename: RenameClientCapabilities ? selectionRange Capabilities specific to textDocument/selectionRange requests val selectionRange: ConfigurationClientCapabilities ? signatureHelp Capabilities specific to the textDocument/signatureHelp``val signatureHelp: SignatureHelpClientCapabilities ? synchronization Defines which synchronization capabilities the client supports. val synchronization: TextDocumentSyncClientCapabilities ? typeDefinition Capabilities specific to the textDocument/typeDefinition``val typeDefinition: DeclarationClientCapabilities ?","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentClientCapabilities / <init> <init> \u00b6 TextDocumentClientCapabilities(synchronization: TextDocumentSyncClientCapabilities ?, completion: CompletionClientCapabilities ?, hover: HoverClientCapabilities ?, signatureHelp: SignatureHelpClientCapabilities ?, declaration: DeclarationClientCapabilities ?, definition: DeclarationClientCapabilities ?, typeDefinition: DeclarationClientCapabilities ?, implementation: DeclarationClientCapabilities ?, references: ConfigurationClientCapabilities ?, documentHighlight: ConfigurationClientCapabilities ?, documentSymbol: DocumentSymbolClientCapabilities ?, codeAction: CodeActionClientCapabilities ?, codeLens: ConfigurationClientCapabilities ?, documentLink: DocumentLinkClientCapabilities ?, colorProvider: ConfigurationClientCapabilities ?, formatting: ConfigurationClientCapabilities ?, rangeFormatting: ConfigurationClientCapabilities ?, onTypeFormatting: ConfigurationClientCapabilities ?, rename: RenameClientCapabilities ?, foldingRange: FoldingRangeClientCapabilities ?, selectionRange: ConfigurationClientCapabilities ?, publishDiagnostics: PublishDiagnosticsClientCapabilities ?) Text document specific client capabilities.","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/-init-/#init","text":"TextDocumentClientCapabilities(synchronization: TextDocumentSyncClientCapabilities ?, completion: CompletionClientCapabilities ?, hover: HoverClientCapabilities ?, signatureHelp: SignatureHelpClientCapabilities ?, declaration: DeclarationClientCapabilities ?, definition: DeclarationClientCapabilities ?, typeDefinition: DeclarationClientCapabilities ?, implementation: DeclarationClientCapabilities ?, references: ConfigurationClientCapabilities ?, documentHighlight: ConfigurationClientCapabilities ?, documentSymbol: DocumentSymbolClientCapabilities ?, codeAction: CodeActionClientCapabilities ?, codeLens: ConfigurationClientCapabilities ?, documentLink: DocumentLinkClientCapabilities ?, colorProvider: ConfigurationClientCapabilities ?, formatting: ConfigurationClientCapabilities ?, rangeFormatting: ConfigurationClientCapabilities ?, onTypeFormatting: ConfigurationClientCapabilities ?, rename: RenameClientCapabilities ?, foldingRange: FoldingRangeClientCapabilities ?, selectionRange: ConfigurationClientCapabilities ?, publishDiagnostics: PublishDiagnosticsClientCapabilities ?) Text document specific client capabilities.","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/code-action/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentClientCapabilities / codeAction codeAction \u00b6 val codeAction: CodeActionClientCapabilities ? Capabilities specific to the textDocument/codeAction","title":"codeAction - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/code-action/#codeaction","text":"val codeAction: CodeActionClientCapabilities ? Capabilities specific to the textDocument/codeAction","title":"codeAction"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/code-lens/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentClientCapabilities / codeLens codeLens \u00b6 val codeLens: ConfigurationClientCapabilities ? Capabilities specific to the textDocument/codeLens","title":"codeLens - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/code-lens/#codelens","text":"val codeLens: ConfigurationClientCapabilities ? Capabilities specific to the textDocument/codeLens","title":"codeLens"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/color-provider/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentClientCapabilities / colorProvider colorProvider \u00b6 val colorProvider: ConfigurationClientCapabilities ? Capabilities specific to the textDocument/documentColor","title":"colorProvider - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/color-provider/#colorprovider","text":"val colorProvider: ConfigurationClientCapabilities ? Capabilities specific to the textDocument/documentColor","title":"colorProvider"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/completion/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentClientCapabilities / completion completion \u00b6 val completion: CompletionClientCapabilities ? Capabilities specific to the textDocument/completion","title":"completion - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/completion/#completion","text":"val completion: CompletionClientCapabilities ? Capabilities specific to the textDocument/completion","title":"completion"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/declaration/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentClientCapabilities / declaration declaration \u00b6 val declaration: DeclarationClientCapabilities ? Capabilities specific to the textDocument/declaration Since 3.14.0","title":"declaration - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/declaration/#declaration","text":"val declaration: DeclarationClientCapabilities ? Capabilities specific to the textDocument/declaration Since 3.14.0","title":"declaration"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/definition/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentClientCapabilities / definition definition \u00b6 val definition: DeclarationClientCapabilities ? Capabilities specific to the textDocument/definition","title":"definition - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/definition/#definition","text":"val definition: DeclarationClientCapabilities ? Capabilities specific to the textDocument/definition","title":"definition"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/document-highlight/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentClientCapabilities / documentHighlight documentHighlight \u00b6 val documentHighlight: ConfigurationClientCapabilities ? Capabilities specific to the textDocument/documentHighlight","title":"documentHighlight - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/document-highlight/#documenthighlight","text":"val documentHighlight: ConfigurationClientCapabilities ? Capabilities specific to the textDocument/documentHighlight","title":"documentHighlight"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/document-link/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentClientCapabilities / documentLink documentLink \u00b6 val documentLink: DocumentLinkClientCapabilities ? Capabilities specific to the textDocument/documentLink","title":"documentLink - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/document-link/#documentlink","text":"val documentLink: DocumentLinkClientCapabilities ? Capabilities specific to the textDocument/documentLink","title":"documentLink"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/document-symbol/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentClientCapabilities / documentSymbol documentSymbol \u00b6 val documentSymbol: DocumentSymbolClientCapabilities ? Capabilities specific to the textDocument/documentSymbol","title":"documentSymbol - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/document-symbol/#documentsymbol","text":"val documentSymbol: DocumentSymbolClientCapabilities ? Capabilities specific to the textDocument/documentSymbol","title":"documentSymbol"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/folding-range/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentClientCapabilities / foldingRange foldingRange \u00b6 val foldingRange: FoldingRangeClientCapabilities ? Capabilities specific to textDocument/foldingRange requests. Since 3.10.0","title":"foldingRange - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/folding-range/#foldingrange","text":"val foldingRange: FoldingRangeClientCapabilities ? Capabilities specific to textDocument/foldingRange requests. Since 3.10.0","title":"foldingRange"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/formatting/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentClientCapabilities / formatting formatting \u00b6 val formatting: ConfigurationClientCapabilities ? Capabilities specific to the textDocument/formatting","title":"formatting - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/formatting/#formatting","text":"val formatting: ConfigurationClientCapabilities ? Capabilities specific to the textDocument/formatting","title":"formatting"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/hover/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentClientCapabilities / hover hover \u00b6 val hover: HoverClientCapabilities ? Capabilities specific to the textDocument/hover","title":"hover - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/hover/#hover","text":"val hover: HoverClientCapabilities ? Capabilities specific to the textDocument/hover","title":"hover"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/implementation/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentClientCapabilities / implementation implementation \u00b6 val implementation: DeclarationClientCapabilities ? Capabilities specific to the textDocument/implementation Since 3.6.0","title":"implementation - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/implementation/#implementation","text":"val implementation: DeclarationClientCapabilities ? Capabilities specific to the textDocument/implementation Since 3.6.0","title":"implementation"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/on-type-formatting/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentClientCapabilities / onTypeFormatting onTypeFormatting \u00b6 val onTypeFormatting: ConfigurationClientCapabilities ? Capabilities specific to the textDocument/onTypeFormatting","title":"onTypeFormatting - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/on-type-formatting/#ontypeformatting","text":"val onTypeFormatting: ConfigurationClientCapabilities ? Capabilities specific to the textDocument/onTypeFormatting","title":"onTypeFormatting"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/publish-diagnostics/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentClientCapabilities / publishDiagnostics publishDiagnostics \u00b6 val publishDiagnostics: PublishDiagnosticsClientCapabilities ? Capabilities specific to textDocument/publishDiagnostics .","title":"publishDiagnostics - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/publish-diagnostics/#publishdiagnostics","text":"val publishDiagnostics: PublishDiagnosticsClientCapabilities ? Capabilities specific to textDocument/publishDiagnostics .","title":"publishDiagnostics"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/range-formatting/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentClientCapabilities / rangeFormatting rangeFormatting \u00b6 val rangeFormatting: ConfigurationClientCapabilities ? Capabilities specific to the textDocument/rangeFormatting","title":"rangeFormatting - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/range-formatting/#rangeformatting","text":"val rangeFormatting: ConfigurationClientCapabilities ? Capabilities specific to the textDocument/rangeFormatting","title":"rangeFormatting"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/references/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentClientCapabilities / references references \u00b6 val references: ConfigurationClientCapabilities ? Capabilities specific to the textDocument/references","title":"references - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/references/#references","text":"val references: ConfigurationClientCapabilities ? Capabilities specific to the textDocument/references","title":"references"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/rename/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentClientCapabilities / rename rename \u00b6 val rename: RenameClientCapabilities ? Capabilities specific to the textDocument/rename","title":"rename - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/rename/#rename","text":"val rename: RenameClientCapabilities ? Capabilities specific to the textDocument/rename","title":"rename"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/selection-range/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentClientCapabilities / selectionRange selectionRange \u00b6 val selectionRange: ConfigurationClientCapabilities ? Capabilities specific to textDocument/selectionRange requests Since 3.15.0","title":"selectionRange - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/selection-range/#selectionrange","text":"val selectionRange: ConfigurationClientCapabilities ? Capabilities specific to textDocument/selectionRange requests Since 3.15.0","title":"selectionRange"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/signature-help/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentClientCapabilities / signatureHelp signatureHelp \u00b6 val signatureHelp: SignatureHelpClientCapabilities ? Capabilities specific to the textDocument/signatureHelp","title":"signatureHelp - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/signature-help/#signaturehelp","text":"val signatureHelp: SignatureHelpClientCapabilities ? Capabilities specific to the textDocument/signatureHelp","title":"signatureHelp"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/synchronization/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentClientCapabilities / synchronization synchronization \u00b6 val synchronization: TextDocumentSyncClientCapabilities ? Defines which synchronization capabilities the client supports.","title":"synchronization - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/synchronization/#synchronization","text":"val synchronization: TextDocumentSyncClientCapabilities ? Defines which synchronization capabilities the client supports.","title":"synchronization"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/type-definition/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentClientCapabilities / typeDefinition typeDefinition \u00b6 val typeDefinition: DeclarationClientCapabilities ? Capabilities specific to the textDocument/typeDefinition Since 3.6.0","title":"typeDefinition - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-client-capabilities/type-definition/#typedefinition","text":"val typeDefinition: DeclarationClientCapabilities ? Capabilities specific to the textDocument/typeDefinition Since 3.6.0","title":"typeDefinition"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-completion-params/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentCompletionParams TextDocumentCompletionParams \u00b6 data class TextDocumentCompletionParams Constructors \u00b6 Name Summary <init> TextDocumentCompletionParams(textDocument: TextDocumentIdentifier , position: Position , context: CompletionContext ) Properties \u00b6 Name Summary context val context: CompletionContext position The position inside the text document. val position: Position textDocument The text document. val textDocument: TextDocumentIdentifier","title":"TextDocumentCompletionParams - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-completion-params/#textdocumentcompletionparams","text":"data class TextDocumentCompletionParams","title":"TextDocumentCompletionParams"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-completion-params/#constructors","text":"Name Summary <init> TextDocumentCompletionParams(textDocument: TextDocumentIdentifier , position: Position , context: CompletionContext )","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-completion-params/#properties","text":"Name Summary context val context: CompletionContext position The position inside the text document. val position: Position textDocument The text document. val textDocument: TextDocumentIdentifier","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-completion-params/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentCompletionParams / <init> <init> \u00b6 TextDocumentCompletionParams(textDocument: TextDocumentIdentifier , position: Position , context: CompletionContext )","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-completion-params/-init-/#init","text":"TextDocumentCompletionParams(textDocument: TextDocumentIdentifier , position: Position , context: CompletionContext )","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-completion-params/context/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentCompletionParams / context context \u00b6 val context: CompletionContext","title":"context - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-completion-params/context/#context","text":"val context: CompletionContext","title":"context"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-completion-params/position/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentCompletionParams / position position \u00b6 val position: Position The position inside the text document.","title":"position - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-completion-params/position/#position","text":"val position: Position The position inside the text document.","title":"position"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-completion-params/text-document/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentCompletionParams / textDocument textDocument \u00b6 val textDocument: TextDocumentIdentifier The text document.","title":"textDocument - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-completion-params/text-document/#textdocument","text":"val textDocument: TextDocumentIdentifier The text document.","title":"textDocument"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-content-change-event/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentContentChangeEvent TextDocumentContentChangeEvent \u00b6 data class TextDocumentContentChangeEvent Constructors \u00b6 Name Summary <init> TextDocumentContentChangeEvent(text: String ) Properties \u00b6 Name Summary text val text: String","title":"TextDocumentContentChangeEvent - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-content-change-event/#textdocumentcontentchangeevent","text":"data class TextDocumentContentChangeEvent","title":"TextDocumentContentChangeEvent"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-content-change-event/#constructors","text":"Name Summary <init> TextDocumentContentChangeEvent(text: String )","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-content-change-event/#properties","text":"Name Summary text val text: String","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-content-change-event/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentContentChangeEvent / <init> <init> \u00b6 TextDocumentContentChangeEvent(text: String )","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-content-change-event/-init-/#init","text":"TextDocumentContentChangeEvent(text: String )","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-content-change-event/text/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentContentChangeEvent / text text \u00b6 val text: String","title":"text - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-content-change-event/text/#text","text":"val text: String","title":"text"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-did-change-params/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentDidChangeParams TextDocumentDidChangeParams \u00b6 data class TextDocumentDidChangeParams Constructors \u00b6 Name Summary <init> TextDocumentDidChangeParams(textDocument: VersionedTextDocumentIdentifier , contentChanges: List < TextDocumentContentChangeEvent >) Properties \u00b6 Name Summary contentChanges The actual content changes. The content changes describe single state changes to the document. So if there are two content changes c1 (at array index 0) and c2 (at array index 1) for a document in state S then c1 moves the document from S to S\u2019 and c2 from S\u2019 to S\u2019\u2018. So c1 is computed on the state S and c2 is computed on the state S\u2019. val contentChanges: List < TextDocumentContentChangeEvent > textDocument The document that did change. The version number points to the version after all provided content changes have been applied. val textDocument: VersionedTextDocumentIdentifier","title":"TextDocumentDidChangeParams - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-did-change-params/#textdocumentdidchangeparams","text":"data class TextDocumentDidChangeParams","title":"TextDocumentDidChangeParams"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-did-change-params/#constructors","text":"Name Summary <init> TextDocumentDidChangeParams(textDocument: VersionedTextDocumentIdentifier , contentChanges: List < TextDocumentContentChangeEvent >)","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-did-change-params/#properties","text":"Name Summary contentChanges The actual content changes. The content changes describe single state changes to the document. So if there are two content changes c1 (at array index 0) and c2 (at array index 1) for a document in state S then c1 moves the document from S to S\u2019 and c2 from S\u2019 to S\u2019\u2018. So c1 is computed on the state S and c2 is computed on the state S\u2019. val contentChanges: List < TextDocumentContentChangeEvent > textDocument The document that did change. The version number points to the version after all provided content changes have been applied. val textDocument: VersionedTextDocumentIdentifier","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-did-change-params/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentDidChangeParams / <init> <init> \u00b6 TextDocumentDidChangeParams(textDocument: VersionedTextDocumentIdentifier , contentChanges: List < TextDocumentContentChangeEvent >)","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-did-change-params/-init-/#init","text":"TextDocumentDidChangeParams(textDocument: VersionedTextDocumentIdentifier , contentChanges: List < TextDocumentContentChangeEvent >)","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-did-change-params/content-changes/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentDidChangeParams / contentChanges contentChanges \u00b6 val contentChanges: List < TextDocumentContentChangeEvent > The actual content changes. The content changes describe single state changes to the document. So if there are two content changes c1 (at array index 0) and c2 (at array index 1) for a document in state S then c1 moves the document from S to S\u2019 and c2 from S\u2019 to S\u2019\u2018. So c1 is computed on the state S and c2 is computed on the state S\u2019. To mirror the content of a document using change events use the following approach: start with the same initial content apply the \u2018textDocument/didChange\u2019 notifications in the order you recevie them. apply the TextDocumentContentChangeEvent s in a single notification in the order you receive them.","title":"contentChanges - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-did-change-params/content-changes/#contentchanges","text":"val contentChanges: List < TextDocumentContentChangeEvent > The actual content changes. The content changes describe single state changes to the document. So if there are two content changes c1 (at array index 0) and c2 (at array index 1) for a document in state S then c1 moves the document from S to S\u2019 and c2 from S\u2019 to S\u2019\u2018. So c1 is computed on the state S and c2 is computed on the state S\u2019. To mirror the content of a document using change events use the following approach: start with the same initial content apply the \u2018textDocument/didChange\u2019 notifications in the order you recevie them. apply the TextDocumentContentChangeEvent s in a single notification in the order you receive them.","title":"contentChanges"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-did-change-params/text-document/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentDidChangeParams / textDocument textDocument \u00b6 val textDocument: VersionedTextDocumentIdentifier The document that did change. The version number points to the version after all provided content changes have been applied.","title":"textDocument - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-did-change-params/text-document/#textdocument","text":"val textDocument: VersionedTextDocumentIdentifier The document that did change. The version number points to the version after all provided content changes have been applied.","title":"textDocument"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-did-open-params/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentDidOpenParams TextDocumentDidOpenParams \u00b6 data class TextDocumentDidOpenParams Constructors \u00b6 Name Summary <init> TextDocumentDidOpenParams(textDocument: TextDocumentItem ) Properties \u00b6 Name Summary textDocument val textDocument: TextDocumentItem","title":"TextDocumentDidOpenParams - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-did-open-params/#textdocumentdidopenparams","text":"data class TextDocumentDidOpenParams","title":"TextDocumentDidOpenParams"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-did-open-params/#constructors","text":"Name Summary <init> TextDocumentDidOpenParams(textDocument: TextDocumentItem )","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-did-open-params/#properties","text":"Name Summary textDocument val textDocument: TextDocumentItem","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-did-open-params/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentDidOpenParams / <init> <init> \u00b6 TextDocumentDidOpenParams(textDocument: TextDocumentItem )","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-did-open-params/-init-/#init","text":"TextDocumentDidOpenParams(textDocument: TextDocumentItem )","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-did-open-params/text-document/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentDidOpenParams / textDocument textDocument \u00b6 val textDocument: TextDocumentItem","title":"textDocument - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-did-open-params/text-document/#textdocument","text":"val textDocument: TextDocumentItem","title":"textDocument"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-identifier/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentIdentifier TextDocumentIdentifier \u00b6 data class TextDocumentIdentifier Constructors \u00b6 Name Summary <init> TextDocumentIdentifier(uri: String ) Properties \u00b6 Name Summary uri The text document\u2019s URI. val uri: String","title":"TextDocumentIdentifier - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-identifier/#textdocumentidentifier","text":"data class TextDocumentIdentifier","title":"TextDocumentIdentifier"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-identifier/#constructors","text":"Name Summary <init> TextDocumentIdentifier(uri: String )","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-identifier/#properties","text":"Name Summary uri The text document\u2019s URI. val uri: String","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-identifier/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentIdentifier / <init> <init> \u00b6 TextDocumentIdentifier(uri: String )","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-identifier/-init-/#init","text":"TextDocumentIdentifier(uri: String )","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-identifier/uri/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentIdentifier / uri uri \u00b6 val uri: String The text document\u2019s URI.","title":"uri - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-identifier/uri/#uri","text":"val uri: String The text document\u2019s URI.","title":"uri"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-item/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentItem TextDocumentItem \u00b6 data class TextDocumentItem Constructors \u00b6 Name Summary <init> TextDocumentItem(uri: String , languageId: String , version: Double , text: String ) Properties \u00b6 Name Summary languageId The text document\u2019s language identifier. val languageId: String text The content of the opened text document. val text: String uri The text document\u2019s URI. val uri: String version The version number of this document (it will increase after each change, including undo/redo). val version: Double","title":"TextDocumentItem - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-item/#textdocumentitem","text":"data class TextDocumentItem","title":"TextDocumentItem"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-item/#constructors","text":"Name Summary <init> TextDocumentItem(uri: String , languageId: String , version: Double , text: String )","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-item/#properties","text":"Name Summary languageId The text document\u2019s language identifier. val languageId: String text The content of the opened text document. val text: String uri The text document\u2019s URI. val uri: String version The version number of this document (it will increase after each change, including undo/redo). val version: Double","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-item/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentItem / <init> <init> \u00b6 TextDocumentItem(uri: String , languageId: String , version: Double , text: String )","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-item/-init-/#init","text":"TextDocumentItem(uri: String , languageId: String , version: Double , text: String )","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-item/language-id/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentItem / languageId languageId \u00b6 val languageId: String The text document\u2019s language identifier.","title":"languageId - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-item/language-id/#languageid","text":"val languageId: String The text document\u2019s language identifier.","title":"languageId"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-item/text/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentItem / text text \u00b6 val text: String The content of the opened text document.","title":"text - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-item/text/#text","text":"val text: String The content of the opened text document.","title":"text"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-item/uri/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentItem / uri uri \u00b6 val uri: String The text document\u2019s URI.","title":"uri - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-item/uri/#uri","text":"val uri: String The text document\u2019s URI.","title":"uri"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-item/version/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentItem / version version \u00b6 val version: Double The version number of this document (it will increase after each change, including undo/redo).","title":"version - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-item/version/#version","text":"val version: Double The version number of this document (it will increase after each change, including undo/redo).","title":"version"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-symbol-params/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentSymbolParams TextDocumentSymbolParams \u00b6 data class TextDocumentSymbolParams Constructors \u00b6 Name Summary <init> TextDocumentSymbolParams(textDocument: TextDocumentIdentifier ) Properties \u00b6 Name Summary textDocument val textDocument: TextDocumentIdentifier","title":"TextDocumentSymbolParams - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-symbol-params/#textdocumentsymbolparams","text":"data class TextDocumentSymbolParams","title":"TextDocumentSymbolParams"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-symbol-params/#constructors","text":"Name Summary <init> TextDocumentSymbolParams(textDocument: TextDocumentIdentifier )","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-symbol-params/#properties","text":"Name Summary textDocument val textDocument: TextDocumentIdentifier","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-symbol-params/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentSymbolParams / <init> <init> \u00b6 TextDocumentSymbolParams(textDocument: TextDocumentIdentifier )","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-symbol-params/-init-/#init","text":"TextDocumentSymbolParams(textDocument: TextDocumentIdentifier )","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-symbol-params/text-document/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentSymbolParams / textDocument textDocument \u00b6 val textDocument: TextDocumentIdentifier","title":"textDocument - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-symbol-params/text-document/#textdocument","text":"val textDocument: TextDocumentIdentifier","title":"textDocument"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentSync TextDocumentSync \u00b6 data class TextDocumentSync Constructors \u00b6 Name Summary <init> TextDocumentSync(openClose: Boolean = true, change: Int = 1, save: Map < String , Any > = mapOf(\"includeText\" to true)) Properties \u00b6 Name Summary change val change: Int openClose val openClose: Boolean save val save: Map < String , Any >","title":"TextDocumentSync - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync/#textdocumentsync","text":"data class TextDocumentSync","title":"TextDocumentSync"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync/#constructors","text":"Name Summary <init> TextDocumentSync(openClose: Boolean = true, change: Int = 1, save: Map < String , Any > = mapOf(\"includeText\" to true))","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync/#properties","text":"Name Summary change val change: Int openClose val openClose: Boolean save val save: Map < String , Any >","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentSync / <init> <init> \u00b6 TextDocumentSync(openClose: Boolean = true, change: Int = 1, save: Map < String , Any > = mapOf(\"includeText\" to true))","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync/-init-/#init","text":"TextDocumentSync(openClose: Boolean = true, change: Int = 1, save: Map < String , Any > = mapOf(\"includeText\" to true))","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync/change/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentSync / change change \u00b6 val change: Int","title":"change - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync/change/#change","text":"val change: Int","title":"change"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync/open-close/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentSync / openClose openClose \u00b6 val openClose: Boolean","title":"openClose - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync/open-close/#openclose","text":"val openClose: Boolean","title":"openClose"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync/save/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentSync / save save \u00b6 val save: Map < String , Any >","title":"save - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync/save/#save","text":"val save: Map < String , Any >","title":"save"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync-client-capabilities/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentSyncClientCapabilities TextDocumentSyncClientCapabilities \u00b6 data class TextDocumentSyncClientCapabilities Constructors \u00b6 Name Summary <init> TextDocumentSyncClientCapabilities(dynamicRegistration: Boolean ?, willSave: Boolean ?, willSaveWaitUntil: Boolean ?, didSave: Boolean ?) Properties \u00b6 Name Summary didSave The client supports did save notifications. val didSave: Boolean ? dynamicRegistration Whether text document synchronization supports dynamic registration. val dynamicRegistration: Boolean ? willSave The client supports sending will save notifications. val willSave: Boolean ? willSaveWaitUntil The client supports sending a will save request and waits for a response providing text edits which will be applied to the document before it is saved. val willSaveWaitUntil: Boolean ?","title":"TextDocumentSyncClientCapabilities - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync-client-capabilities/#textdocumentsyncclientcapabilities","text":"data class TextDocumentSyncClientCapabilities","title":"TextDocumentSyncClientCapabilities"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync-client-capabilities/#constructors","text":"Name Summary <init> TextDocumentSyncClientCapabilities(dynamicRegistration: Boolean ?, willSave: Boolean ?, willSaveWaitUntil: Boolean ?, didSave: Boolean ?)","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync-client-capabilities/#properties","text":"Name Summary didSave The client supports did save notifications. val didSave: Boolean ? dynamicRegistration Whether text document synchronization supports dynamic registration. val dynamicRegistration: Boolean ? willSave The client supports sending will save notifications. val willSave: Boolean ? willSaveWaitUntil The client supports sending a will save request and waits for a response providing text edits which will be applied to the document before it is saved. val willSaveWaitUntil: Boolean ?","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync-client-capabilities/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentSyncClientCapabilities / <init> <init> \u00b6 TextDocumentSyncClientCapabilities(dynamicRegistration: Boolean ?, willSave: Boolean ?, willSaveWaitUntil: Boolean ?, didSave: Boolean ?)","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync-client-capabilities/-init-/#init","text":"TextDocumentSyncClientCapabilities(dynamicRegistration: Boolean ?, willSave: Boolean ?, willSaveWaitUntil: Boolean ?, didSave: Boolean ?)","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync-client-capabilities/did-save/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentSyncClientCapabilities / didSave didSave \u00b6 val didSave: Boolean ? The client supports did save notifications.","title":"didSave - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync-client-capabilities/did-save/#didsave","text":"val didSave: Boolean ? The client supports did save notifications.","title":"didSave"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync-client-capabilities/dynamic-registration/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentSyncClientCapabilities / dynamicRegistration dynamicRegistration \u00b6 val dynamicRegistration: Boolean ? Whether text document synchronization supports dynamic registration.","title":"dynamicRegistration - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync-client-capabilities/dynamic-registration/#dynamicregistration","text":"val dynamicRegistration: Boolean ? Whether text document synchronization supports dynamic registration.","title":"dynamicRegistration"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync-client-capabilities/will-save-wait-until/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentSyncClientCapabilities / willSaveWaitUntil willSaveWaitUntil \u00b6 val willSaveWaitUntil: Boolean ? The client supports sending a will save request and waits for a response providing text edits which will be applied to the document before it is saved.","title":"willSaveWaitUntil - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync-client-capabilities/will-save-wait-until/#willsavewaituntil","text":"val willSaveWaitUntil: Boolean ? The client supports sending a will save request and waits for a response providing text edits which will be applied to the document before it is saved.","title":"willSaveWaitUntil"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync-client-capabilities/will-save/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentSyncClientCapabilities / willSave willSave \u00b6 val willSave: Boolean ? The client supports sending will save notifications.","title":"willSave - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync-client-capabilities/will-save/#willsave","text":"val willSave: Boolean ? The client supports sending will save notifications.","title":"willSave"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync-kind/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentSyncKind TextDocumentSyncKind \u00b6 enum class TextDocumentSyncKind Enum Values \u00b6 Name Summary None Documents should not be synced at all. Full Documents are synced by always sending the full content of the document. Incremental Documents are synced by sending the full content on open. After that only incremental updates to the document are send. Properties \u00b6 Name Summary int val int: Int","title":"TextDocumentSyncKind - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync-kind/#textdocumentsynckind","text":"enum class TextDocumentSyncKind","title":"TextDocumentSyncKind"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync-kind/#enum-values","text":"Name Summary None Documents should not be synced at all. Full Documents are synced by always sending the full content of the document. Incremental Documents are synced by sending the full content on open. After that only incremental updates to the document are send.","title":"Enum Values"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync-kind/#properties","text":"Name Summary int val int: Int","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync-kind/-full/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentSyncKind / Full Full \u00b6 Full Documents are synced by always sending the full content of the document.","title":"Full - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync-kind/-full/#full","text":"Full Documents are synced by always sending the full content of the document.","title":"Full"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync-kind/-incremental/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentSyncKind / Incremental Incremental \u00b6 Incremental Documents are synced by sending the full content on open. After that only incremental updates to the document are send.","title":"Incremental - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync-kind/-incremental/#incremental","text":"Incremental Documents are synced by sending the full content on open. After that only incremental updates to the document are send.","title":"Incremental"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync-kind/-none/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentSyncKind / None None \u00b6 None Documents should not be synced at all.","title":"None - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync-kind/-none/#none","text":"None Documents should not be synced at all.","title":"None"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync-kind/int/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentSyncKind / int int \u00b6 val int: Int","title":"int - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync-kind/int/#int","text":"val int: Int","title":"int"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync-kind-adapter/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentSyncKindAdapter TextDocumentSyncKindAdapter \u00b6 class TextDocumentSyncKindAdapter : JsonAdapter< TextDocumentSyncKind > Constructors \u00b6 Name Summary <init> TextDocumentSyncKindAdapter() Functions \u00b6 Name Summary fromJson fun fromJson(reader: JsonReader): TextDocumentSyncKind ? toJson fun toJson(writer: JsonWriter, value: TextDocumentSyncKind ?): Unit","title":"TextDocumentSyncKindAdapter - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync-kind-adapter/#textdocumentsynckindadapter","text":"class TextDocumentSyncKindAdapter : JsonAdapter< TextDocumentSyncKind >","title":"TextDocumentSyncKindAdapter"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync-kind-adapter/#constructors","text":"Name Summary <init> TextDocumentSyncKindAdapter()","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync-kind-adapter/#functions","text":"Name Summary fromJson fun fromJson(reader: JsonReader): TextDocumentSyncKind ? toJson fun toJson(writer: JsonWriter, value: TextDocumentSyncKind ?): Unit","title":"Functions"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync-kind-adapter/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentSyncKindAdapter / <init> <init> \u00b6 TextDocumentSyncKindAdapter()","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync-kind-adapter/-init-/#init","text":"TextDocumentSyncKindAdapter()","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync-kind-adapter/from-json/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentSyncKindAdapter / fromJson fromJson \u00b6 fun fromJson(reader: JsonReader): TextDocumentSyncKind ?","title":"fromJson - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync-kind-adapter/from-json/#fromjson","text":"fun fromJson(reader: JsonReader): TextDocumentSyncKind ?","title":"fromJson"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync-kind-adapter/to-json/","text":"lsp / org.pinelang.lsp.lsp.models / TextDocumentSyncKindAdapter / toJson toJson \u00b6 fun toJson(writer: JsonWriter, value: TextDocumentSyncKind ?): Unit","title":"toJson - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-document-sync-kind-adapter/to-json/#tojson","text":"fun toJson(writer: JsonWriter, value: TextDocumentSyncKind ?): Unit","title":"toJson"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-edit/","text":"lsp / org.pinelang.lsp.lsp.models / TextEdit TextEdit \u00b6 data class TextEdit Constructors \u00b6 Name Summary <init> TextEdit(range: Range , newText: String ) Properties \u00b6 Name Summary newText The string to be inserted. For delete operations use an empty string. val newText: String range The range of the text document to be manipulated. To insert text into a document create a range where start === end. val range: Range","title":"TextEdit - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-edit/#textedit","text":"data class TextEdit","title":"TextEdit"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-edit/#constructors","text":"Name Summary <init> TextEdit(range: Range , newText: String )","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-edit/#properties","text":"Name Summary newText The string to be inserted. For delete operations use an empty string. val newText: String range The range of the text document to be manipulated. To insert text into a document create a range where start === end. val range: Range","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-edit/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / TextEdit / <init> <init> \u00b6 TextEdit(range: Range , newText: String )","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-edit/-init-/#init","text":"TextEdit(range: Range , newText: String )","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-edit/new-text/","text":"lsp / org.pinelang.lsp.lsp.models / TextEdit / newText newText \u00b6 val newText: String The string to be inserted. For delete operations use an empty string.","title":"newText - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-edit/new-text/#newtext","text":"val newText: String The string to be inserted. For delete operations use an empty string.","title":"newText"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-edit/range/","text":"lsp / org.pinelang.lsp.lsp.models / TextEdit / range range \u00b6 val range: Range The range of the text document to be manipulated. To insert text into a document create a range where start === end.","title":"range - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-text-edit/range/#range","text":"val range: Range The range of the text document to be manipulated. To insert text into a document create a range where start === end.","title":"range"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-value-set/","text":"lsp / org.pinelang.lsp.lsp.models / ValueSet ValueSet \u00b6 data class ValueSet Constructors \u00b6 Name Summary <init> ValueSet(valueSet: IntArray ?) Properties \u00b6 Name Summary valueSet val valueSet: IntArray ? Functions \u00b6 Name Summary equals The symbol kind values the client supports. When this property exists the client also guarantees that it will handle values outside its set gracefully and falls back to a default value when unknown. fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int","title":"ValueSet - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-value-set/#valueset","text":"data class ValueSet","title":"ValueSet"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-value-set/#constructors","text":"Name Summary <init> ValueSet(valueSet: IntArray ?)","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-value-set/#properties","text":"Name Summary valueSet val valueSet: IntArray ?","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-value-set/#functions","text":"Name Summary equals The symbol kind values the client supports. When this property exists the client also guarantees that it will handle values outside its set gracefully and falls back to a default value when unknown. fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int","title":"Functions"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-value-set/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / ValueSet / <init> <init> \u00b6 ValueSet(valueSet: IntArray ?)","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-value-set/-init-/#init","text":"ValueSet(valueSet: IntArray ?)","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-value-set/equals/","text":"lsp / org.pinelang.lsp.lsp.models / ValueSet / equals equals \u00b6 fun equals(other: Any ?): Boolean The symbol kind values the client supports. When this property exists the client also guarantees that it will handle values outside its set gracefully and falls back to a default value when unknown. If this property is not present the client only supports the symbol kinds from File to Array as defined in the initial version of the protocol.","title":"equals - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-value-set/equals/#equals","text":"fun equals(other: Any ?): Boolean The symbol kind values the client supports. When this property exists the client also guarantees that it will handle values outside its set gracefully and falls back to a default value when unknown. If this property is not present the client only supports the symbol kinds from File to Array as defined in the initial version of the protocol.","title":"equals"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-value-set/hash-code/","text":"lsp / org.pinelang.lsp.lsp.models / ValueSet / hashCode hashCode \u00b6 fun hashCode(): Int","title":"hashCode - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-value-set/hash-code/#hashcode","text":"fun hashCode(): Int","title":"hashCode"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-value-set/value-set/","text":"lsp / org.pinelang.lsp.lsp.models / ValueSet / valueSet valueSet \u00b6 val valueSet: IntArray ?","title":"valueSet - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-value-set/value-set/#valueset","text":"val valueSet: IntArray ?","title":"valueSet"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-versioned-text-document-identifier/","text":"lsp / org.pinelang.lsp.lsp.models / VersionedTextDocumentIdentifier VersionedTextDocumentIdentifier \u00b6 data class VersionedTextDocumentIdentifier Constructors \u00b6 Name Summary <init> VersionedTextDocumentIdentifier(version: Double , uri: String ) Properties \u00b6 Name Summary uri The text document\u2019s URI. val uri: String version The version number of this document. If a versioned text document identifier is sent from the server to the client and the file is not open in the editor (the server has not received an open notification before) the server can send null to indicate that the version is known and the content on disk is the master (as speced with document content ownership). val version: Double","title":"VersionedTextDocumentIdentifier - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-versioned-text-document-identifier/#versionedtextdocumentidentifier","text":"data class VersionedTextDocumentIdentifier","title":"VersionedTextDocumentIdentifier"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-versioned-text-document-identifier/#constructors","text":"Name Summary <init> VersionedTextDocumentIdentifier(version: Double , uri: String )","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-versioned-text-document-identifier/#properties","text":"Name Summary uri The text document\u2019s URI. val uri: String version The version number of this document. If a versioned text document identifier is sent from the server to the client and the file is not open in the editor (the server has not received an open notification before) the server can send null to indicate that the version is known and the content on disk is the master (as speced with document content ownership). val version: Double","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-versioned-text-document-identifier/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / VersionedTextDocumentIdentifier / <init> <init> \u00b6 VersionedTextDocumentIdentifier(version: Double , uri: String )","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-versioned-text-document-identifier/-init-/#init","text":"VersionedTextDocumentIdentifier(version: Double , uri: String )","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-versioned-text-document-identifier/uri/","text":"lsp / org.pinelang.lsp.lsp.models / VersionedTextDocumentIdentifier / uri uri \u00b6 val uri: String The text document\u2019s URI.","title":"uri - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-versioned-text-document-identifier/uri/#uri","text":"val uri: String The text document\u2019s URI.","title":"uri"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-versioned-text-document-identifier/version/","text":"lsp / org.pinelang.lsp.lsp.models / VersionedTextDocumentIdentifier / version version \u00b6 val version: Double The version number of this document. If a versioned text document identifier is sent from the server to the client and the file is not open in the editor (the server has not received an open notification before) the server can send null to indicate that the version is known and the content on disk is the master (as speced with document content ownership). The version number of a document will increase after each change, including undo/redo. The number doesn\u2019t need to be consecutive.","title":"version - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-versioned-text-document-identifier/version/#version","text":"val version: Double The version number of this document. If a versioned text document identifier is sent from the server to the client and the file is not open in the editor (the server has not received an open notification before) the server can send null to indicate that the version is known and the content on disk is the master (as speced with document content ownership). The version number of a document will increase after each change, including undo/redo. The number doesn\u2019t need to be consecutive.","title":"version"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-client-capabilities/","text":"lsp / org.pinelang.lsp.lsp.models / WorkspaceClientCapabilities WorkspaceClientCapabilities \u00b6 data class WorkspaceClientCapabilities Constructors \u00b6 Name Summary <init> WorkspaceClientCapabilities(applyEdit: Boolean ?, workspaceEdit: WorkspaceEditClientCapabilities ?, didChangeConfiguration: ConfigurationClientCapabilities ?, didChangeWatchedFiles: ConfigurationClientCapabilities ?, symbol: WorkspaceSymbolClientCapabilities ?, executeCommand: ConfigurationClientCapabilities ?, workspaceFolders: Boolean ?) Properties \u00b6 Name Summary applyEdit The client supports applying batch edits to the workspace by supporting the request \u2018workspace/applyEdit\u2019 val applyEdit: Boolean ? didChangeConfiguration Capabilities specific to the workspace/didChangeConfiguration notification. val didChangeConfiguration: ConfigurationClientCapabilities ? didChangeWatchedFiles Capabilities specific to the workspace/didChangeWatchedFiles notification. val didChangeWatchedFiles: ConfigurationClientCapabilities ? executeCommand Capabilities specific to the workspace/executeCommand request. val executeCommand: ConfigurationClientCapabilities ? symbol Capabilities specific to the workspace/symbol request. val symbol: WorkspaceSymbolClientCapabilities ? workspaceEdit Capabilities specific to WorkspaceEdit s val workspaceEdit: WorkspaceEditClientCapabilities ? workspaceFolders The client has support for workspace folders val workspaceFolders: Boolean ?","title":"WorkspaceClientCapabilities - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-client-capabilities/#workspaceclientcapabilities","text":"data class WorkspaceClientCapabilities","title":"WorkspaceClientCapabilities"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-client-capabilities/#constructors","text":"Name Summary <init> WorkspaceClientCapabilities(applyEdit: Boolean ?, workspaceEdit: WorkspaceEditClientCapabilities ?, didChangeConfiguration: ConfigurationClientCapabilities ?, didChangeWatchedFiles: ConfigurationClientCapabilities ?, symbol: WorkspaceSymbolClientCapabilities ?, executeCommand: ConfigurationClientCapabilities ?, workspaceFolders: Boolean ?)","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-client-capabilities/#properties","text":"Name Summary applyEdit The client supports applying batch edits to the workspace by supporting the request \u2018workspace/applyEdit\u2019 val applyEdit: Boolean ? didChangeConfiguration Capabilities specific to the workspace/didChangeConfiguration notification. val didChangeConfiguration: ConfigurationClientCapabilities ? didChangeWatchedFiles Capabilities specific to the workspace/didChangeWatchedFiles notification. val didChangeWatchedFiles: ConfigurationClientCapabilities ? executeCommand Capabilities specific to the workspace/executeCommand request. val executeCommand: ConfigurationClientCapabilities ? symbol Capabilities specific to the workspace/symbol request. val symbol: WorkspaceSymbolClientCapabilities ? workspaceEdit Capabilities specific to WorkspaceEdit s val workspaceEdit: WorkspaceEditClientCapabilities ? workspaceFolders The client has support for workspace folders val workspaceFolders: Boolean ?","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-client-capabilities/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / WorkspaceClientCapabilities / <init> <init> \u00b6 WorkspaceClientCapabilities(applyEdit: Boolean ?, workspaceEdit: WorkspaceEditClientCapabilities ?, didChangeConfiguration: ConfigurationClientCapabilities ?, didChangeWatchedFiles: ConfigurationClientCapabilities ?, symbol: WorkspaceSymbolClientCapabilities ?, executeCommand: ConfigurationClientCapabilities ?, workspaceFolders: Boolean ?)","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-client-capabilities/-init-/#init","text":"WorkspaceClientCapabilities(applyEdit: Boolean ?, workspaceEdit: WorkspaceEditClientCapabilities ?, didChangeConfiguration: ConfigurationClientCapabilities ?, didChangeWatchedFiles: ConfigurationClientCapabilities ?, symbol: WorkspaceSymbolClientCapabilities ?, executeCommand: ConfigurationClientCapabilities ?, workspaceFolders: Boolean ?)","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-client-capabilities/apply-edit/","text":"lsp / org.pinelang.lsp.lsp.models / WorkspaceClientCapabilities / applyEdit applyEdit \u00b6 val applyEdit: Boolean ? The client supports applying batch edits to the workspace by supporting the request \u2018workspace/applyEdit\u2019","title":"applyEdit - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-client-capabilities/apply-edit/#applyedit","text":"val applyEdit: Boolean ? The client supports applying batch edits to the workspace by supporting the request \u2018workspace/applyEdit\u2019","title":"applyEdit"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-client-capabilities/did-change-configuration/","text":"lsp / org.pinelang.lsp.lsp.models / WorkspaceClientCapabilities / didChangeConfiguration didChangeConfiguration \u00b6 val didChangeConfiguration: ConfigurationClientCapabilities ? Capabilities specific to the workspace/didChangeConfiguration notification.","title":"didChangeConfiguration - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-client-capabilities/did-change-configuration/#didchangeconfiguration","text":"val didChangeConfiguration: ConfigurationClientCapabilities ? Capabilities specific to the workspace/didChangeConfiguration notification.","title":"didChangeConfiguration"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-client-capabilities/did-change-watched-files/","text":"lsp / org.pinelang.lsp.lsp.models / WorkspaceClientCapabilities / didChangeWatchedFiles didChangeWatchedFiles \u00b6 val didChangeWatchedFiles: ConfigurationClientCapabilities ? Capabilities specific to the workspace/didChangeWatchedFiles notification.","title":"didChangeWatchedFiles - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-client-capabilities/did-change-watched-files/#didchangewatchedfiles","text":"val didChangeWatchedFiles: ConfigurationClientCapabilities ? Capabilities specific to the workspace/didChangeWatchedFiles notification.","title":"didChangeWatchedFiles"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-client-capabilities/execute-command/","text":"lsp / org.pinelang.lsp.lsp.models / WorkspaceClientCapabilities / executeCommand executeCommand \u00b6 val executeCommand: ConfigurationClientCapabilities ? Capabilities specific to the workspace/executeCommand request.","title":"executeCommand - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-client-capabilities/execute-command/#executecommand","text":"val executeCommand: ConfigurationClientCapabilities ? Capabilities specific to the workspace/executeCommand request.","title":"executeCommand"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-client-capabilities/symbol/","text":"lsp / org.pinelang.lsp.lsp.models / WorkspaceClientCapabilities / symbol symbol \u00b6 val symbol: WorkspaceSymbolClientCapabilities ? Capabilities specific to the workspace/symbol request.","title":"symbol - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-client-capabilities/symbol/#symbol","text":"val symbol: WorkspaceSymbolClientCapabilities ? Capabilities specific to the workspace/symbol request.","title":"symbol"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-client-capabilities/workspace-edit/","text":"lsp / org.pinelang.lsp.lsp.models / WorkspaceClientCapabilities / workspaceEdit workspaceEdit \u00b6 val workspaceEdit: WorkspaceEditClientCapabilities ? Capabilities specific to WorkspaceEdit s","title":"workspaceEdit - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-client-capabilities/workspace-edit/#workspaceedit","text":"val workspaceEdit: WorkspaceEditClientCapabilities ? Capabilities specific to WorkspaceEdit s","title":"workspaceEdit"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-client-capabilities/workspace-folders/","text":"lsp / org.pinelang.lsp.lsp.models / WorkspaceClientCapabilities / workspaceFolders workspaceFolders \u00b6 val workspaceFolders: Boolean ? The client has support for workspace folders","title":"workspaceFolders - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-client-capabilities/workspace-folders/#workspacefolders","text":"val workspaceFolders: Boolean ? The client has support for workspace folders","title":"workspaceFolders"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-edit-client-capabilities/","text":"lsp / org.pinelang.lsp.lsp.models / WorkspaceEditClientCapabilities WorkspaceEditClientCapabilities \u00b6 data class WorkspaceEditClientCapabilities Constructors \u00b6 Name Summary <init> WorkspaceEditClientCapabilities(documentChanges: Boolean , resourceOperations: List < LSPResourceOperation >?, failureHandling: LSPFailureHandling ?) Properties \u00b6 Name Summary documentChanges The client supports versioned document changes in WorkspaceEdit s val documentChanges: Boolean failureHandling The failure handling strategy of a client if applying the workspace edit fails. val failureHandling: LSPFailureHandling ? resourceOperations The resource operations the client supports. Clients should at least support \u2018create\u2019, \u2018rename\u2019 and \u2018delete\u2019 files and folders. val resourceOperations: List < LSPResourceOperation >?","title":"WorkspaceEditClientCapabilities - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-edit-client-capabilities/#workspaceeditclientcapabilities","text":"data class WorkspaceEditClientCapabilities","title":"WorkspaceEditClientCapabilities"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-edit-client-capabilities/#constructors","text":"Name Summary <init> WorkspaceEditClientCapabilities(documentChanges: Boolean , resourceOperations: List < LSPResourceOperation >?, failureHandling: LSPFailureHandling ?)","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-edit-client-capabilities/#properties","text":"Name Summary documentChanges The client supports versioned document changes in WorkspaceEdit s val documentChanges: Boolean failureHandling The failure handling strategy of a client if applying the workspace edit fails. val failureHandling: LSPFailureHandling ? resourceOperations The resource operations the client supports. Clients should at least support \u2018create\u2019, \u2018rename\u2019 and \u2018delete\u2019 files and folders. val resourceOperations: List < LSPResourceOperation >?","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-edit-client-capabilities/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / WorkspaceEditClientCapabilities / <init> <init> \u00b6 WorkspaceEditClientCapabilities(documentChanges: Boolean , resourceOperations: List < LSPResourceOperation >?, failureHandling: LSPFailureHandling ?)","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-edit-client-capabilities/-init-/#init","text":"WorkspaceEditClientCapabilities(documentChanges: Boolean , resourceOperations: List < LSPResourceOperation >?, failureHandling: LSPFailureHandling ?)","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-edit-client-capabilities/document-changes/","text":"lsp / org.pinelang.lsp.lsp.models / WorkspaceEditClientCapabilities / documentChanges documentChanges \u00b6 val documentChanges: Boolean The client supports versioned document changes in WorkspaceEdit s","title":"documentChanges - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-edit-client-capabilities/document-changes/#documentchanges","text":"val documentChanges: Boolean The client supports versioned document changes in WorkspaceEdit s","title":"documentChanges"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-edit-client-capabilities/failure-handling/","text":"lsp / org.pinelang.lsp.lsp.models / WorkspaceEditClientCapabilities / failureHandling failureHandling \u00b6 val failureHandling: LSPFailureHandling ? The failure handling strategy of a client if applying the workspace edit fails. Since 3.13.0","title":"failureHandling - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-edit-client-capabilities/failure-handling/#failurehandling","text":"val failureHandling: LSPFailureHandling ? The failure handling strategy of a client if applying the workspace edit fails. Since 3.13.0","title":"failureHandling"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-edit-client-capabilities/resource-operations/","text":"lsp / org.pinelang.lsp.lsp.models / WorkspaceEditClientCapabilities / resourceOperations resourceOperations \u00b6 val resourceOperations: List < LSPResourceOperation >? The resource operations the client supports. Clients should at least support \u2018create\u2019, \u2018rename\u2019 and \u2018delete\u2019 files and folders. Since 3.13.0","title":"resourceOperations - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-edit-client-capabilities/resource-operations/#resourceoperations","text":"val resourceOperations: List < LSPResourceOperation >? The resource operations the client supports. Clients should at least support \u2018create\u2019, \u2018rename\u2019 and \u2018delete\u2019 files and folders. Since 3.13.0","title":"resourceOperations"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-folders-capabilities/","text":"lsp / org.pinelang.lsp.lsp.models / WorkspaceFoldersCapabilities WorkspaceFoldersCapabilities \u00b6 data class WorkspaceFoldersCapabilities Constructors \u00b6 Name Summary <init> WorkspaceFoldersCapabilities(supported: Boolean = false, changeNotification: String ? = null) Properties \u00b6 Name Summary changeNotification val changeNotification: String ? supported val supported: Boolean","title":"WorkspaceFoldersCapabilities - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-folders-capabilities/#workspacefolderscapabilities","text":"data class WorkspaceFoldersCapabilities","title":"WorkspaceFoldersCapabilities"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-folders-capabilities/#constructors","text":"Name Summary <init> WorkspaceFoldersCapabilities(supported: Boolean = false, changeNotification: String ? = null)","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-folders-capabilities/#properties","text":"Name Summary changeNotification val changeNotification: String ? supported val supported: Boolean","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-folders-capabilities/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / WorkspaceFoldersCapabilities / <init> <init> \u00b6 WorkspaceFoldersCapabilities(supported: Boolean = false, changeNotification: String ? = null)","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-folders-capabilities/-init-/#init","text":"WorkspaceFoldersCapabilities(supported: Boolean = false, changeNotification: String ? = null)","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-folders-capabilities/change-notification/","text":"lsp / org.pinelang.lsp.lsp.models / WorkspaceFoldersCapabilities / changeNotification changeNotification \u00b6 val changeNotification: String ?","title":"changeNotification - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-folders-capabilities/change-notification/#changenotification","text":"val changeNotification: String ?","title":"changeNotification"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-folders-capabilities/supported/","text":"lsp / org.pinelang.lsp.lsp.models / WorkspaceFoldersCapabilities / supported supported \u00b6 val supported: Boolean","title":"supported - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-folders-capabilities/supported/#supported","text":"val supported: Boolean","title":"supported"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-folders-server-capabilities/","text":"lsp / org.pinelang.lsp.lsp.models / WorkspaceFoldersServerCapabilities WorkspaceFoldersServerCapabilities \u00b6 data class WorkspaceFoldersServerCapabilities Constructors \u00b6 Name Summary <init> WorkspaceFoldersServerCapabilities(workspaceFolders: WorkspaceFoldersCapabilities ? = null) Properties \u00b6 Name Summary workspaceFolders val workspaceFolders: WorkspaceFoldersCapabilities ?","title":"WorkspaceFoldersServerCapabilities - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-folders-server-capabilities/#workspacefoldersservercapabilities","text":"data class WorkspaceFoldersServerCapabilities","title":"WorkspaceFoldersServerCapabilities"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-folders-server-capabilities/#constructors","text":"Name Summary <init> WorkspaceFoldersServerCapabilities(workspaceFolders: WorkspaceFoldersCapabilities ? = null)","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-folders-server-capabilities/#properties","text":"Name Summary workspaceFolders val workspaceFolders: WorkspaceFoldersCapabilities ?","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-folders-server-capabilities/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / WorkspaceFoldersServerCapabilities / <init> <init> \u00b6 WorkspaceFoldersServerCapabilities(workspaceFolders: WorkspaceFoldersCapabilities ? = null)","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-folders-server-capabilities/-init-/#init","text":"WorkspaceFoldersServerCapabilities(workspaceFolders: WorkspaceFoldersCapabilities ? = null)","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-folders-server-capabilities/workspace-folders/","text":"lsp / org.pinelang.lsp.lsp.models / WorkspaceFoldersServerCapabilities / workspaceFolders workspaceFolders \u00b6 val workspaceFolders: WorkspaceFoldersCapabilities ?","title":"workspaceFolders - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-folders-server-capabilities/workspace-folders/#workspacefolders","text":"val workspaceFolders: WorkspaceFoldersCapabilities ?","title":"workspaceFolders"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-symbol-client-capabilities/","text":"lsp / org.pinelang.lsp.lsp.models / WorkspaceSymbolClientCapabilities WorkspaceSymbolClientCapabilities \u00b6 data class WorkspaceSymbolClientCapabilities Constructors \u00b6 Name Summary <init> WorkspaceSymbolClientCapabilities(dynamicRegistration: Boolean ?, symbolKind: ValueSet ?) Properties \u00b6 Name Summary dynamicRegistration Symbol request supports dynamic registration. val dynamicRegistration: Boolean ? symbolKind Specific capabilities for the SymbolKind in the workspace/symbol request. val symbolKind: ValueSet ?","title":"WorkspaceSymbolClientCapabilities - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-symbol-client-capabilities/#workspacesymbolclientcapabilities","text":"data class WorkspaceSymbolClientCapabilities","title":"WorkspaceSymbolClientCapabilities"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-symbol-client-capabilities/#constructors","text":"Name Summary <init> WorkspaceSymbolClientCapabilities(dynamicRegistration: Boolean ?, symbolKind: ValueSet ?)","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-symbol-client-capabilities/#properties","text":"Name Summary dynamicRegistration Symbol request supports dynamic registration. val dynamicRegistration: Boolean ? symbolKind Specific capabilities for the SymbolKind in the workspace/symbol request. val symbolKind: ValueSet ?","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-symbol-client-capabilities/-init-/","text":"lsp / org.pinelang.lsp.lsp.models / WorkspaceSymbolClientCapabilities / <init> <init> \u00b6 WorkspaceSymbolClientCapabilities(dynamicRegistration: Boolean ?, symbolKind: ValueSet ?)","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-symbol-client-capabilities/-init-/#init","text":"WorkspaceSymbolClientCapabilities(dynamicRegistration: Boolean ?, symbolKind: ValueSet ?)","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-symbol-client-capabilities/dynamic-registration/","text":"lsp / org.pinelang.lsp.lsp.models / WorkspaceSymbolClientCapabilities / dynamicRegistration dynamicRegistration \u00b6 val dynamicRegistration: Boolean ? Symbol request supports dynamic registration.","title":"dynamicRegistration - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-symbol-client-capabilities/dynamic-registration/#dynamicregistration","text":"val dynamicRegistration: Boolean ? Symbol request supports dynamic registration.","title":"dynamicRegistration"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-symbol-client-capabilities/symbol-kind/","text":"lsp / org.pinelang.lsp.lsp.models / WorkspaceSymbolClientCapabilities / symbolKind symbolKind \u00b6 val symbolKind: ValueSet ? Specific capabilities for the SymbolKind in the workspace/symbol request.","title":"symbolKind - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/-workspace-symbol-client-capabilities/symbol-kind/#symbolkind","text":"val symbolKind: ValueSet ? Specific capabilities for the SymbolKind in the workspace/symbol request.","title":"symbolKind"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/kotlin.-string/","text":"lsp / org.pinelang.lsp.lsp.models / kotlin.String Extensions for kotlin.String \u00b6 Name Summary charIndexAtPosition fun String .charIndexAtPosition(pos: Position ): Int ? getNextWordToRight fun String .getNextWordToRight(charPos: Int ): String ? getObjectTypeEnclosingPosition If position is inside a object delimited by Type { .. } This function will return the object type. fun String .getObjectTypeEnclosingPosition(pos: Position ): String ? getWordAtPosition fun String .getWordAtPosition(pos: Position ): String ?","title":"Extensions for kotlin.String - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/kotlin.-string/#extensions-for-kotlinstring","text":"Name Summary charIndexAtPosition fun String .charIndexAtPosition(pos: Position ): Int ? getNextWordToRight fun String .getNextWordToRight(charPos: Int ): String ? getObjectTypeEnclosingPosition If position is inside a object delimited by Type { .. } This function will return the object type. fun String .getObjectTypeEnclosingPosition(pos: Position ): String ? getWordAtPosition fun String .getWordAtPosition(pos: Position ): String ?","title":"Extensions for kotlin.String"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/kotlin.-string/char-index-at-position/","text":"lsp / org.pinelang.lsp.lsp.models / kotlin.String / charIndexAtPosition charIndexAtPosition \u00b6 fun String .charIndexAtPosition(pos: Position ): Int ?","title":"charIndexAtPosition - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/kotlin.-string/char-index-at-position/#charindexatposition","text":"fun String .charIndexAtPosition(pos: Position ): Int ?","title":"charIndexAtPosition"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/kotlin.-string/get-next-word-to-right/","text":"lsp / org.pinelang.lsp.lsp.models / kotlin.String / getNextWordToRight getNextWordToRight \u00b6 fun String .getNextWordToRight(charPos: Int ): String ?","title":"getNextWordToRight - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/kotlin.-string/get-next-word-to-right/#getnextwordtoright","text":"fun String .getNextWordToRight(charPos: Int ): String ?","title":"getNextWordToRight"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/kotlin.-string/get-object-type-enclosing-position/","text":"lsp / org.pinelang.lsp.lsp.models / kotlin.String / getObjectTypeEnclosingPosition getObjectTypeEnclosingPosition \u00b6 fun String .getObjectTypeEnclosingPosition(pos: Position ): String ? If position is inside a object delimited by Type { .. } This function will return the object type.","title":"getObjectTypeEnclosingPosition - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/kotlin.-string/get-object-type-enclosing-position/#getobjecttypeenclosingposition","text":"fun String .getObjectTypeEnclosingPosition(pos: Position ): String ? If position is inside a object delimited by Type { .. } This function will return the object type.","title":"getObjectTypeEnclosingPosition"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/kotlin.-string/get-word-at-position/","text":"lsp / org.pinelang.lsp.lsp.models / kotlin.String / getWordAtPosition getWordAtPosition \u00b6 fun String .getWordAtPosition(pos: Position ): String ?","title":"getWordAtPosition - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.models/kotlin.-string/get-word-at-position/#getwordatposition","text":"fun String .getWordAtPosition(pos: Position ): String ?","title":"getWordAtPosition"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/","text":"lsp / org.pinelang.lsp.lsp.sandbox.ui Package org.pinelang.lsp.lsp.sandbox.ui \u00b6 Types \u00b6 Name Summary Item open class Item : PineObject Label class Label : Item Rectangle class Rectangle : PineObject","title":"Package org.pinelang.lsp.lsp.sandbox.ui - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/#package-orgpinelanglsplspsandboxui","text":"","title":"Package org.pinelang.lsp.lsp.sandbox.ui"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/#types","text":"Name Summary Item open class Item : PineObject Label class Label : Item Rectangle class Rectangle : PineObject","title":"Types"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-item/","text":"lsp / org.pinelang.lsp.lsp.sandbox.ui / Item Item \u00b6 open class Item : PineObject Constructors \u00b6 Name Summary <init> Item(id: Int ) Properties \u00b6 Name Summary height var height: Int width var width: Int x var x: Int y var y: Int Functions \u00b6 Name Summary getMeta open fun getMeta(): PineMetaObject Companion Object Properties \u00b6 Name Summary meta val meta: PineMetaObject Inheritors \u00b6 Name Summary Label class Label : Item","title":"Item - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-item/#item","text":"open class Item : PineObject","title":"Item"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-item/#constructors","text":"Name Summary <init> Item(id: Int )","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-item/#properties","text":"Name Summary height var height: Int width var width: Int x var x: Int y var y: Int","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-item/#functions","text":"Name Summary getMeta open fun getMeta(): PineMetaObject","title":"Functions"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-item/#companion-object-properties","text":"Name Summary meta val meta: PineMetaObject","title":"Companion Object Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-item/#inheritors","text":"Name Summary Label class Label : Item","title":"Inheritors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-item/-init-/","text":"lsp / org.pinelang.lsp.lsp.sandbox.ui / Item / <init> <init> \u00b6 Item(id: Int )","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-item/-init-/#init","text":"Item(id: Int )","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-item/get-meta/","text":"lsp / org.pinelang.lsp.lsp.sandbox.ui / Item / getMeta getMeta \u00b6 open fun getMeta(): PineMetaObject","title":"getMeta - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-item/get-meta/#getmeta","text":"open fun getMeta(): PineMetaObject","title":"getMeta"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-item/height/","text":"lsp / org.pinelang.lsp.lsp.sandbox.ui / Item / height height \u00b6 var height: Int","title":"height - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-item/height/#height","text":"var height: Int","title":"height"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-item/meta/","text":"lsp / org.pinelang.lsp.lsp.sandbox.ui / Item / meta meta \u00b6 val meta: PineMetaObject","title":"meta - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-item/meta/#meta","text":"val meta: PineMetaObject","title":"meta"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-item/width/","text":"lsp / org.pinelang.lsp.lsp.sandbox.ui / Item / width width \u00b6 var width: Int","title":"width - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-item/width/#width","text":"var width: Int","title":"width"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-item/x/","text":"lsp / org.pinelang.lsp.lsp.sandbox.ui / Item / x x \u00b6 var x: Int","title":"x - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-item/x/#x","text":"var x: Int","title":"x"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-item/y/","text":"lsp / org.pinelang.lsp.lsp.sandbox.ui / Item / y y \u00b6 var y: Int","title":"y - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-item/y/#y","text":"var y: Int","title":"y"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-label/","text":"lsp / org.pinelang.lsp.lsp.sandbox.ui / Label Label \u00b6 class Label : Item Constructors \u00b6 Name Summary <init> Label(id: Int ) Properties \u00b6 Name Summary color val color: String label val label: JLabel text var text: String visible var visible: Boolean Functions \u00b6 Name Summary getMeta fun getMeta(): PineMetaObject Companion Object Properties \u00b6 Name Summary meta val meta: PineMetaObject","title":"Label - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-label/#label","text":"class Label : Item","title":"Label"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-label/#constructors","text":"Name Summary <init> Label(id: Int )","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-label/#properties","text":"Name Summary color val color: String label val label: JLabel text var text: String visible var visible: Boolean","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-label/#functions","text":"Name Summary getMeta fun getMeta(): PineMetaObject","title":"Functions"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-label/#companion-object-properties","text":"Name Summary meta val meta: PineMetaObject","title":"Companion Object Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-label/-init-/","text":"lsp / org.pinelang.lsp.lsp.sandbox.ui / Label / <init> <init> \u00b6 Label(id: Int )","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-label/-init-/#init","text":"Label(id: Int )","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-label/color/","text":"lsp / org.pinelang.lsp.lsp.sandbox.ui / Label / color color \u00b6 val color: String","title":"color - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-label/color/#color","text":"val color: String","title":"color"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-label/get-meta/","text":"lsp / org.pinelang.lsp.lsp.sandbox.ui / Label / getMeta getMeta \u00b6 fun getMeta(): PineMetaObject","title":"getMeta - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-label/get-meta/#getmeta","text":"fun getMeta(): PineMetaObject","title":"getMeta"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-label/label/","text":"lsp / org.pinelang.lsp.lsp.sandbox.ui / Label / label label \u00b6 val label: JLabel","title":"label - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-label/label/#label","text":"val label: JLabel","title":"label"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-label/meta/","text":"lsp / org.pinelang.lsp.lsp.sandbox.ui / Label / meta meta \u00b6 val meta: PineMetaObject","title":"meta - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-label/meta/#meta","text":"val meta: PineMetaObject","title":"meta"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-label/text/","text":"lsp / org.pinelang.lsp.lsp.sandbox.ui / Label / text text \u00b6 var text: String","title":"text - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-label/text/#text","text":"var text: String","title":"text"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-label/visible/","text":"lsp / org.pinelang.lsp.lsp.sandbox.ui / Label / visible visible \u00b6 var visible: Boolean","title":"visible - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-label/visible/#visible","text":"var visible: Boolean","title":"visible"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-rectangle/","text":"lsp / org.pinelang.lsp.lsp.sandbox.ui / Rectangle Rectangle \u00b6 class Rectangle : PineObject Constructors \u00b6 Name Summary <init> Rectangle(id: Int ) Properties \u00b6 Name Summary color val color: String height var height: Int panel val panel: JPanel visible var visible: Boolean width var width: Int x var x: Int y var y: Int Functions \u00b6 Name Summary getMeta fun getMeta(): PineMetaObject Companion Object Properties \u00b6 Name Summary meta val meta: PineMetaObject","title":"Rectangle - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-rectangle/#rectangle","text":"class Rectangle : PineObject","title":"Rectangle"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-rectangle/#constructors","text":"Name Summary <init> Rectangle(id: Int )","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-rectangle/#properties","text":"Name Summary color val color: String height var height: Int panel val panel: JPanel visible var visible: Boolean width var width: Int x var x: Int y var y: Int","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-rectangle/#functions","text":"Name Summary getMeta fun getMeta(): PineMetaObject","title":"Functions"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-rectangle/#companion-object-properties","text":"Name Summary meta val meta: PineMetaObject","title":"Companion Object Properties"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-rectangle/-init-/","text":"lsp / org.pinelang.lsp.lsp.sandbox.ui / Rectangle / <init> <init> \u00b6 Rectangle(id: Int )","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-rectangle/-init-/#init","text":"Rectangle(id: Int )","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-rectangle/color/","text":"lsp / org.pinelang.lsp.lsp.sandbox.ui / Rectangle / color color \u00b6 val color: String","title":"color - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-rectangle/color/#color","text":"val color: String","title":"color"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-rectangle/get-meta/","text":"lsp / org.pinelang.lsp.lsp.sandbox.ui / Rectangle / getMeta getMeta \u00b6 fun getMeta(): PineMetaObject","title":"getMeta - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-rectangle/get-meta/#getmeta","text":"fun getMeta(): PineMetaObject","title":"getMeta"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-rectangle/height/","text":"lsp / org.pinelang.lsp.lsp.sandbox.ui / Rectangle / height height \u00b6 var height: Int","title":"height - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-rectangle/height/#height","text":"var height: Int","title":"height"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-rectangle/meta/","text":"lsp / org.pinelang.lsp.lsp.sandbox.ui / Rectangle / meta meta \u00b6 val meta: PineMetaObject","title":"meta - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-rectangle/meta/#meta","text":"val meta: PineMetaObject","title":"meta"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-rectangle/panel/","text":"lsp / org.pinelang.lsp.lsp.sandbox.ui / Rectangle / panel panel \u00b6 val panel: JPanel","title":"panel - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-rectangle/panel/#panel","text":"val panel: JPanel","title":"panel"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-rectangle/visible/","text":"lsp / org.pinelang.lsp.lsp.sandbox.ui / Rectangle / visible visible \u00b6 var visible: Boolean","title":"visible - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-rectangle/visible/#visible","text":"var visible: Boolean","title":"visible"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-rectangle/width/","text":"lsp / org.pinelang.lsp.lsp.sandbox.ui / Rectangle / width width \u00b6 var width: Int","title":"width - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-rectangle/width/#width","text":"var width: Int","title":"width"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-rectangle/x/","text":"lsp / org.pinelang.lsp.lsp.sandbox.ui / Rectangle / x x \u00b6 var x: Int","title":"x - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-rectangle/x/#x","text":"var x: Int","title":"x"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-rectangle/y/","text":"lsp / org.pinelang.lsp.lsp.sandbox.ui / Rectangle / y y \u00b6 var y: Int","title":"y - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.lsp.sandbox.ui/-rectangle/y/#y","text":"var y: Int","title":"y"},{"location":"latest/lsp/org.pinelang.lsp.main.sandbox.ui/","text":"lsp / org.pinelang.lsp.main.sandbox.ui Package org.pinelang.lsp.main.sandbox.ui \u00b6 Types \u00b6 Name Summary MainWindow class MainWindow : JFrame Functions \u00b6 Name Summary main fun main(argv: Array < String >): Unit","title":"Package org.pinelang.lsp.main.sandbox.ui - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.main.sandbox.ui/#package-orgpinelanglspmainsandboxui","text":"","title":"Package org.pinelang.lsp.main.sandbox.ui"},{"location":"latest/lsp/org.pinelang.lsp.main.sandbox.ui/#types","text":"Name Summary MainWindow class MainWindow : JFrame","title":"Types"},{"location":"latest/lsp/org.pinelang.lsp.main.sandbox.ui/#functions","text":"Name Summary main fun main(argv: Array < String >): Unit","title":"Functions"},{"location":"latest/lsp/org.pinelang.lsp.main.sandbox.ui/main/","text":"lsp / org.pinelang.lsp.main.sandbox.ui / main main \u00b6 fun main(argv: Array < String >): Unit","title":"main - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.main.sandbox.ui/main/#main","text":"fun main(argv: Array < String >): Unit","title":"main"},{"location":"latest/lsp/org.pinelang.lsp.main.sandbox.ui/-main-window/","text":"lsp / org.pinelang.lsp.main.sandbox.ui / MainWindow MainWindow \u00b6 class MainWindow : JFrame Constructors \u00b6 Name Summary <init> MainWindow(engine: PineEngine, enableEditor: Boolean ) Properties \u00b6 Name Summary engine val engine: PineEngine outputPanel var outputPanel: JPanel root var root: PineObject? textArea var textArea: RSyntaxTextArea Functions \u00b6 Name Summary runScript fun runScript(text: String ): Unit","title":"MainWindow - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.main.sandbox.ui/-main-window/#mainwindow","text":"class MainWindow : JFrame","title":"MainWindow"},{"location":"latest/lsp/org.pinelang.lsp.main.sandbox.ui/-main-window/#constructors","text":"Name Summary <init> MainWindow(engine: PineEngine, enableEditor: Boolean )","title":"Constructors"},{"location":"latest/lsp/org.pinelang.lsp.main.sandbox.ui/-main-window/#properties","text":"Name Summary engine val engine: PineEngine outputPanel var outputPanel: JPanel root var root: PineObject? textArea var textArea: RSyntaxTextArea","title":"Properties"},{"location":"latest/lsp/org.pinelang.lsp.main.sandbox.ui/-main-window/#functions","text":"Name Summary runScript fun runScript(text: String ): Unit","title":"Functions"},{"location":"latest/lsp/org.pinelang.lsp.main.sandbox.ui/-main-window/-init-/","text":"lsp / org.pinelang.lsp.main.sandbox.ui / MainWindow / <init> <init> \u00b6 MainWindow(engine: PineEngine, enableEditor: Boolean )","title":" init "},{"location":"latest/lsp/org.pinelang.lsp.main.sandbox.ui/-main-window/-init-/#init","text":"MainWindow(engine: PineEngine, enableEditor: Boolean )","title":"&lt;init&gt;"},{"location":"latest/lsp/org.pinelang.lsp.main.sandbox.ui/-main-window/engine/","text":"lsp / org.pinelang.lsp.main.sandbox.ui / MainWindow / engine engine \u00b6 val engine: PineEngine","title":"engine - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.main.sandbox.ui/-main-window/engine/#engine","text":"val engine: PineEngine","title":"engine"},{"location":"latest/lsp/org.pinelang.lsp.main.sandbox.ui/-main-window/output-panel/","text":"lsp / org.pinelang.lsp.main.sandbox.ui / MainWindow / outputPanel outputPanel \u00b6 var outputPanel: JPanel","title":"outputPanel - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.main.sandbox.ui/-main-window/output-panel/#outputpanel","text":"var outputPanel: JPanel","title":"outputPanel"},{"location":"latest/lsp/org.pinelang.lsp.main.sandbox.ui/-main-window/root/","text":"lsp / org.pinelang.lsp.main.sandbox.ui / MainWindow / root root \u00b6 var root: PineObject?","title":"root - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.main.sandbox.ui/-main-window/root/#root","text":"var root: PineObject?","title":"root"},{"location":"latest/lsp/org.pinelang.lsp.main.sandbox.ui/-main-window/run-script/","text":"lsp / org.pinelang.lsp.main.sandbox.ui / MainWindow / runScript runScript \u00b6 fun runScript(text: String ): Unit","title":"runScript - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.main.sandbox.ui/-main-window/run-script/#runscript","text":"fun runScript(text: String ): Unit","title":"runScript"},{"location":"latest/lsp/org.pinelang.lsp.main.sandbox.ui/-main-window/text-area/","text":"lsp / org.pinelang.lsp.main.sandbox.ui / MainWindow / textArea textArea \u00b6 var textArea: RSyntaxTextArea","title":"textArea - Pinelang"},{"location":"latest/lsp/org.pinelang.lsp.main.sandbox.ui/-main-window/text-area/#textarea","text":"var textArea: RSyntaxTextArea","title":"textArea"}]}