// automatically generated by the FlatBuffers compiler, do not modify

package com.pinescript.fbs.ast

import java.nio.*
import kotlin.math.sign
import com.google.flatbuffers.*

@Suppress("unused")
@ExperimentalUnsignedTypes
class StringProp : Table() {

    fun __init(_i: Int, _bb: ByteBuffer)  {
        __reset(_i, _bb)
    }
    fun __assign(_i: Int, _bb: ByteBuffer) : StringProp {
        __init(_i, _bb)
        return this
    }
    val id : Byte
        get() {
            val o = __offset(4)
            return if(o != 0) bb.get(o + bb_pos) else 0
        }
    val value : String?
        get() {
            val o = __offset(6)
            return if (o != 0) __string(o + bb_pos) else null
        }
    val valueAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(6, 1)
    fun valueInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 6, 1)
    companion object {
        fun validateVersion() = Constants.FLATBUFFERS_1_12_0()
        fun getRootAsStringProp(_bb: ByteBuffer): StringProp = getRootAsStringProp(_bb, StringProp())
        fun getRootAsStringProp(_bb: ByteBuffer, obj: StringProp): StringProp {
            _bb.order(ByteOrder.LITTLE_ENDIAN)
            return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb))
        }
        fun createStringProp(builder: FlatBufferBuilder, id: Byte, valueOffset: Int) : Int {
            builder.startTable(2)
            addValue(builder, valueOffset)
            addId(builder, id)
            return endStringProp(builder)
        }
        fun startStringProp(builder: FlatBufferBuilder) = builder.startTable(2)
        fun addId(builder: FlatBufferBuilder, id: Byte) = builder.addByte(0, id, 0)
        fun addValue(builder: FlatBufferBuilder, value: Int) = builder.addOffset(1, value, 0)
        fun endStringProp(builder: FlatBufferBuilder) : Int {
            val o = builder.endTable()
            return o
        }
    }
}
