// automatically generated by the FlatBuffers compiler, do not modify

package com.pinescript.ast.fbs

import java.nio.*
import kotlin.math.sign
import com.google.flatbuffers.*

@Suppress("unused")
@ExperimentalUnsignedTypes
class PropRefExpr : Table() {

    fun __init(_i: Int, _bb: ByteBuffer)  {
        __reset(_i, _bb)
    }
    fun __assign(_i: Int, _bb: ByteBuffer) : PropRefExpr {
        __init(_i, _bb)
        return this
    }
    val objId : Int
        get() {
            val o = __offset(4)
            return if(o != 0) bb.getInt(o + bb_pos) else 0
        }
    val propId : UByte
        get() {
            val o = __offset(6)
            return if(o != 0) bb.get(o + bb_pos).toUByte() else 0u
        }
    companion object {
        fun validateVersion() = Constants.FLATBUFFERS_1_12_0()
        fun getRootAsPropRefExpr(_bb: ByteBuffer): PropRefExpr = getRootAsPropRefExpr(_bb, PropRefExpr())
        fun getRootAsPropRefExpr(_bb: ByteBuffer, obj: PropRefExpr): PropRefExpr {
            _bb.order(ByteOrder.LITTLE_ENDIAN)
            return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb))
        }
        fun createPropRefExpr(builder: FlatBufferBuilder, objId: Int, propId: UByte) : Int {
            builder.startTable(2)
            addObjId(builder, objId)
            addPropId(builder, propId)
            return endPropRefExpr(builder)
        }
        fun startPropRefExpr(builder: FlatBufferBuilder) = builder.startTable(2)
        fun addObjId(builder: FlatBufferBuilder, objId: Int) = builder.addInt(0, objId, 0)
        fun addPropId(builder: FlatBufferBuilder, propId: UByte) = builder.addByte(1, propId.toByte(), 0)
        fun endPropRefExpr(builder: FlatBufferBuilder) : Int {
            val o = builder.endTable()
            return o
        }
    }
}
